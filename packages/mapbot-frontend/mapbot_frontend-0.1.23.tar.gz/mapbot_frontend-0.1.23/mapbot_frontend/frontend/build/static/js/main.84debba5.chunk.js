(this.webpackJsonpcartographer=this.webpackJsonpcartographer||[]).push([[0],{15:function(e,t,i){"use strict";i.r(t);var o=i(2),a=i(1),r=i.n(a),n=(i(10),i(3)),l=i.n(n);const s=[{id:"fill-it",type:"fill",filter:["all",["==","$type","Polygon"],["!=","mode","static"]],paint:{"fill-color":["get","user_color"],"fill-outline-color":"#000000","fill-opacity":.3}},{id:"gl-draw-polygon-fill-active",type:"fill",filter:["all",["==","active","true"],["==","$type","Polygon"]],paint:{"fill-color":"#fbb03b","fill-outline-color":"#fbb03b","fill-opacity":.1}},{id:"gl-draw-polygon-midpoint",type:"circle",filter:["all",["==","$type","Point"],["==","meta","midpoint"]],paint:{"circle-radius":3,"circle-color":"#fbb03b"}},{id:"gl-draw-polygon-stroke-inactive",type:"line",filter:["all",["==","active","false"],["==","$type","Polygon"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#000000","line-width":1}},{id:"gl-draw-polygon-stroke-active",type:"line",filter:["all",["==","active","true"],["==","$type","Polygon"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-line-inactive",type:"line",filter:["all",["==","active","false"],["==","$type","LineString"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#3bb2d0","line-width":2}},{id:"gl-draw-line-active",type:"line",filter:["all",["==","$type","LineString"],["==","active","true"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-polygon-and-line-vertex-stroke-inactive",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":5,"circle-color":"#fff"}},{id:"gl-draw-polygon-and-line-vertex-inactive",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":3,"circle-color":"#fbb03b"}},{id:"gl-draw-point-point-stroke-inactive",type:"circle",filter:["all",["==","active","false"],["==","$type","Point"],["==","meta","feature"],["!=","mode","static"]],paint:{"circle-radius":5,"circle-opacity":1,"circle-color":"#fff"}},{id:"gl-draw-point-inactive",type:"circle",filter:["all",["==","active","false"],["==","$type","Point"],["==","meta","feature"],["!=","mode","static"]],paint:{"circle-radius":3,"circle-color":["get","user_color"]}},{id:"gl-draw-point-stroke-active",type:"circle",filter:["all",["==","$type","Point"],["==","active","true"],["!=","meta","midpoint"]],paint:{"circle-radius":7,"circle-color":"#fff"}},{id:"gl-draw-point-active",type:"circle",filter:["all",["==","$type","Point"],["!=","meta","midpoint"],["==","active","true"]],paint:{"circle-radius":5,"circle-color":["get","user_color"]}},{id:"gl-draw-polygon-fill-static",type:"fill",filter:["all",["==","mode","static"],["==","$type","Polygon"]],paint:{"fill-color":"#404040","fill-outline-color":"#404040","fill-opacity":.1}},{id:"gl-draw-polygon-stroke-static",type:"line",filter:["all",["==","mode","static"],["==","$type","Polygon"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#404040","line-width":2}},{id:"gl-draw-line-static",type:"line",filter:["all",["==","mode","static"],["==","$type","LineString"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#404040","line-width":2}},{id:"gl-draw-point-static",type:"circle",filter:["all",["==","mode","static"],["==","$type","Point"]],paint:{"circle-radius":5,"circle-color":"#404040"}}];class c{constructor(e,t,i,o,a,r,n,l,s,c){this.filename=e,this.height=t,this.width=i,this.src_crs=o,this.src_transform=a,this.crs=r,this.bounds=n,this.base_dir=l,this.transform=s,this.raster_type=c}__dict__(){return{filename:this.filename,height:this.height,width:this.width,crs:this.crs,src_crs:this.src_crs,src_transform:this.src_transform,bounds:this.bounds,base_dir:this.base_dir,transform:this.transform,raster_type:this.raster_type}}get png_filename(){return this.filename.replace(/\.[^/.]+$/,".png")}}class d{constructor(){this.location=void 0,this.zoom=void 0,this.viewport_bounds=void 0,this.rasters=void 0,this.feature_collection=void 0,this.pointclouds=void 0,this.unique_labels=void 0,this.selected_label=void 0,this.location=[0,0],this.zoom=0,this.viewport_bounds=[0,0,0,0],this.rasters=[],this.feature_collection={type:"FeatureCollection",features:[]},this.pointclouds=[],this.unique_labels=[],this.selected_label=""}static getInstance(){return d.instance||(d.instance=new d),d.instance}static initializeFromEvent(e){const t=e.args.cartographer_state;if(!t||!this.isValidCartographerData(t))throw new Error("USER CODE ERROR: Throwing because we received invalid data from the server"+JSON.stringify(t));{const e=this.getInstance();e.location=t.location,e.zoom=t.zoom,e.viewport_bounds=t.viewport_bounds,e.rasters=t.rasters.map((e=>new c(e.filename,e.height,e.width,e.crs,e.src_crs,e.src_transform,e.bounds,e.base_dir,e.transform,e.raster_type))),console.log(t.feature_collection),e.feature_collection=t.feature_collection,e.pointclouds=t.pointclouds,e.unique_labels=t.unique_labels,e.selected_label=t.selected_label}}static isValidCartographerData(e){return e&&["location","zoom","viewport_bounds","rasters","feature_collection","pointclouds","unique_labels","selected_label"].every((t=>Object.prototype.hasOwnProperty.call(e,t)))}updateViewportFromMap(e){var t=e.unproject([1024,0]).toArray(),i=[e.unproject([0,660]).toArray(),t],o=e.unproject([512,330]).toArray();this.location=o,this.zoom=e.getZoom(),this.viewport_bounds=i.flat()}__dict__(){return{location:this.location,zoom:this.zoom,viewport_bounds:this.viewport_bounds,rasters:this.rasters.map((e=>e.__dict__())),feature_collection:this.feature_collection,pointclouds:this.pointclouds,unique_labels:this.unique_labels,selected_label:this.selected_label}}}d.instance=void 0;class p{constructor(e,t){this.sourceIds=void 0,this.map=void 0,this.container=void 0,this.sourceIds=e,this.map=t,this.container=document.createElement("div"),this.container.className="mapboxgl-ctrl mapboxgl-ctrl-top-left",this.createSliderOverlays()}createSliderOverlays(){const e={},t=document.createElement("div");t.className="map-overlay top",t.style.width="200px",this.sourceIds.forEach((i=>{const o=document.createElement("div");o.className="map-overlay-inner",o.style.display="block";const a=document.createElement("label");if(i.length<=20)a.textContent=i;else{const e=i.substring(0,20)+"...";a.textContent=e}a.title=i,a.style.display="flex";const r=document.createElement("input"),n="slider-"+i;r.id=n,r.type="range",r.min="0",r.max="100",r.step="1",i.startsWith("maxar")?r.value="100":r.value="40",r.style.width="100%",o.appendChild(a),o.appendChild(r),t.appendChild(o),e[n]=r,r.addEventListener("input",(e=>{const t=e.target.value;"raster"===window.map.getLayer(i).type?this.map.setPaintProperty(i,"raster-opacity",parseInt(t,10)/100):"fill"===window.map.getLayer(i).type&&this.map.setPaintProperty(i,"fill-opacity",parseInt(t,10)/100)}))})),this.container.appendChild(t)}onAdd(){return this.container}onRemove(){var e;null===(e=this.container.parentNode)||void 0===e||e.removeChild(this.container)}}async function u(e,t,i){let o={type:"FeatureCollection",features:t.features.filter((e=>e.properties&&"mapillary_feature"===e.properties.type&&e.properties.description===i))},a=e.getSource(i);if(a)a.setData(o);else{console.log("adding source for "+i),console.log(o.features.length),e.addSource(i,{type:"geojson",data:o});const t=new Image;t.onload=function(){e.addImage(i,t),e.addLayer({id:i+"-layer",type:"symbol",source:i,layout:{"icon-image":i,"icon-size":.15,"icon-allow-overlap":!0}})};var r="https://raw.githubusercontent.com/mapillary/mapillary_sprite_source/master/package_objects/".concat(i,".svg");fetch(r).then((e=>e.text())).then((e=>{const i=btoa(e),o="data:image/svg+xml;base64,".concat(i);t.src=o})).catch((e=>{console.error("Error fetching SVG:",e)}))}}function w(e,t,i){var o=new Set;for(const r of t){let t=e.getSource(r),n={type:"FeatureCollection",features:i.features.filter((e=>{var t;return(null===(t=e.properties)||void 0===t?void 0:t.description)===r}))};if(0!=n.features.length){if(t)t.setData(n),o.add(r);else{var a;e.addSource(r,{type:"geojson",data:n});let t=null===(a=n.features[0].properties)||void 0===a?void 0:a.color;e.addLayer({id:r,type:"fill",source:r,paint:{"fill-color":t,"fill-opacity":.4},filter:["==","$type","Polygon"]})}o.add(r)}}return o}function m(e){const t=["#FF6F40","#1CA953","#0077B6","#FFC300","#B7410E","#2F4F4F","#800080","#FF55A3"],i={};return e.forEach(((e,o)=>{i[e]=t[o%t.length]})),i}i(12).config(),r.a.accessToken=Object({NODE_ENV:"production",PUBLIC_URL:".",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_BASE_URL:"http://map-bot.com"}).MAPBOX_API_KEY||"pk.eyJ1IjoibXdlaXNzMTAiLCJhIjoiY2xoajl0OGMxMGZwYTNnczZ2OTh1eXRreCJ9.ywUieENhWVdQP3hOP4Hycg",window.MAPILLARY_API_KEY=Object({NODE_ENV:"production",PUBLIC_URL:".",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_BASE_URL:"http://map-bot.com"}).MAPILLARY_API_KEY||"MLY|6088287754621284|776bc701a5aebf616cb82964e04a6398";let f=!1;function _(){o.a.setComponentValue(window.state.__dict__())}function h(e,t){var i;console.log("http://map-bot.com/app/static/"+t.png_filename),e.addSource(t.png_filename,{type:"image",url:"http://map-bot.com/app/static/"+t.png_filename,coordinates:(i=t.bounds,[[i[0],i[3]],[i[2],i[3]],[i[2],i[1]],[i[0],i[1]]])}),"predicted_overlay"===t.raster_type?e.addLayer({id:t.png_filename,type:"raster",source:t.png_filename,paint:{"raster-fade-duration":0,"raster-opacity":.4}}):"base_satellite_image"===t.raster_type&&e.addLayer({id:t.png_filename,type:"raster",source:t.png_filename,paint:{"raster-fade-duration":0,"raster-opacity":1}}),window.sources.add(t.png_filename)}function y(){console.log("height"+window.parent.innerHeight);document.getElementById("map").style.height=window.parent.innerHeight+"px !important"}function g(e,t){!function(e){window.sources.forEach((t=>{"mapbox-dem"!==t&&"mapillary"!==t&&t.startsWith("prediction")&&(e.removeLayer(t),e.removeSource(t),window.sources.delete(t))}))}(e);for(let a=0;a<t.length;a++){let i=t[a];"predicted_overlay"===i.raster_type?(3===t.length&&2===a||2===t.length&&1===a)&&h(e,i):"base_satellite_image"!==i.raster_type||window.sources.has(i.png_filename)||h(e,i)}var i=t.map((e=>e.png_filename));const o=new p(i,e);e.addControl(o,"top-left"),window.state.updateViewportFromMap(e)}function v(e){let t=new r.a.Map({container:"map",style:"mapbox://styles/mapbox/satellite-streets-v12",center:new r.a.LngLat(e.location[0],e.location[1]),zoom:17});return window.map=t,window.draw=new l.a({displayControlsDefault:!1,controls:{},styles:s,userProperties:!0}),window.map.addControl(window.draw),window.map_initialized=!1,window.state.updateViewportFromMap(t),window.palette={},window.sources=new Set,window.draw_ctrl_visible=!1,t.on("load",(()=>{f=!0,t.addSource("mapbox-dem",{type:"raster-dem",url:"mapbox://mapbox.mapbox-terrain-dem-v1",tileSize:512,maxzoom:14}),t.setTerrain({source:"mapbox-dem",exaggeration:1.5}),u(t,window.state.feature_collection,"object--support--utility-pole"),u(t,window.state.feature_collection,"object--sign--store"),g(t,window.state.rasters)})),window.palette=m(e.unique_labels),e.feature_collection.features.forEach((e=>{const t=window.palette[e.properties.description];e.properties={...e.properties,color:t}})),t.on("draw.create",(function(e){console.log("draw.create"),e.features[0].type="Feature",e.features[0].properties={color:window.palette[window.state.selected_label],description:window.state.selected_label,type:"click"},window.draw.add(e.features[0]),window.state.feature_collection.features.push(e.features[0]),window.state.updateViewportFromMap(t);var i=w(window.map,window.state.unique_labels,window.state.feature_collection),o=[...window.state.rasters.map((e=>e.png_filename)),...Array.from(i)];const a=new p(o,window.map);window.map.addControl(a,"top-left"),_()})),t.on("draw.update",(function(e){console.log("draw.update");var i=[...window.draw.getAll().features,...window.state.feature_collection.features];window.state.feature_collection.features=Array.from(new Set(i)),window.state.updateViewportFromMap(t),_()})),t.addControl(new r.a.ScaleControl({maxWidth:80,unit:"metric"}),"bottom-right"),t}o.a.events.addEventListener(o.a.RENDER_EVENT,(function(e){const t=e.detail;d.initializeFromEvent(t),window.state=d.getInstance(),window.palette=m(window.state.unique_labels),window.map_initialized||(window.map=v(window.state),window.map_initialized=!0),window.state.unique_labels.length>0&&!window.draw_ctrl_visible&&f&&(window.draw=function(){window.map.removeControl(window.draw);const e=new l.a({displayControlsDefault:!0,controls:{polygon:!0,trash:!0,combine_features:!1,uncombine_features:!1},styles:s,userProperties:!0});return window.map.addControl(e),e}(),window.draw_ctrl_visible=!0);let i=!1;for(let n=0;n<window.state.rasters.length;n++){let e=window.state.rasters[n];window.sources.has(e.png_filename)||(i=!0)}if(f&&i&&g(window.map,window.state.rasters),f&&window.map_initialized&&window.state.feature_collection.features.length>0){var o=w(window.map,window.state.unique_labels,window.state.feature_collection),a=[...window.state.rasters.map((e=>e.png_filename)),...Array.from(o)];const e=new p(a,window.map);window.map.addControl(e,"top-left"),window.addEventListener("resize",y)}var r=window.parent.document.getElementsByClassName("block-container")[1];r.style.cssText="padding-left: 0rem !important; padding-right: 0rem !important;",console.log(r)})),o.a.setComponentReady(),o.a.setFrameHeight()}},[[15,1,2]]]);
//# sourceMappingURL=main.84debba5.chunk.js.map