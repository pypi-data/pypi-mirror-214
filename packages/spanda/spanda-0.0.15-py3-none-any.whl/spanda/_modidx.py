# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/spanda',
                'doc_host': 'https://franckalbinet.github.io',
                'git_url': 'https://github.com/franckalbinet/spanda',
                'lib_path': 'spanda'},
  'syms': { 'spanda.data.external.kssl': { 'spanda.data.external.kssl.bundle': ( 'data.external.iaea.html#bundle',
                                                                                 'spanda/data/external/kssl.py'),
                                           'spanda.data.external.kssl.get_replicates': ( 'data.external.iaea.html#get_replicates',
                                                                                         'spanda/data/external/kssl.py'),
                                           'spanda.data.external.kssl.load_wetchem': ( 'data.external.iaea.html#load_wetchem',
                                                                                       'spanda/data/external/kssl.py')},
            'spanda.data.external.lucas': {},
            'spanda.data.external.wcrc': { 'spanda.data.external.wcrc.bundle': ( 'data.external.wcrc.html#bundle',
                                                                                 'spanda/data/external/wcrc.py'),
                                           'spanda.data.external.wcrc.load_wetchem': ( 'data.external.wcrc.html#load_wetchem',
                                                                                       'spanda/data/external/wcrc.py')},
            'spanda.data.transforms': { 'spanda.data.transforms.Analytes': ('data.transforms.html#analytes', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.Analytes.__init__': ( 'data.transforms.html#analytes.__init__',
                                                                                      'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AnalytesBlock': ( 'data.transforms.html#analytesblock',
                                                                                  'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AnalytesTfm': ( 'data.transforms.html#analytestfm',
                                                                                'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AnalytesTfm.__init__': ( 'data.transforms.html#analytestfm.__init__',
                                                                                         'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AnalytesTfm.encodes': ( 'data.transforms.html#analytestfm.encodes',
                                                                                        'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AvgTfm': ('data.transforms.html#avgtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AvgTfm.encodes': ( 'data.transforms.html#avgtfm.encodes',
                                                                                   'spanda/data/transforms.py'),
                                        'spanda.data.transforms.DerivTfm': ('data.transforms.html#derivtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.DerivTfm.__init__': ( 'data.transforms.html#derivtfm.__init__',
                                                                                      'spanda/data/transforms.py'),
                                        'spanda.data.transforms.DerivTfm.encodes': ( 'data.transforms.html#derivtfm.encodes',
                                                                                     'spanda/data/transforms.py'),
                                        'spanda.data.transforms.GADFTfm': ('data.transforms.html#gadftfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.GADFTfm.__init__': ( 'data.transforms.html#gadftfm.__init__',
                                                                                     'spanda/data/transforms.py'),
                                        'spanda.data.transforms.GADFTfm.encodes': ( 'data.transforms.html#gadftfm.encodes',
                                                                                    'spanda/data/transforms.py'),
                                        'spanda.data.transforms.GADFTfm.rescale': ( 'data.transforms.html#gadftfm.rescale',
                                                                                    'spanda/data/transforms.py'),
                                        'spanda.data.transforms.LogTfm': ('data.transforms.html#logtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.LogTfm.encodes': ( 'data.transforms.html#logtfm.encodes',
                                                                                   'spanda/data/transforms.py'),
                                        'spanda.data.transforms.NormalizeTfm': ( 'data.transforms.html#normalizetfm',
                                                                                 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.NormalizeTfm.__init__': ( 'data.transforms.html#normalizetfm.__init__',
                                                                                          'spanda/data/transforms.py'),
                                        'spanda.data.transforms.NormalizeTfm.encodes': ( 'data.transforms.html#normalizetfm.encodes',
                                                                                         'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandWAvgTfm': ( 'data.transforms.html#randwavgtfm',
                                                                                'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandWAvgTfm._weights': ( 'data.transforms.html#randwavgtfm._weights',
                                                                                         'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandWAvgTfm.encodes': ( 'data.transforms.html#randwavgtfm.encodes',
                                                                                        'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandomCropTfm': ( 'data.transforms.html#randomcroptfm',
                                                                                  'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandomCropTfm.__init__': ( 'data.transforms.html#randomcroptfm.__init__',
                                                                                           'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandomCropTfm.encodes': ( 'data.transforms.html#randomcroptfm.encodes',
                                                                                          'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ResizeTfm': ('data.transforms.html#resizetfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ResizeTfm.__init__': ( 'data.transforms.html#resizetfm.__init__',
                                                                                       'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ResizeTfm.encodes': ( 'data.transforms.html#resizetfm.encodes',
                                                                                      'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SNVTfm': ('data.transforms.html#snvtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SNVTfm.encodes': ( 'data.transforms.html#snvtfm.encodes',
                                                                                   'spanda/data/transforms.py'),
                                        'spanda.data.transforms.Spectra': ('data.transforms.html#spectra', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.Spectra.reset': ( 'data.transforms.html#spectra.reset',
                                                                                  'spanda/data/transforms.py'),
                                        'spanda.data.transforms.Spectra.show': ( 'data.transforms.html#spectra.show',
                                                                                 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SpectraBlock': ( 'data.transforms.html#spectrablock',
                                                                                 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SpectraTfm': ( 'data.transforms.html#spectratfm',
                                                                               'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SpectraTfm.__init__': ( 'data.transforms.html#spectratfm.__init__',
                                                                                        'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SpectraTfm.encodes': ( 'data.transforms.html#spectratfm.encodes',
                                                                                       'spanda/data/transforms.py'),
                                        'spanda.data.transforms.To3DTfm': ('data.transforms.html#to3dtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.To3DTfm.__init__': ( 'data.transforms.html#to3dtfm.__init__',
                                                                                     'spanda/data/transforms.py'),
                                        'spanda.data.transforms.To3DTfm.encodes': ( 'data.transforms.html#to3dtfm.encodes',
                                                                                    'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ToAbsorbanceTfm': ( 'data.transforms.html#toabsorbancetfm',
                                                                                    'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ToAbsorbanceTfm.encodes': ( 'data.transforms.html#toabsorbancetfm.encodes',
                                                                                            'spanda/data/transforms.py'),
                                        'spanda.data.transforms.TrimTfm': ('data.transforms.html#trimtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.TrimTfm.encodes': ( 'data.transforms.html#trimtfm.encodes',
                                                                                    'spanda/data/transforms.py'),
                                        'spanda.data.transforms.asTabular': ( 'data.transforms.html#astabular',
                                                                              'spanda/data/transforms.py')},
            'spanda.readers': { 'spanda.readers.read_asd': ('readers.html#read_asd', 'spanda/readers.py'),
                                'spanda.readers.read_opus': ('readers.html#read_opus', 'spanda/readers.py'),
                                'spanda.readers.read_spa': ('readers.html#read_spa', 'spanda/readers.py'),
                                'spanda.readers.read_spectra': ('readers.html#read_spectra', 'spanda/readers.py'),
                                'spanda.readers.set_negative_to_min_positive': ( 'readers.html#set_negative_to_min_positive',
                                                                                 'spanda/readers.py')},
            'spanda.sig': {'spanda.sig.interp': ('sig.html#interp', 'spanda/sig.py')},
            'spanda.utils': {'spanda.utils.select_rows': ('utils.html#select_rows', 'spanda/utils.py')}}}
