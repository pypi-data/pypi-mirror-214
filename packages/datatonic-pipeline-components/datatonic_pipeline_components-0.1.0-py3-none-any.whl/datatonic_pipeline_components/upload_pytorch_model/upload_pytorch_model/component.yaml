name: Upload pytorch model
description: This component receives as an input a trained PyTorch model artifact
  stored in GCS and
inputs:
- {name: project_id, type: String, description: str - GCP project ID}
- {name: location, type: String, description: str - GCP location}
- {name: gcs_model_path, type: Artifact, description: Artifact - KFP artifact that
    includes the path to the model artifact in the uri}
- {name: local_model_file, type: String, description: 'str - File name of the model
    artifact (ie: pytorch_model.bin)'}
- {name: model_display_name, type: String, description: str - Display name for Vertex
    Model in the Model Registry}
- name: handler
  type: String
  description: |-
    str - Name of custom handler file used for serving. If using the default
    TorchServe one provide its name
- {name: model_name, type: String, description: str - Model name used for TorchServe
    (recommended to leave as default 'model'), default: model, optional: true}
- {name: version, type: String, description: str - Model version used for TorchServe
    (recommended to leave as default 'v1.0'), default: v1.0, optional: true}
- name: extra_files_to_ignore
  type: JsonArray
  description: |-
    list - List of files included in the GCS model folder that you don't
    wish to include in the .mar package
  default: '[]'
  optional: true
- name: extra_files_staging_path
  type: String
  description: |-
    str - Path to GCS folder that contains additional files that must
    be included in the .mar package
  optional: true
- name: extra_prediction_files
  type: String
  description: |-
    str - Name of additional files that must be included in the .mar
    package for serving predictions
  optional: true
- {name: requirements, type: String, description: str - Additional packages required
    by the model for serving predictions, optional: true}
- name: custom_tokenizer_path
  type: String
  description: |-
    str - Path to GCS file where the custom tokenizer is located.
    Leave blank if your model uses a default tokenizer
  optional: true
- name: custom_tokenizer_name
  type: String
  description: |-
    str - Name of custom tokenizer. Leave blank if your model uses
    a default tokenizer
  optional: true
- name: custom_container
  type: Boolean
  description: |-
    bool - Whether to use a custom container or the pre-built container.
    If using a custom, the arguments below will be used
  default: "False"
  optional: true
- name: serving_container_image_uri
  type: String
  description: |-
    str - Path to container image used for serving.
    Uses the pre-built Vertex container by default
  default: europe-docker.pkg.dev/vertex-ai/prediction/pytorch-cpu.1-12:latest
  optional: true
- name: health_route
  type: String
  description: |-
    str - Overwrites the default health route in the serving container.
    Must be set to "/ping". Only used is custom_container=True
  default: /ping
  optional: true
- name: predict_route
  type: String
  description: |-
    str - Overwrites the default prediction route in the serving container.
    Must be set to "/predictions/model"". Only used is custom_container=True
  default: /predictions/model
  optional: true
- name: serving_container_ports
  type: JsonArray
  description: |-
    list - Overwrites the default ports in the serving container.
    Only used is custom_container=True
  default: '[8080]'
  optional: true
- name: serving_environment_vars
  type: JsonObject
  description: |-
    dict - Overwrites the default environment variables in the serving container.
    Only used is custom_container=True
  default: '{"MODEL_NAME": "model"}'
  optional: true
- name: serving_container_args
  type: JsonArray
  description: |-
    list - Overwrites the CMD of the Vertex pre-built container.
    Only used is custom_container=False
  optional: true
- name: serving_container_command
  type: JsonArray
  description: |-
    list - Overwrites the ENTRYPOINT of the Vertex pre-built container.
    Only used is custom_container=False
  optional: true
- {name: model_description, type: String, description: str - Model description used
    in the Model Registry, optional: true}
- name: parent_model
  type: String
  description: |-
    str - The resource name or model ID of an existing model that the
    newly-uploaded model will be a version of. Only set this field when uploading a
    new version of an existing model.
  optional: true
- name: is_default_version
  type: Boolean
  description: |-
    bool - When set to True, the newly uploaded model version will
    automatically have alias "default" included. Subsequent uses of this model without
    a version specified will use this "default" version. When set to False, the "default"
    alias will not be moved. Actions targeting the newly-uploaded model version will
    need to specifically reference this version by ID or alias. New model uploads,
    i.e. version 1, will always be "default" aliased.,
  default: "True"
  optional: true
- {name: version_description, type: String, description: 'str - The description of
    the model version being uploaded.,', optional: true}
outputs:
- {name: vertex_model, type: Model}
implementation:
  container:
    image: dtpipelinecomponents/upload_pytorch_model:v0.1.0
    command: [python3, -m, kfp.v2.components.executor_main]
    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - upload_pytorch_model
