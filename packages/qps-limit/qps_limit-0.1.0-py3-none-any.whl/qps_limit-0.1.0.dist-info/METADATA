Metadata-Version: 2.1
Name: qps-limit
Version: 0.1.0
Summary: Run functions under any limited rate
Home-page: https://github.com/antct/rate-limit
Author: tt
Author-email: 527892245@qq.com
License: GPLv2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Description-Content-Type: text/markdown
Requires-Dist: aiolimiter

## Rate Limit

Run functions under any limited rate using `multiprocessing` + `asyncio`

### Installation

```bash
pip install qps-limit
```

or install manually via git

```bash
git clone git://github.com/antct/rate-limit.git rate-limit
cd rate-limit
python setup.py install
```

### Example

> 10 workers, each with a maximum qps of 10, to calculate the function value of `(1+1/n)^n`

```python
from qps_limit import MWrapper


async def func(n: int):
    return 1 + 1 / n, n


def params():
    for n in range(1, 1001):
        yield (), {"n": n}


def callback(r):
    return r[0] ** r[1]


engine = MWrapper(
    func=func,
    params=params(),
    num_workers=10,
    worker_max_qps=10,
    streaming=False,
    callback=callback,
    progress=True
)

for i, r in engine.start():
    print(i, r)
```

> elapsed time: 10.11s average qps: 98.96/100.00
