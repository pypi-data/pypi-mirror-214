# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class WorkItemExport(pydantic.BaseModel):
    work_item_id: int
    work_item_created: str
    work_item_modified: str
    work_item_name: str
    work_item_description: str
    work_item_status: str
    status_last_modified: typing.Dict[str, typing.Any]
    created_manually: bool
    assign_to_person_id: int
    assign_to_person: str
    work_item_template: str
    work_order_id: int
    design_element_id: int
    due_date: str
    original_start_date: str
    base_start_date: str
    base_end_date: str
    start_date: str
    end_date: str
    extended_properties: typing.Dict[str, typing.Any]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
