# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class ProductionReportExport(pydantic.BaseModel):
    production_report_id: int
    production_report_created: str
    production_report_modified: str
    production_report_name: str
    production_report_status: str
    status_last_modified: typing.Dict[str, typing.Any]
    comments: str
    reported_date: str
    submitted_date: str
    approved_date: str
    created_by_id: int
    created_by: str
    approver_id: int
    approver: str
    subcontractor: str
    extended_properties: typing.Dict[str, typing.Any]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
