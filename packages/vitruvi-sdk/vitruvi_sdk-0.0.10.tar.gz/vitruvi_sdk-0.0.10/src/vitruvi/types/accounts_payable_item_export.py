# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class AccountsPayableItemExport(pydantic.BaseModel):
    invoice_item_id: int
    invoice_id: int
    invoice_name: str
    invoice_status: str
    client_invoice_number: str
    payer_company_id: int
    payer_company_name: str
    payee_company_id: int
    payee_company_name: str
    receivable_item_created: str
    receivable_item_modified: str
    system_code: str
    operator_code: str
    invoice_item_name: str
    quantity_type: str
    work_item_id: int
    work_item_name: str
    work_item_status: str
    assigned_to_person_id: int
    assigned_to_person: str
    work_order_id: int
    work_order_name: str
    work_package_id: int
    work_package_name: str
    act_quantity: float
    est_quantity: float
    rem_quantity: float
    fcast_quantity: float
    unit: str
    unit_price: float
    overridden_unit_price: float
    est_total: float
    act_total: float
    fcast_total: float
    extended_properties: typing.Dict[str, typing.Any]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
