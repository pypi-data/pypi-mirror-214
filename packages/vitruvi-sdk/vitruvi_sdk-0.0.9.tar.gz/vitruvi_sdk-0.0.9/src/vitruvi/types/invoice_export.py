# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class InvoiceExport(pydantic.BaseModel):
    invoice_id: int
    invoice_created: str
    invoice_modified: str
    invoice_name: str
    invoice_status: str
    status_last_modified: typing.Dict[str, typing.Any]
    client_invoice_number: str
    invoice_date: str
    due_date: str
    network_operator_id: int
    network_operator: str
    program_id: int
    program: str
    program_segment_id: int
    program_segment: str
    subcontract_id: int
    subcontract_name: str
    payee_id: int
    payee_company_name: str
    payer_id: int
    payer_company_name: str
    tax_code_id: int
    tax_code_name: str
    custom_field_values: typing.Dict[str, typing.Any]
    extended_properties: typing.Dict[str, typing.Any]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
