# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class ProductionReportQuantityExport(pydantic.BaseModel):
    production_report_quantity_id: int
    production_report_quantity_created: str
    production_report_quantity_modified: str
    comments: str
    production_report_line_id: int
    material_id: int
    quantity_type: str
    quantity_name: str
    unit: str
    est_quantity: float
    act_quantity: float
    rem_quantity: float
    fcast_quantity: float
    custom_field_values: typing.Dict[str, typing.Any]
    extended_properties: typing.Dict[str, typing.Any]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
