# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class WorkPackageExport(pydantic.BaseModel):
    work_package_id: int
    work_package_created: str
    work_package_modified: str
    work_package_name: str
    work_package_description: str
    work_package_status: str
    status_last_modified: typing.Dict[str, typing.Any]
    network_operator_id: int
    network_operator: str
    program_id: int
    program: str
    program_segment_id: int
    program_segment: str
    work_package_region_id: int
    responsible_id: int
    responsible: str
    work_package_template: str
    custom_field_values: typing.Dict[str, typing.Any]
    extended_properties: typing.Dict[str, typing.Any]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
