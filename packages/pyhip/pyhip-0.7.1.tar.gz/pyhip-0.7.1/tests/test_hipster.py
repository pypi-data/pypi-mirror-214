"""test  package for hipster"""
import os
from pyhip.hipster import pyhip_cmd


def test_pyhip_cmd_core_read_write(datadir, rm_hipin):
    """test for the hip_cmd launcher/fallback version, missing exceptions"""
    rm_hipin
    cmds = ["set checklevel 0",
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            "read hdf trappedvtx.mesh.h5",
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            "write hdf -a new"]

    cmd_out = []
    for cmd in cmds:
        cmd_out += pyhip_cmd(cmd)

    log, last_cmd = pyhip_cmd("exit")
    cmd_out += last_cmd

    crw_tgt =['',
              ' <<hip[0/0]> set checklevel 0',
              " <<hip[0/0]> set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              " <<hip[0/0]> read hdf trappedvtx.mesh.h5",
              '       Found 15 bnd patches.',
              '       Found 177563  Tets.',
              '       INFO: Reading boundary face to element pointers.',
              '       Reading 17346 bnd faces.',
              '',
              '',
              '   Checking unstructured grid at check level 0, i.e. checking for',
              '       edge lengths',
              '       element volumes',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          177563 cells,',
              '          34684 nodes,',
              '          17346 bnd. faces.',
              '',
              '       INFO: hMin: 0.00108462, hMax: 0.0060782.',
              '       INFO: element volumes: min = 6.4663e-10, max = 7.25123e-09:',
              '       INFO: total grid volume: 0.000479441',
              '',
              ' <<hip[grid_1: 1/1]> set path %s' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_1: 1/1]> write hdf -a new',
              '     Writing grid level 0 (0 being finest level)',
              '      in hdf format to: %s/new' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '             including separate boundary grid (-b)',
              '             solution with all variables (-a)',
              '             asciiBound in AVBP 7.X format',
              '',
              '         writing grid in hdf5 to %s/new.mesh.h5'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '       INFO: bc tags to %s/new.asciiBound'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_1: 1/1]> exit']
    cmd_tgt= ['set checklevel 0',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              "read hdf trappedvtx.mesh.h5",
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'write hdf -a new',
              'exit']

    assert cmd_out == cmd_tgt
    assert crw_tgt == log[3:]

def test_pyhip_cmd_transform_perio_list(datadir, rm_hipin):
    """test for the hip_cmd launcher/fallback version, missing exceptions"""
    rm_hipin
    cmds = ['set checklevel 5',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'read hdf5 trappedvtx.mesh.h5',
            'var',
            'transform scale 2.000000 2.000000 2.000000',
            'transform translate 0.100000 0.000000 0.000000',
            'transform rotate x 90.00000',
            'list surface',
            'set bc-type Inlet n',
            'set bc-type Outlet n',
            'set bc-type PerioLeft n',
            'set bc-type PerioRight n',
            'set bc-type WallIn1 n',
            'set bc-type WallIn2 n',
            'set bc-type WallIn3 n',
            'set bc-type MultiperfIn n',
            'set bc-type WallIn4 n',
            'set bc-type InletHole n',
            'set bc-type WallOut n',
            'set bc-type CanyonUp n',
            'set bc-type CanyonBottom n',
            'set bc-type CanyonDown n',
            'set bc-type InletFilm n',
            'set bc-type PerioRight u00',
            'set bc-type PerioLeft l00',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'write hdf5 -a new']

    cmd_out = []
    for cmd in cmds:
        cmd_out += pyhip_cmd(cmd)

    log, last_cmd = pyhip_cmd("exit")
    cmd_out += last_cmd

    trp_tgt =['',
              ' <<hip[0/0]> set checklevel 5',
              " <<hip[0/0]> set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[0/0]> read hdf5 trappedvtx.mesh.h5',
              '       Found 15 bnd patches.',
              '       Found 177563  Tets.',
              '       INFO: Reading boundary face to element pointers.',
              '       Reading 17346 bnd faces.',
              '',
              '',
              '   Checking unstructured grid at check level 5, i.e. checking for',
              '       consistent element connectivity (expensive!) and',
              '       boundary setup.',
              '',
              '       INFO: largest dihedral/face angle 160.3 deg., elem 75108.',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          177563 cells,',
              '          34684 nodes,',
              '          17346 bnd. faces.',
              '',
              '       INFO: hMin: 0.00108462, hMax: 0.0060782.',
              '       INFO: element volumes: min = 6.4663e-10, max = 7.25123e-09:',
              '       INFO: total grid volume: 0.000479441',
              '',
              ' <<hip[grid_1: 1/1]> var',
              '  gamma:          1.4',
              '  R:              287',
              '  0 variables of type: noVaTyp',
              ' <<hip[grid_1: 1/1]> transform scale 2.000000 2.000000 2.000000',
              '       INFO: adjusting eps by scale factor to 0.00195231',
              ' <<hip[grid_1: 1/1]> transform translate 0.100000 0.000000 0.000000',
              ' <<hip[grid_1: 1/1]> transform rotate x 90.00000',
              ' <<hip[grid_1: 1/1]> list surface',
              '   Nr: Mrk(#), geoType, bcType, order, text',
              '    1: 0 ( 1),     bnd,      n,    1, Inlet',
              '    2: 0 ( 1),     bnd,      n,    2, Outlet',
              '    3: 0 ( 1),     bnd,      n,    3, PerioLeft',
              '    4: 0 ( 1),     bnd,      n,    4, PerioRight',
              '    5: 0 ( 1),     bnd,      n,    5, WallIn1',
              '    6: 0 ( 1),     bnd,      n,    6, WallIn2',
              '    7: 0 ( 1),     bnd,      n,    7, WallIn3',
              '    8: 0 ( 1),     bnd,      n,    8, MultiperfIn',
              '    9: 0 ( 1),     bnd,      n,    9, WallIn4',
              '   10: 0 ( 1),     bnd,      n,   10, InletHole',
              '   11: 0 ( 1),     bnd,      n,   11, WallOut',
              '   12: 0 ( 1),     bnd,      n,   12, CanyonUp',
              '   13: 0 ( 1),     bnd,      n,   13, CanyonBottom',
              '   14: 0 ( 1),     bnd,      n,   14, CanyonDown',
              '   15: 0 ( 1),     bnd,      n,   15, InletFilm',
              '',
              ' <<hip[grid_1: 1/1]> set bc-type Inlet n',
              ' <<hip[grid_1: 1/1]> set bc-type Outlet n',
              ' <<hip[grid_1: 1/1]> set bc-type PerioLeft n',
              ' <<hip[grid_1: 1/1]> set bc-type PerioRight n',
              ' <<hip[grid_1: 1/1]> set bc-type WallIn1 n',
              ' <<hip[grid_1: 1/1]> set bc-type WallIn2 n',
              ' <<hip[grid_1: 1/1]> set bc-type WallIn3 n',
              ' <<hip[grid_1: 1/1]> set bc-type MultiperfIn n',
              ' <<hip[grid_1: 1/1]> set bc-type WallIn4 n',
              ' <<hip[grid_1: 1/1]> set bc-type InletHole n',
              ' <<hip[grid_1: 1/1]> set bc-type WallOut n',
              ' <<hip[grid_1: 1/1]> set bc-type CanyonUp n',
              ' <<hip[grid_1: 1/1]> set bc-type CanyonBottom n',
              ' <<hip[grid_1: 1/1]> set bc-type CanyonDown n',
              ' <<hip[grid_1: 1/1]> set bc-type InletFilm n',
              ' <<hip[grid_1: 1/1]> set bc-type PerioRight u00',
              ' <<hip[grid_1: 1/1]> set bc-type PerioLeft l00',
              ' <<hip[grid_1: 1/1]> set path %s' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_1: 1/1]> write hdf5 -a new',
              '       INFO: found rotation around x by 40 deg for surface pair 00.',
              '     Writing grid level 0 (0 being finest level)',
              '      in hdf format to: %s/new' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '             including separate boundary grid (-b)',
              '             solution with all variables (-a)',
              '             asciiBound in AVBP 7.X format',
              '',
              '         writing grid in hdf5 to %s/new.mesh.h5'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '       INFO: corrected a maximal periodic mismatch of 3.10317e-17',
              '             between vertices 74, 38.',
              '       INFO: corrected a maximal periodic error in normals of 7.74065e-21.',
              '       INFO: bc tags to %s/new.asciiBound'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_1: 1/1]> exit']
    cmd_tgt= ['set checklevel 5',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'read hdf5 trappedvtx.mesh.h5',
              'var',
              'transform scale 2.000000 2.000000 2.000000',
              'transform translate 0.100000 0.000000 0.000000',
              'transform rotate x 90.00000',
              'list surface',
              'set bc-type Inlet n',
              'set bc-type Outlet n',
              'set bc-type PerioLeft n',
              'set bc-type PerioRight n',
              'set bc-type WallIn1 n',
              'set bc-type WallIn2 n',
              'set bc-type WallIn3 n',
              'set bc-type MultiperfIn n',
              'set bc-type WallIn4 n',
              'set bc-type InletHole n',
              'set bc-type WallOut n',
              'set bc-type CanyonUp n',
              'set bc-type CanyonBottom n',
              'set bc-type CanyonDown n',
              'set bc-type InletFilm n',
              'set bc-type PerioRight u00',
              'set bc-type PerioLeft l00',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'write hdf5 -a new',
              'exit']

    trp_tgt[-5:-2] = log[-5:-2]

    assert cmd_out == cmd_tgt
    assert trp_tgt == log[3:]

    cmds = ['set checklevel 5',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'read hdf5 new.mesh.h5',
            'list periodic']

    cmd_out = []
    for cmd in cmds:
        cmd_out += pyhip_cmd(cmd)

    log, last_cmd = pyhip_cmd("exit")
    cmd_out += last_cmd

    lip_tgt =['',
              ' <<hip[0/0]> set checklevel 5',
              " <<hip[0/0]> set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[0/0]> read hdf5 new.mesh.h5',
              '       Found 15 bnd patches.',
              '       Found 1 periodic patch pair[s].',
              '       Found 177563  Tets.',
              '       INFO: Reading boundary face to element pointers.',
              '       Reading 17346 bnd faces.',
              '',
              '',
              '   Checking unstructured grid at check level 5, i.e. checking for',
              '       consistent element connectivity (expensive!) and',
              '       boundary setup.',
              '',
              '       INFO: largest dihedral/face angle 160.3 deg., elem 75108.',
              '       INFO: found rotation around x by 40 deg for surface pair 00.',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          177563 cells,',
              '          34684 nodes,',
              '          17346 bnd. faces.',
              '',
              '       INFO: hMin: 0.00216924, hMax: 0.0121564.',
              '       INFO: element volumes: min = 5.17304e-09, max = 5.80099e-08:',
              '       INFO: total grid volume: 0.00383553',
              '',
              ' <<hip[grid_1: 1/1]> list periodic',
              '        PerioLeft                               PerioRight',
              ' xyz 0: +0.0000e+00, +0.0000e+00 +0.0000e+00;   +0.0000e+00, +0.0000e+00 +0.0000e+00',
              ' xyz 1: +1.0000e+00, +0.0000e+00 +0.0000e+00;   +1.0000e+00, +0.0000e+00 +0.0000e+00',
              ' xyz 2: +0.0000e+00, +1.0000e+00 +0.0000e+00;   +0.0000e+00, +7.6604e-01 +6.4279e-01',
              ' vec 0:      +1.000,      +0.000      +0.000;        +1.000,      +0.000      +0.000',
              ' vec 1:      +0.000,      +1.000      +0.000;        +0.000,      +0.766      +0.643',
              ' vec 2:      +0.000,      +0.000      +1.000;        +0.000,      -0.643      +0.766',
              ' pairs of faces: 0',
              '',
              ' <<hip[grid_1: 1/1]> exit']
    cmd_tgt= ['set checklevel 5',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'read hdf5 new.mesh.h5',
              'list periodic',
              'exit']

    assert cmd_out == cmd_tgt
    assert lip_tgt == log[3:]

def test_pyhip_cmd_adapt_factor(datadir, rm_hipin):
    """test for the hip_cmd launcher/fallback version, missing exceptions"""
    rm_hipin
    cmds = ['set checklevel 5',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'read hdf5 trappedvtx.mesh.h5',
            'var',
            'mmg3d -f 1.0',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'write hdf5 -a new']

    cmd_out = []
    for cmd in cmds:
        cmd_out += pyhip_cmd(cmd)

    log, last_cmd = pyhip_cmd("exit")
    cmd_out += last_cmd

    ada_tgt =['',
              ' <<hip[0/0]> set checklevel 5',
              " <<hip[0/0]> set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[0/0]> read hdf5 trappedvtx.mesh.h5',
              '       Found 15 bnd patches.',
              '       Found 177563  Tets.',
              '       INFO: Reading boundary face to element pointers.',
              '       Reading 17346 bnd faces.',
              '',
              '',
              '   Checking unstructured grid at check level 5, i.e. checking for',
              '       consistent element connectivity (expensive!) and',
              '       boundary setup.',
              '',
              '       INFO: largest dihedral/face angle 160.3 deg., elem 75108.',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          177563 cells,',
              '          34684 nodes,',
              '          17346 bnd. faces.',
              '',
              '       INFO: hMin: 0.00108462, hMax: 0.0060782.',
              '       INFO: element volumes: min = 6.4663e-10, max = 7.25123e-09:',
              '       INFO: total grid volume: 0.000479441',
              '',
              ' <<hip[grid_1: 1/1]> var',
              '  gamma:          1.4',
              '  R:              287',
              '  0 variables of type: noVaTyp',
              ' <<hip[grid_1: 1/1]> mmg3d -f 1.0',
              '       INFO: Initialisation of MMG3D',
              '  MAXIMUM MEMORY AUTHORIZED (MB)    8192',
              '       INFO: metric info: max = 22.049046 \t min = 16.366182 \t avg = 18.465932',
              '',
              '',
              '',
              '  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',
              '   MODULE MMG3D: 5.4.1 (Mar. 20, 2019)',
              '  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',
              '',
              '  -- MMG3DLIB: INPUT DATA',
              '  --  INPUT DATA COMPLETED.     0.000s',
              '',
              '  -- PHASE 1 : ANALYSIS',
              '',
              '  -- MESH QUALITY  177563',
              '     BEST   0.999441  AVRG.   0.816520  WRST.   0.221456 (9482)',
              '     HISTOGRAMM:  100.00 % > 0.12',
              '                   98.47 % >  0.5',
              '       0.8 < Q <   1.0    107920    60.78 %',
              '       0.6 < Q <   0.8     59800    33.68 %',
              '       0.4 < Q <   0.6      9261     5.22 %',
              '       0.2 < Q <   0.4       582     0.33 %',
              '',
              '  ** SURFACE ANALYSIS',
              '     Connected component: 1,  genus: 0,   reoriented: 0',
              '     Edges: 26019,  tagged: 749,  ridges: 0, required: 0, refs: 749',
              '     701 ridges, 749 edges updated',
              '     24 corners, 24 singular points detected',
              '  ** DEFINING GEOMETRY',
              '     7938 normals,  713 tangents updated  (0 failed)',
              '     0 required edges added',
              '     0 corner and 0 required vertices added',
              '',
              '  -- RESULTING EDGE LENGTHS  220919',
              '     AVERAGE LENGTH               1.0026',
              '     SMALLEST EDGE LENGTH         0.3668    10662  10553',
              '     LARGEST  EDGE LENGTH         1.8296    11173  10383',
              '     0.71 < L < 1.41    215456   97.53 %',
              '',
              '     HISTOGRAMM:',
              '     0.30 < L < 0.60      1076    0.49 %',
              '     0.60 < L < 0.71      3600    1.63 %',
              '     0.71 < L < 0.90     43376   19.63 %',
              '     0.90 < L < 1.30    165178   74.77 %',
              '     1.30 < L < 1.41      6902    3.12 %',
              '     1.41 < L < 2.00       787    0.36 %',
              '  -- PHASE 1 COMPLETED.     0.666s',
              '',
              '  -- PHASE 2 : ISOTROPIC MESHING',
              '  ** MESH ANALYSIS',
              '  ** GEOMETRIC MESH',
              '                             447 splitted,        0 collapsed,     4134 swapped',
              '                               0 splitted,        0 collapsed,        6 swapped',
              '  ** COMPUTATIONAL MESH',
              '',
              '  -- GRADATION : 1.400000 (2.300000)',
              '     gradation:     906 updated, 2 iter.',
              '         6521 filtered,      259 splitted,      862 collapsed,      966 swapped,     1347 moved',
              '         5774 filtered,       69 splitted,       36 collapsed,      265 swapped,       88 moved',
              '         3913 filtered,        2 splitted,       10 collapsed,       13 swapped,       16 moved',
              '          242 filtered,        0 splitted,        1 collapsed,        1 swapped,        2 moved',
              '                                                   0 improved,        6 swapped,     6905 moved',
              '                                                   0 improved,      165 swapped,     5668 moved',
              '                                                   0 improved,      102 swapped,     1871 moved',
              '         1807 filtered,       27 splitted,       16 collapsed,       94 swapped,       22 moved',
              '         1807 filtered,        2 splitted,        0 collapsed,        4 swapped,        1 moved',
              '                                                   0 improved,     1238 swapped,      213 moved',
              '                                                   0 improved,       23 swapped,       98 moved',
              '                                                   0 improved,        5 swapped,       15 moved',
              '                                                   0 improved,        2 swapped,        2 moved',
              '                                                   0 improved,        0 swapped,        1 moved',
              '                                                                                       59 moved',
              '  *** 55 internal edges connecting boundary points.',
              '  -- PHASE 2 COMPLETED.     5.288s',
              '',
              '  -- MESH QUALITY  176435',
              '     BEST   0.999707  AVRG.   0.840260  WRST.   0.203029 (175136)',
              '     HISTOGRAMM:  100.00 % > 0.12',
              '                   99.83 % >  0.5',
              '       0.8 < Q <   1.0    120629    68.37 %',
              '       0.6 < Q <   0.8     54133    30.68 %',
              '       0.4 < Q <   0.6      1539     0.87 %',
              '       0.2 < Q <   0.4       134     0.08 %',
              '',
              '  -- RESULTING EDGE LENGTHS  219672',
              '     AVERAGE LENGTH               0.9977',
              '     SMALLEST EDGE LENGTH         0.2745    35112  35113',
              '     LARGEST  EDGE LENGTH         1.5954    18308  34801',
              '     0.71 < L < 1.41    216417   98.52 %',
              '',
              '     HISTOGRAMM:',
              '     0.00 < L < 0.30         1    0.00 %',
              '     0.30 < L < 0.60       662    0.30 %',
              '     0.60 < L < 0.71      2090    0.95 %',
              '     0.71 < L < 0.90     51306   23.36 %',
              '     0.90 < L < 1.30    160338   72.99 %',
              '     1.30 < L < 1.41      4773    2.17 %',
              '     1.41 < L < 2.00       502    0.23 %',
              '',
              '  -- MESH PACKED UP',
              '     NUMBER OF VERTICES      34565   CORNERS       24',
              '     NUMBER OF TETRAHEDRA   176435',
              '     NUMBER OF EDGES           749   RIDGES       701',
              '     NUMBER OF TRIANGLES     17346',
              '',
              '   MMG3DLIB: ELAPSED TIME  5.985s',
              '',
              '  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',
              '   END OF MODULE MMG3D',
              '  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',
              '',
              '       INFO: MMG3D adaptation time 5 s',
              '       INFO: found 17346 two-faced/internal triangles.',
              '       INFO: MMG-adapted tet grid has 176435 elements, 34565 nodes, 17346 bnd faces.',
              '',
              '   Checking unstructured grid at check level 5, i.e. checking for',
              '       consistent element connectivity (expensive!) and',
              '       boundary setup.',
              '',
              '       INFO: largest dihedral/face angle 152.1 deg., elem 175136.',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          176435 cells,',
              '          34565 nodes,',
              '          17346 bnd. faces.',
              '',
              '       INFO: hMin: 0.000792469, hMax: 0.00515835.',
              '       INFO: element volumes: min = 3.94897e-10, max = 7.32058e-09:',
              '       INFO: total grid volume: 0.000479441',
              '',
              ' <<hip[grid_1: 1/1]> set path %s' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_1: 1/1]> write hdf5 -a new',
              '     Writing grid level 0 (0 being finest level)',
              '      in hdf format to: %s/new' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '             including separate boundary grid (-b)',
              '             solution with all variables (-a)',
              '             asciiBound in AVBP 7.X format',
              '',
              '         writing grid in hdf5 to %s/new.mesh.h5'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '       INFO: bc tags to %s/new.asciiBound'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_1: 1/1]> exit']
    cmd_tgt= ['set checklevel 5',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'read hdf5 trappedvtx.mesh.h5',
              'var',
              'mmg3d -f 1.0',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'write hdf5 -a new',
              'exit']

    ada_tgt[31] = log[34]
    ada_tgt[77] = log[80]
    ada_tgt[104] = log[107]
    ada_tgt[136] = log[139]
    ada_tgt[142] = log[145]

    assert cmd_out == cmd_tgt
    #assert ada_tgt == log[3:]

def test_pyhip_cmd_interpolate(datadir, rm_hipin):
    """test for the hip_cmd launcher/fallback version, missing exceptions"""
    rm_hipin
    cmds = ['set checklevel 5',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'read hdf5 -a default.mesh.h5 -s default_inst.sol.h5',
            'var',
            'set bc-text Inlet Inlet_src',
            'set bc-text Outlet Outlet_src',
            'set bc-text PerioLeft PerioLeft_src',
            'set bc-text PerioRight PerioRight_src',
            'set bc-text WallIn1 WallIn1_src',
            'set bc-text WallIn2 WallIn2_src',
            'set bc-text WallIn3 WallIn3_src',
            'set bc-text MultiperfIn MultiperfIn_src',
            'set bc-text WallIn4 WallIn4_src',
            'set bc-text InletHole InletHole_src',
            'set bc-text WallOut WallOut_src',
            'set bc-text CanyonUp CanyonUp_src',
            'set bc-text CanyonBottom CanyonBottom_src',
            'set bc-text CanyonDown CanyonDown_src',
            'set bc-text InletFilm InletFilm_src',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'read hdf5 trappedvtx.mesh.h5',
            'var',
            'interpolate grid 1',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'write hdf5 -a new']

    cmd_out = []
    for cmd in cmds:
        cmd_out += pyhip_cmd(cmd)

    log, last_cmd = pyhip_cmd("exit")
    cmd_out += last_cmd

    int_tgt =['',
              ' <<hip[0/0]> set checklevel 5',
              " <<hip[0/0]> set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[0/0]> read hdf5 -a default.mesh.h5 -s default_inst.sol.h5',
              '       Found 15 bnd patches.',
              '       Found 177563  Tets.',
              '       INFO: Reading boundary face to element pointers.',
              '       Reading 17346 bnd faces.',
              '',
              '',
              '   Checking unstructured grid at check level 5, i.e. checking for',
              '       consistent element connectivity (expensive!) and',
              '       boundary setup.',
              '',
              '       INFO: largest dihedral/face angle 160.3 deg., elem 75108.',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          177563 cells,',
              '          34684 nodes,',
              '          17346 bnd. faces.',
              '',
              '       INFO: hMin: 0.00108462, hMax: 0.0060782.',
              '       INFO: element volumes: min = 6.4663e-10, max = 7.25123e-09:',
              '       INFO: total grid volume: 0.000479441',
              '',
              '  Reading hdf5 solution from %s/default_inst.sol.h5'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_1: 1/1]> var',
              '  gamma:          1.4',
              '  R:              287',
              '  36 variables of type: cons',
              '     reference/freestream values:  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,',
              '  #  name         cat group          vec flag,   min   at    node,    max   at   node:',
              '  1: rho          oth GaseousPhase    0,   1,  1.577e-01      144,  1.336e+00      472',
              '  2: rhou         oth GaseousPhase    1,   1, -4.933e+00        3,  3.369e+00     5240',
              '  3: rhov         oth GaseousPhase    2,   1, -4.437e+00     7995,  6.475e+00       72',
              '  4: rhow         oth GaseousPhase    3,   1, -4.026e+00      108,  7.262e+00       95',
              '  5: rhoE         oth GaseousPhase    0,   1,  2.247e+05      507,  2.638e+05        6',
              '  6: dt_visual    oth Additionals     0,   1,  5.646e-07     2628,  2.516e-06    17476',
              '  7: gamma_bar    oth Additionals     0,   1,  1.298e+00        6,  1.399e+00       11',
              '  8: hypvis_artif oth Additionals     0,   1,  4.404e-10       34,  7.499e-08    21451',
              '  9: hypvis_artif oth Additionals     0,   1,  4.406e-10       34,  7.500e-08    21451',
              ' 10: mpi_rank     oth Additionals     0,   1,  0.000e+00       10,  2.300e+01        1',
              ' 11: p_shock      oth Additionals     0,   1,  0.000e+00        1,  9.776e-05    11148',
              ' 12: pressure     oth Additionals     0,   1,  8.986e+04    11039,  9.019e+04    11148',
              ' 13: r_bar        oth Additionals     0,   1,  2.882e+02        1,  2.882e+02        1',
              ' 14: ss_bar       oth Additionals     0,   1,  3.070e+02      507,  8.605e+02      121',
              ' 15: tau_turb_xy  oth Additionals     0,   1, -3.338e-01     7127,  3.783e-01      774',
              ' 16: tau_turb_xz  oth Additionals     0,   1, -3.923e-01      100,  2.215e-01     5271',
              ' 17: tau_turb_yz  oth Additionals     0,   1, -1.099e+00      576,  6.435e-01      557',
              ' 18: tau_wall_les oth Additionals     0,   1,  0.000e+00      747,  2.434e-01     4865',
              ' 19: temperature  oth Additionals     0,   1,  2.338e+02      507,  1.980e+03      121',
              ' 20: vis_artif    oth Additionals     0,   1,  4.073e-09     1373,  5.152e-05     2711',
              ' 21: vis_artif_y  oth Additionals     0,   1,  0.000e+00        1,  0.000e+00        1',
              ' 22: vis_turb     oth Additionals     0,   1,  0.000e+00     1391,  6.746e-04      576',
              ' 23: wall_EnergyF oth Additionals     0,   1, -4.603e+00      758,  4.449e+03     1185',
              ' 24: wall_EnergyF oth Additionals     0,   1, -7.249e+03     4177,  2.310e+04     7342',
              ' 25: wall_EnergyF oth Additionals     0,   1, -1.829e+04     6620,  3.265e+04     6897',
              ' 26: wall_EnergyF oth Additionals     0,   1, -2.886e+04     2785,  1.146e+04     3614',
              ' 27: wall_Stress_ oth Additionals     0,   1, -3.855e-01     7127,  1.390e-01     6897',
              ' 28: wall_Stress_ oth Additionals     0,   1, -1.336e+00     2786,  6.922e-01     2711',
              ' 29: wall_Stress_ oth Additionals     0,   1, -1.163e+00     6897,  7.185e-01     6945',
              ' 30: wall_normal_ oth Additionals     0,   1, -7.159e-01     2711,  1.403e+00     2786',
              ' 31: wall_shear_S oth Additionals     0,   1,  0.000e+00     8676,  7.145e-01     7127',
              ' 32: wall_yplus   oth Additionals     0,   1,  0.000e+00      747,  6.137e+01     2653',
              ' 33: y_plus_les   oth Additionals     0,   1,  0.000e+00      747,  4.063e+01       94',
              ' 34: zeta_p       oth Additionals     0,   1,  3.931e-07     1302,  1.986e-03    11148',
              ' 35: zeta_y       oth Additionals     0,   1,  0.000e+00        1,  0.000e+00        1',
              ' 36: AIR          oth RhoSpecies      0,   1,  1.577e-01      144,  1.336e+00      472',
              '',
              ' <<hip[grid_1: 1/1]> set bc-text Inlet Inlet_src',
              ' <<hip[grid_1: 1/1]> set bc-text Outlet Outlet_src',
              ' <<hip[grid_1: 1/1]> set bc-text PerioLeft PerioLeft_src',
              ' <<hip[grid_1: 1/1]> set bc-text PerioRight PerioRight_src',
              ' <<hip[grid_1: 1/1]> set bc-text WallIn1 WallIn1_src',
              ' <<hip[grid_1: 1/1]> set bc-text WallIn2 WallIn2_src',
              ' <<hip[grid_1: 1/1]> set bc-text WallIn3 WallIn3_src',
              ' <<hip[grid_1: 1/1]> set bc-text MultiperfIn MultiperfIn_src',
              ' <<hip[grid_1: 1/1]> set bc-text WallIn4 WallIn4_src',
              ' <<hip[grid_1: 1/1]> set bc-text InletHole InletHole_src',
              ' <<hip[grid_1: 1/1]> set bc-text WallOut WallOut_src',
              ' <<hip[grid_1: 1/1]> set bc-text CanyonUp CanyonUp_src',
              ' <<hip[grid_1: 1/1]> set bc-text CanyonBottom CanyonBottom_src',
              ' <<hip[grid_1: 1/1]> set bc-text CanyonDown CanyonDown_src',
              ' <<hip[grid_1: 1/1]> set bc-text InletFilm InletFilm_src',
              ' <<hip[grid_1: 1/1]> set path %s' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_1: 1/1]> read hdf5 trappedvtx.mesh.h5',
              '       Found 15 bnd patches.',
              '       Found 177563  Tets.',
              '       INFO: Reading boundary face to element pointers.',
              '       Reading 17346 bnd faces.',
              '',
              '',
              '   Checking unstructured grid at check level 5, i.e. checking for',
              '       consistent element connectivity (expensive!) and',
              '       boundary setup.',
              '',
              '       INFO: largest dihedral/face angle 160.3 deg., elem 75108.',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          177563 cells,',
              '          34684 nodes,',
              '          17346 bnd. faces.',
              '',
              '       INFO: hMin: 0.00108462, hMax: 0.0060782.',
              '       INFO: element volumes: min = 6.4663e-10, max = 7.25123e-09:',
              '       INFO: total grid volume: 0.000479441',
              '',
              ' <<hip[grid_2: 2/2]> var',
              '  gamma:          1.4',
              '  R:              287',
              '  0 variables of type: noVaTyp',
              ' <<hip[grid_2: 2/2]> interpolate grid 1',
              '       INFO: Interpolation status: adding vertices to the data-tree',
              '       INFO: Interpolation status: generating vertex to element pointers',
              '       INFO: Interpolation status: interpolating for vertices',
              '                 completed   0%\x08\x08\x08\x08  1%\x08\x08\x08\x08  '
              '2%\x08\x08\x08\x08  3%\x08\x08\x08\x08  4%\x08\x08\x08\x08  '
              '5%\x08\x08\x08\x08  6%\x08\x08\x08\x08  7%\x08\x08\x08\x08  '
              '8%\x08\x08\x08\x08  9%\x08\x08\x08\x08 10%\x08\x08\x08\x08 '
              '11%\x08\x08\x08\x08 12%\x08\x08\x08\x08 13%\x08\x08\x08\x08 '
              '14%\x08\x08\x08\x08 15%\x08\x08\x08\x08 16%\x08\x08\x08\x08 '
              '17%\x08\x08\x08\x08 18%\x08\x08\x08\x08 19%\x08\x08\x08\x08 '
              '20%\x08\x08\x08\x08 21%\x08\x08\x08\x08 22%\x08\x08\x08\x08 '
              '23%\x08\x08\x08\x08 24%\x08\x08\x08\x08 25%\x08\x08\x08\x08 '
              '26%\x08\x08\x08\x08 27%\x08\x08\x08\x08 28%\x08\x08\x08\x08 '
              '29%\x08\x08\x08\x08 30%\x08\x08\x08\x08 31%\x08\x08\x08\x08 '
              '32%\x08\x08\x08\x08 33%\x08\x08\x08\x08 34%\x08\x08\x08\x08 '
              '35%\x08\x08\x08\x08 36%\x08\x08\x08\x08 37%\x08\x08\x08\x08 '
              '38%\x08\x08\x08\x08 39%\x08\x08\x08\x08 40%\x08\x08\x08\x08 '
              '41%\x08\x08\x08\x08 42%\x08\x08\x08\x08 43%\x08\x08\x08\x08 '
              '44%\x08\x08\x08\x08 45%\x08\x08\x08\x08 46%\x08\x08\x08\x08 '
              '47%\x08\x08\x08\x08 48%\x08\x08\x08\x08 49%\x08\x08\x08\x08 '
              '50%\x08\x08\x08\x08 51%\x08\x08\x08\x08 52%\x08\x08\x08\x08 '
              '53%\x08\x08\x08\x08 54%\x08\x08\x08\x08 55%\x08\x08\x08\x08 '
              '56%\x08\x08\x08\x08 57%\x08\x08\x08\x08 58%\x08\x08\x08\x08 '
              '59%\x08\x08\x08\x08 60%\x08\x08\x08\x08 61%\x08\x08\x08\x08 '
              '62%\x08\x08\x08\x08 63%\x08\x08\x08\x08 64%\x08\x08\x08\x08 '
              '65%\x08\x08\x08\x08 66%\x08\x08\x08\x08 67%\x08\x08\x08\x08 '
              '68%\x08\x08\x08\x08 69%\x08\x08\x08\x08 70%\x08\x08\x08\x08 '
              '71%\x08\x08\x08\x08 72%\x08\x08\x08\x08 73%\x08\x08\x08\x08 '
              '74%\x08\x08\x08\x08 75%\x08\x08\x08\x08 76%\x08\x08\x08\x08 '
              '77%\x08\x08\x08\x08 78%\x08\x08\x08\x08 79%\x08\x08\x08\x08 '
              '80%\x08\x08\x08\x08 81%\x08\x08\x08\x08 82%\x08\x08\x08\x08 '
              '83%\x08\x08\x08\x08 84%\x08\x08\x08\x08 85%\x08\x08\x08\x08 '
              '86%\x08\x08\x08\x08 87%\x08\x08\x08\x08 88%\x08\x08\x08\x08 '
              '89%\x08\x08\x08\x08 90%\x08\x08\x08\x08 91%\x08\x08\x08\x08 '
              '92%\x08\x08\x08\x08 93%\x08\x08\x08\x08 94%\x08\x08\x08\x08 '
              '95%\x08\x08\x08\x08 96%\x08\x08\x08\x08 97%\x08\x08\x08\x08 '
              '98%\x08\x08\x08\x08 99%\x08\x08\x08\x08100%\x08\x08\x08\x08100%',
              '       INFO:  interpolated 34684 vertices,',
              '          0 (0%) using lower order reconstruction, avg. red. 0 coeff.',
              '',
              ' <<hip[grid_2: 2/2]> set path %s' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_2: 2/2]> write hdf5 -a new',
              '     Writing grid level 0 (0 being finest level)',
              '      in hdf format to: %s/new' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '             including separate boundary grid (-b)',
              '             solution with all variables (-a)',
              '             asciiBound in AVBP 7.X format',
              '',
              '         writing grid in hdf5 to %s/new.mesh.h5'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '       INFO: bc tags to %s/new.asciiBound'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '       INFO: writing solution to new.sol.h5',
              '',
              ' <<hip[grid_2: 2/2]> exit']
    cmd_tgt= ['set checklevel 5',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'read hdf5 -a default.mesh.h5 -s default_inst.sol.h5',
              'var',
              'set bc-text Inlet Inlet_src',
              'set bc-text Outlet Outlet_src',
              'set bc-text PerioLeft PerioLeft_src',
              'set bc-text PerioRight PerioRight_src',
              'set bc-text WallIn1 WallIn1_src',
              'set bc-text WallIn2 WallIn2_src',
              'set bc-text WallIn3 WallIn3_src',
              'set bc-text MultiperfIn MultiperfIn_src',
              'set bc-text WallIn4 WallIn4_src',
              'set bc-text InletHole InletHole_src',
              'set bc-text WallOut WallOut_src',
              'set bc-text CanyonUp CanyonUp_src',
              'set bc-text CanyonBottom CanyonBottom_src',
              'set bc-text CanyonDown CanyonDown_src',
              'set bc-text InletFilm InletFilm_src',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'read hdf5 trappedvtx.mesh.h5',
              'var',
              'interpolate grid 1',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'write hdf5 -a new',
              'exit']

    int_tgt[116] = log[119]

    assert cmd_out == cmd_tgt
    assert int_tgt[:-10] == log[3:-10]

def test_pyhip_cmd_decimate(datadir, rm_hipin):
    """test for the hip_cmd launcher/fallback version, missing exceptions"""
    rm_hipin
    cmds = ['set checklevel 5',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'read hdf5 trappedvtx.mesh.h5',
            'var',
            'decimate',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'write ensight -a -s0 new']

    cmd_out = []
    for cmd in cmds:
        cmd_out += pyhip_cmd(cmd)

    log, last_cmd = pyhip_cmd("exit")
    cmd_out += last_cmd

    dec_tgt =['',
              ' <<hip[0/0]> set checklevel 5',
              " <<hip[0/0]> set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[0/0]> read hdf5 trappedvtx.mesh.h5',
              '       Found 15 bnd patches.',
              '       Found 177563  Tets.',
              '       INFO: Reading boundary face to element pointers.',
              '       Reading 17346 bnd faces.',
              '',
              '',
              '   Checking unstructured grid at check level 5, i.e. checking for',
              '       consistent element connectivity (expensive!) and',
              '       boundary setup.',
              '',
              '       INFO: largest dihedral/face angle 160.3 deg., elem 75108.',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          177563 cells,',
              '          34684 nodes,',
              '          17346 bnd. faces.',
              '',
              '       INFO: hMin: 0.00108462, hMax: 0.0060782.',
              '       INFO: element volumes: min = 6.4663e-10, max = 7.25123e-09:',
              '       INFO: total grid volume: 0.000479441',
              '',
              ' <<hip[grid_1: 1/1]> var',
              '  gamma:          1.4',
              '  R:              287',
              '  0 variables of type: noVaTyp',
              ' <<hip[grid_1: 1/1]> decimate',
              '       INFO: Initialisation of MMGS',
              '  MAXIMUM MEMORY AUTHORIZED (MB)    8192',
              '',
              '  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',
              '   MODULE MMGS: 5.4.1 (Mar. 20, 2019)',
              '  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',
              '',
              '  -- MMGS: INPUT DATA',
              '  --  INPUT DATA COMPLETED.     0.000s',
              '',
              '  -- PHASE 1 : ANALYSIS',
              '     Connected component: 1,  genus: 0,   reoriented: 0',
              '     Edges: 26019,  tagged: 749,  ridges: 0, required: 0, refs: 749',
              '     701 ridges updated',
              '     24 corners, 24 singular points detected',
              '  ** DEFINING GEOMETRY',
              '     7938 normals,  713 tangents updated  (0 failed)',
              '',
              '  -- MESH QUALITY   17346',
              '     BEST   1.000000  AVRG.   0.990518  WRST.   0.732499 (677)',
              '     HISTOGRAMM:  100.00 % > 0.5',
              '       0.8 < Q <   1.0     17326    99.88 %',
              '       0.6 < Q <   0.8        20     0.12 %',
              '',
              '  -- RESULTING EDGE LENGTHS  52038',
              '     AVERAGE LENGTH               0.0100',
              '     SMALLEST EDGE LENGTH         0.0061     5524    738',
              '     LARGEST  EDGE LENGTH         0.0133     2045    337',
              '',
              '     HISTOGRAMM:',
              '     0.00 < L < 0.30     52038   100.00 %',
              '  -- PHASE 1 COMPLETED.     0.027s',
              '',
              '  -- PHASE 2 : ISOTROPIC MESHING',
              '  ** MESH ANALYSIS',
              '  ** GEOMETRIC MESH',
              '          120 splitted,     8524 collapsed,      132 swapped',
              '           64 splitted,       98 collapsed,       68 swapped',
              '           64 splitted,       43 collapsed,       52 swapped',
              '           57 splitted,       42 collapsed,       54 swapped',
              '           62 splitted,       40 collapsed,       48 swapped',
              '  ** COMPUTATIONAL MESH',
              '',
              '  -- GRADATION : DISABLED (2.300000)',
              '            1 splitted,        1 collapsed,        1 swapped,      106 moved',
              '                                                  15 swapped,      351 moved',
              '                                                   8 swapped,      276 moved',
              '                                                                   280 moved',
              '  -- PHASE 2 COMPLETED.     0.034s',
              '',
              '  -- MESH QUALITY   306',
              '     BEST   0.995873  AVRG.   0.691315  WRST.   0.012280 (195)',
              '     HISTOGRAMM:   77.45 % > 0.5',
              '       0.8 < Q <   1.0       125    40.85 %',
              '       0.6 < Q <   0.8        87    28.43 %',
              '       0.4 < Q <   0.6        40    13.07 %',
              '       0.2 < Q <   0.4        41    13.40 %',
              '       0.0 < Q <   0.2        13     4.25 %',
              '',
              '  -- RESULTING EDGE LENGTHS  918',
              '     AVERAGE LENGTH               0.1777',
              '     SMALLEST EDGE LENGTH         0.0053       16    494',
              '     LARGEST  EDGE LENGTH         1.2206     3339     93',
              '     0.60 < L < 1.30        44    4.79 %',
              '',
              '     HISTOGRAMM:',
              '     0.00 < L < 0.30       790   86.06 %',
              '     0.30 < L < 0.60        84    9.15 %',
              '     0.60 < L < 0.71        22    2.40 %',
              '     0.71 < L < 0.90         6    0.65 %',
              '     0.90 < L < 1.30        16    1.74 %',
              '',
              '  -- MESH PACKED UP',
              '     NUMBER OF VERTICES        155   CORNERS       24',
              '     NUMBER OF TRIANGLES       306',
              '     NUMBER OF EDGES           111   RIDGES       101',
              '',
              '   MMGSLIB: ELAPSED TIME  0.062s',
              '',
              '  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',
              '   END OF MODULE MMGS',
              '  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',
              '',
              '       INFO: MMGS-decimated grid has 306 elements, 155 nodes, 306 bnd faces.',
              '',
              '   Checking unstructured grid at check level 3, i.e. checking for',
              '       element volumes',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          306 cells,',
              '          155 nodes,',
              '          306 bnd. faces.',
              '',
              '       INFO: hMin: 1e+25, hMax: -1e+25.',
              '       INFO: element volumes: min = 1e+25, max = -1e+25:',
              '       INFO: total grid volume: -1e+25',
              ''
              ' <<hip[grid_1: 1/1]> set path %s' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_1: 1/1]> write ensight -a -s0 new',
              '       INFO:  writing grid in ascii ensight to new',
              ' <<hip[grid_1: 1/1]> exit']
    cmd_tgt= ['set checklevel 5',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'read hdf5 trappedvtx.mesh.h5',
              'var',
              'decimate',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'write ensight -a -s0 new',
              'exit']

    assert cmd_out == cmd_tgt
    assert dec_tgt[:31] == log[3:34]
    assert dec_tgt[-4:-1] == log[-4:-1]

def test_pyhip_cmd_generate(datadir, rm_hipin):
    """test for the hip_cmd launcher/fallback version, missing exceptions"""
    rm_hipin
    cmds = ['set checklevel 5',
            "generate 0.000000 0.000000 1.000000 1.000000 10 10",
            'copy 3D 0.000000 1.000000 10 axi',
            "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
            'write hdf5 -a new',]

    cmd_out = []
    for cmd in cmds:
        cmd_out += pyhip_cmd(cmd)

    log, last_cmd = pyhip_cmd("exit")
    cmd_out += last_cmd

    gen_tgt =['',
              ' <<hip[0/0]> set checklevel 5',
              ' <<hip[0/0]> generate 0.000000 0.000000 1.000000 1.000000 10 10',
              '',
              '   Checking unstructured grid at check level 5, i.e. checking for',
              '       consistent element connectivity (expensive!) and',
              '       boundary setup.',
              '',
              '       INFO: largest dihedral/face angle  90.0 deg., elem 1.',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          81 cells,',
              '          100 nodes,',
              '          36 bnd. faces.',
              '',
              '       INFO: hMin: 0.111111, hMax: 0.111111.',
              '       INFO: element volumes: min = 0.0123457, max = 0.0123457:',
              '       INFO: total grid volume: 1',
              '',
              ' <<hip[grid_1: 1/1]> copy 3D 0.000000 1.000000 10 axi',
              '             Number of vertices:           1100',
              '             Number of elems:              810',
              '             Number of bnd patches:        6',
              '',
              '   Checking unstructured grid at check level 5, i.e. checking for',
              '       consistent element connectivity (expensive!) and',
              '       boundary setup.',
              '',
              '       INFO: largest dihedral/face angle  90.1 deg., elem 226.',
              '       INFO: found rotation around x by 1 deg for surface pair .',
              '       INFO: found 10 vertices on the x-Axis to be treated specially.',
              '',
              '       INFO: grid seems valid.',
              '       INFO: grid contains',
              '          810 cells,',
              '          1000 nodes,',
              '          432 bnd. faces.',
              '',
              '       INFO: hMin: 0.000193925, hMax: 0.111111.',
              '       INFO: element volumes: min = 1.19707e-06, max = 2.03502e-05:',
              '       INFO: total grid volume: 0.00872664',
              '',
              ' <<hip[grid_2: 2/2]> set path %s' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_2: 2/2]> write hdf5 -a new',
              '     Writing grid level 0 (0 being finest level)',
              '      in hdf format to: %s/new' % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '             including separate boundary grid (-b)',
              '             solution with all variables (-a)',
              '             asciiBound in AVBP 7.X format',
              '',
              '         writing grid in hdf5 to %s/new.mesh.h5'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              '       INFO: corrected a maximal periodic mismatch of 1.11036e-16',
              '             between vertices 51, 951.',
              '',
              '   WARNING: Multi element mesh, Patch XMF is not supported yet. Skipping ..',
              '',
              '',
              '       INFO: corrected a maximal periodic error in normals of 8.67362e-19.',
              '       INFO: bc tags to %s/new.asciiBound'% os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              ' <<hip[grid_2: 2/2]> exit']
    cmd_tgt= ['set checklevel 5',
              "generate 0.000000 0.000000 1.000000 1.000000 10 10",
              'copy 3D 0.000000 1.000000 10 axi',
              "set path %s" % os.path.dirname(os.path.abspath(datadir.join('trappedvtx.mesh.h5'))),
              'write hdf5 -a new',
              'exit']

    #gen_tgt[51:58] = log[54:61]
    #assert cmd_out == cmd_tgt
    #assert gen_tgt == log[3:]
