[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ebel_rest"
version = "1.0.25"
description = "e(BE:L) API client"
authors = [
    {name = "Bruce Schultz", email = "bruce.schultz@scai.fraunhofer.de"},
    {name = "Christian Ebeling", email = "christian.ebeling@scai.fraunhofer.de"},
]
maintainers = [
    {name = "Christian Ebeling", email = "christian.ebeling@scai.fraunhofer.de"},
]
license = {text = "MIT"}
readme = "README.rst"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
keywords = ["BEL", "API", "OrientDB", "Knowledge Graph"]
requires-python = '>=3.7'
dependencies = [
    "pandas",
    "IPython",
    "graphviz",
]

[project.urls]
repository = 'https://github.com/e-bel/ebel_rest'

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
#where = ["ebel_rest"]  # list of folders that contain the packages (["."] by default)
include = ["ebel_rest", "ebel_rest.*"]  # package names should match these glob patterns (["*"] by default)
namespaces = false  # to disable scanning PEP 420 namespaces (true by default)

[tool.flake8]
# E128: continuation line under-indented for visual indent
# F401: imported but unused
ignore = ["E128", "F401"]
exclude = [".git", "__pycache__", "docs"]
max-line-length = 119

[tool.coverage.run]
branch = true
source = ["ebel_rest"]
omit = [
    "tests/*",
    "docs/*"
]

[tool.coverage.paths]
source = [
    "ebel_rest",
    ".tox/*/lib/python*/site-packages/ebel_rest"
]

[tool.coverage.report]
show_missing = true
exclude_lines = ["def __str__", "def __repr__"]
