# This file was auto-generated by Fern from our API Definition.

import typing

from .resources.access_token.client import AccessTokenClient, AsyncAccessTokenClient
from .resources.accounts.client import AccountsClient, AsyncAccountsClient
from .resources.identity.client import AsyncIdentityClient, IdentityClient
from .resources.institutions.client import AsyncInstitutionsClient, InstitutionsClient
from .resources.link_session.client import AsyncLinkSessionClient, LinkSessionClient
from .resources.links.client import AsyncLinksClient, LinksClient
from .resources.products.client import AsyncProductsClient, ProductsClient
from .resources.transactions.client import AsyncTransactionsClient, TransactionsClient
from .types.supported_version import SupportedVersion


class MoneyKit:
    def __init__(self, *, environment: str, moneykit_version: typing.Optional[SupportedVersion] = None, token: str):
        self._environment = environment
        self.moneykit_version = moneykit_version
        self._token = token
        self.accounts = AccountsClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.access_token = AccessTokenClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.identity = IdentityClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.institutions = InstitutionsClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.link_session = LinkSessionClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.links = LinksClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.transactions = TransactionsClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.products = ProductsClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )


class AsyncMoneyKit:
    def __init__(self, *, environment: str, moneykit_version: typing.Optional[SupportedVersion] = None, token: str):
        self._environment = environment
        self.moneykit_version = moneykit_version
        self._token = token
        self.accounts = AsyncAccountsClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.access_token = AsyncAccessTokenClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.identity = AsyncIdentityClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.institutions = AsyncInstitutionsClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.link_session = AsyncLinkSessionClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.links = AsyncLinksClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.transactions = AsyncTransactionsClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
        self.products = AsyncProductsClient(
            environment=self._environment, moneykit_version=self.moneykit_version, token=self._token
        )
