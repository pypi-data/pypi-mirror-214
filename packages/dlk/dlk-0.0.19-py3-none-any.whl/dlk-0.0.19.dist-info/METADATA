Metadata-Version: 2.1
Name: dlk
Version: 0.0.19
Summary: dlk: Deep Learning Kit
Home-page: https://github.com/cstsunfu/dlk
Author: cstsunfu
Author-email: cstsunfu@gmail.com
License: Apache Software License
Platform: UNKNOWN
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: torch (>=1.8.2)
Requires-Dist: setuptools
Requires-Dist: packaging (>=20.9)
Requires-Dist: loguru (>=0.6.0)
Requires-Dist: smart-open (>=6.0.0)
Requires-Dist: pyahocorasick (>=1.4.2)
Requires-Dist: jsoneditor (>=1.4.3)
Requires-Dist: hjson (>=3.0.2)
Requires-Dist: numpy (>=1.18)
Requires-Dist: pandas (>=1.1.6)
Requires-Dist: pandarallel (>=1.5.2)
Requires-Dist: gensim (>=4.1.2)
Requires-Dist: tensorboard (>=2.7.0)
Requires-Dist: google-auth (>=1.8.0)
Requires-Dist: markdown (>=3.3.4)
Requires-Dist: requests-oauthlib (>=1.3.0)
Requires-Dist: tokenizers (>=0.12.0)
Requires-Dist: datasets (==2.1.0)
Requires-Dist: tabulate (>=0.8.9)
Requires-Dist: transformers (==4.17.0)
Requires-Dist: pytorch-lightning (==1.6.5)
Requires-Dist: torchmetrics (>=0.10.2)

# A Deep Learning ToolKit

This project is WIP.

[Read the Docs](https://dlk.readthedocs.io/en/latest/)


## Install

```
pip install dlk

or 
git clone this repo and do

python setup.py install

```
## What's this?

* Provide a templete for deep learning (especially for nlp) training and deploy.
* Provide parameters search.
* Provide basic architecture search.
* Provide some basic modules and models.
* Provide reuse the pretrained model for predict.

## More Feature is Comming


* [ ] Tasks support
    * [ ] NLP
        * [X] Classification 
        * [X] Pair Classification 
        * [X] Regression 
        * [X] Pair Regression 
        * [X] Sequence Labeling
        * [X] Span Classification
        * [X] Relation Extraction
        * [X] Token Rerank
        * [ ] MRC SQuAD
        * [ ] Translation
        * [ ] Summary
    * [ ] CV
        * [ ] Classification 

- [ ] Generate models.

- [ ] Distill structure.

- [ ] Ensemble models for NLU(and check how to do this in NLG)

- [ ] Training Strategy
    - [X] Adversarial Training(FGM/PGD/FreeLB)
    - [X] Schedule Loss(you can control the loss schedule)
    - [X] Schedule MultiTask Loss(you can control the loss schedule for each task)
    - [X] Focal Loss

- [ ] Online service by triton.

- [ ] Data Augment.

- [ ] ~~Support LightGBM. Will split to another package.~~

* [ ] Make most complexity modules like Beam Search, CRF to be scriptable.

* [X] Add UnitTest
    * [X] Parser
    * [X] Tokenizer
    * [X] Config
    * [X] Link


