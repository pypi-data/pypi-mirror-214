{"version":3,"file":"extensionHookModel.js","names":["Djblets","ExtensionHook","Backbone","Model","extend","hookPoint","defaults","extension","initialize","get","console","assert","hooks","push","addHook","setUpHook","each","cb","context","_","prototype"],"sources":["../../../../../../static/djblets/js/extensions/models/extensionHookModel.es6.js"],"sourcesContent":["/**\n * Base class for hooks that an extension can use to augment functionality.\n *\n * Each type of hook represents a point in the codebase that an extension\n * is able to plug functionality into.\n *\n * Subclasses are expected to set a hookPoint field in the prototype to an\n * instance of ExtensionPoint.\n *\n * Instances of an ExtensionHook subclass that extensions create will be\n * automatically registered with both the extension and the list of hooks\n * for that ExtensionHook subclass.\n *\n * Callers that use ExtensionHook subclasses to provide functionality can\n * use the subclass's each() method to loop over all registered hooks.\n */\nDjblets.ExtensionHook = Backbone.Model.extend({\n    /**\n     * An ExtensionHookPoint instance.\n     *\n     * This must be defined and instantiated by a subclass of ExtensionHook,\n     * but not by subclasses created by extensions.\n     */\n    hookPoint: null,\n\n    defaults: {\n        extension: null,\n    },\n\n    /**\n     * Initialize the hook.\n     *\n     * This will add the instance of the hook to the extension's list of\n     * hooks, and to the list of known hook instances for this hook point.\n     *\n     * After initialization, setUpHook will be called, which a subclass\n     * can use to provide additional setup.\n     */\n    initialize() {\n        const extension = this.get('extension');\n\n        console.assert(this.hookPoint,\n                       'This ExtensionHook subclass must define hookPoint');\n        console.assert(extension,\n                       'An Extension instance must be passed to ExtensionHook');\n\n        extension.hooks.push(this);\n        this.hookPoint.addHook(this);\n\n        this.setUpHook();\n    },\n\n    /**\n     * Set up additional state for the hook.\n     *\n     * This can be overridden by subclasses to provide additional\n     * functionality.\n     */\n    setUpHook() {\n    },\n}, {\n    /**\n     * Loop through each registered hook instance and call the given callback.\n     *\n     * Args:\n     *     cb (function):\n     *         The callback to call.\n     *\n     *     context (object, optional):\n     *         Optional context to use when calling the callback.\n     */\n    each(cb, context) {\n        _.each(this.prototype.hookPoint.hooks, cb, context);\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAACC,aAAa,GAAGC,QAAQ,CAACC,KAAK,CAACC,MAAM,CAAC;EAC1C;AACJ;AACA;AACA;AACA;AACA;EACIC,SAAS,EAAE,IAAI;EAEfC,QAAQ,EAAE;IACNC,SAAS,EAAE;EACf,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAUA,CAAA,EAAG;IACT,MAAMD,SAAS,GAAG,IAAI,CAACE,GAAG,CAAC,WAAW,CAAC;IAEvCC,OAAO,CAACC,MAAM,CAAC,IAAI,CAACN,SAAS,EACd,mDAAmD,CAAC;IACnEK,OAAO,CAACC,MAAM,CAACJ,SAAS,EACT,uDAAuD,CAAC;IAEvEA,SAAS,CAACK,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1B,IAAI,CAACR,SAAS,CAACS,OAAO,CAAC,IAAI,CAAC;IAE5B,IAAI,CAACC,SAAS,CAAC,CAAC;EACpB,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;EACIA,SAASA,CAAA,EAAG,CACZ;AACJ,CAAC,EAAE;EACC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,IAAIA,CAACC,EAAE,EAAEC,OAAO,EAAE;IACdC,CAAC,CAACH,IAAI,CAAC,IAAI,CAACI,SAAS,CAACf,SAAS,CAACO,KAAK,EAAEK,EAAE,EAAEC,OAAO,CAAC;EACvD;AACJ,CAAC,CAAC"}