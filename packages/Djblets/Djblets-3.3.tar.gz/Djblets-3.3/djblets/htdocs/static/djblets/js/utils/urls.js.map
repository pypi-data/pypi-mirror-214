{"version":3,"file":"urls.js","names":["Djblets","buildURL","options","arguments","length","undefined","url","baseURL","queryData","queryString","indexOf","substr","$","param","anchor","parseQueryString","allowMultiValue","j","query","queryParams","split","i","queryParam","key","value","decodeURIComponent","hasOwnProperty","_","isArray","push"],"sources":["../../../../../static/djblets/js/utils/urls.es6.js"],"sourcesContent":["/**\n * Build and return a URL out of different components.\n *\n * This will construct a URL based on a base URL (which may be an absolute\n * URL, a relative path, or an empty string), optional query string data (as\n * a string, a dictionary, or array), and an optional anchor name.\n *\n * Args:\n *     options (object):\n *         The options used to construct the URL.\n *\n * Option Args:\n *     anchor (unicode, optional):\n *         An anchor to append to the URL. This may include the leading ``#``,\n *         but it's optional.\n *\n *     baseURL (string, optional):\n *         The base URL to build onto, if any. If not provided, an empty\n *         string will be used.\n *\n *     queryData (*, optional):\n *         Data for the query string. This can be a string, an object, or\n *         an array of dictionaries containing ``name`` and ``value`` keys.\n *         See :js:func:`jQuery.param` for information on what's allowed here.\n *\n *         If using an object of keys and values, the sort order is not\n *         guaranteed. It will be up to the JavaScript engine. Provide a\n *         string or array to guarantee order.\n *\n *         If using a string, and the string begins with a ``?``, it will be\n *         stripped away.\n *\n * Returns:\n *     string:\n *     The resulting URL.\n */\nDjblets.buildURL = function(options={}) {\n    let url = options.baseURL || '';\n\n    /* Build the query string, if any. */\n    const queryData = options.queryData;\n\n    if (queryData) {\n        let queryString;\n\n        if (typeof queryData === 'string') {\n            queryString = queryData;\n\n            if (queryString.indexOf('?') === 0) {\n                queryString = queryString.substr(1);\n            }\n        } else {\n            queryString = $.param(queryData);\n        }\n\n        if (queryString) {\n            url += `?${queryString}`;\n        }\n    }\n\n    /* Append an anchor, if any. */\n    const anchor = options.anchor;\n\n    if (anchor) {\n        if (anchor.indexOf('#') === 0) {\n            url += anchor;\n        } else {\n            url += `#${anchor}`;\n        }\n    }\n\n    return url;\n};\n\n\n/**\n * Parse a query string for key/value pairs.\n *\n * This takes a query string in the provided URL and parses it for standard\n * key/value pairs, returning an object representing those keys and values.\n * It can handle keys without values and optionally store multiple values\n * listed for the same key.\n *\n * Args:\n *     url (string):\n *         The URL containing a query string to parse.\n *\n *     options (object, optional):\n *         Options for controlling the parsing.\n *\n * Option Args:\n *     allowMultiValue (boolean):\n *         Whether to store multiple values for the same key, if found in\n *         the query string. The value for such a key will be an array of all\n *         values. If ``false`` (the default), only last value for a key will\n *         be stored.\n *\n * Returns:\n *     object:\n *     The resulting keys and values representing the query string.\n *\n *     If there was a query string item that did not have a value (in other\n *     words, no ``=`` was present), then its value will be ``null``.\n *\n *     If ``options.allowMultiValue`` is ``true``, and a key was used more\n *     than once, then its value will be a list of all values in the query\n *     string for that key.\n */\nDjblets.parseQueryString = function(url, options={}) {\n    const allowMultiValue = options.allowMultiValue;\n\n    let j = url.indexOf('?');\n    let queryString;\n\n    if (j === -1) {\n        /* Assume the whole thing is a query string. */\n        queryString = url;\n    } else {\n        queryString = url.substr(j + 1);\n    }\n\n    const query = {};\n\n    if (queryString.length === 0) {\n        return query;\n    }\n\n    const queryParams = queryString.split('&');\n\n    for (let i = 0; i < queryParams.length; i++) {\n        const queryParam = queryParams[i];\n        let key;\n        let value;\n\n        j = queryParam.indexOf('=');\n\n        if (j === -1) {\n            key = decodeURIComponent(queryParam);\n            value = null;\n        } else {\n            key = decodeURIComponent(queryParam.substr(0, j));\n            value = decodeURIComponent(queryParam.substr(j + 1));\n        }\n\n        if (allowMultiValue && query.hasOwnProperty(key)) {\n            if (_.isArray(query[key])) {\n                query[key].push(value);\n            } else {\n                query[key] = [query[key], value];\n            }\n        } else {\n            query[key] = value;\n        }\n    }\n\n    return query;\n};\n"],"mappings":"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"}