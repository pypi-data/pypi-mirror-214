{"version":3,"file":"extensionManagerModel.js","names":["InstalledExtension","Backbone","Model","extend","defaults","author","authorURL","configURL","dbURL","enabled","loadable","loadError","name","summary","version","url","prototype","call","enable","Promise","resolve","reject","save","wait","success","error","model","xhr","set","errorRsp","load_error","canEnable","needs_reload","Error","errorText","disable","toJSON","get","parse","rsp","stat","undefined","extension","configLink","links","dbLink","author_url","canDisable","can_disable","can_enable","href","id","class_name","sync","method","options","_","contentType","data","processData","text","$","parseJSON","responseText","err","msg","e","status","statusText","isFunction","InstalledExtensionCollection","Collection","extensions","Djblets","ExtensionManager","apiRoot","initialize","installedExtensions","load","trigger","fetch"],"sources":["../../../../../../static/djblets/js/extensions/models/extensionManagerModel.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * Represents an installed extension listed in the Manage Extensions list.\n *\n * This stores the various information about the extension that we'll display\n * to the user, and offers actions for enabling or disabling the extension.\n */\nconst InstalledExtension = Backbone.Model.extend({\n    defaults: {\n        author: null,\n        authorURL: null,\n        configURL: null,\n        dbURL: null,\n        enabled: false,\n        loadable: true,\n        loadError: null,\n        name: null,\n        summary: null,\n        version: null,\n    },\n\n    /**\n     * Return the URL to the API endpoint representing this extension.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use for making changes to this extension.\n     */\n    url() {\n        return Backbone.Model.prototype.url.call(this) + '/';\n    },\n\n    /**\n     * Enable the extension.\n     *\n     * This will submit a request to the server to enable this extension.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise that will be resolved when the request to enable the\n     *     extension completes.\n     */\n    enable() {\n        return new Promise((resolve, reject) => {\n            this.save({\n                enabled: true\n            }, {\n                wait: true,\n                success: () => resolve(),\n                error: (model, xhr) => {\n                    this.set({\n                        loadable: false,\n                        loadError: xhr.errorRsp.load_error,\n                        canEnable: !xhr.errorRsp.needs_reload,\n                    });\n\n                    reject(new Error(xhr.errorText));\n                },\n            });\n        });\n    },\n\n    /**\n     * Disable the extension.\n     *\n     * This will submit a request to the server to disable this extension.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise that will be resolved when the request to enable the\n     *     extension completes.\n     */\n    disable() {\n        return new Promise((resolve, reject) => {\n            this.save({\n                enabled: false,\n            }, {\n                wait: true,\n                success: () => resolve(),\n                error: xhr => reject(new Error(xhr.errorText)),\n            });\n        });\n    },\n\n    /**\n     * Return a JSON payload for requests sent to the server.\n     *\n     * Returns:\n     *     object:\n     *     A payload that will be serialized for making the API request.\n     */\n    toJSON() {\n        return {\n            enabled: this.get('enabled'),\n        };\n    },\n\n    /**\n     * Parse a JSON payload from the server.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload from the server.\n     *\n     * Returns:\n     *     object:\n     *     The parsed response.\n     */\n    parse(rsp) {\n        if (rsp.stat !== undefined) {\n            rsp = rsp.extension;\n        }\n\n        const configLink = rsp.links['admin-configure'];\n        const dbLink = rsp.links['admin-database'];\n\n        return {\n            author: rsp.author,\n            authorURL: rsp.author_url,\n            canDisable: rsp.can_disable,\n            canEnable: rsp.can_enable,\n            configURL: configLink ? configLink.href : null,\n            dbURL: dbLink ? dbLink.href : null,\n            enabled: rsp.enabled,\n            loadable: rsp.loadable,\n            loadError: rsp.load_error,\n            id: rsp.class_name,\n            name: rsp.name,\n            summary: rsp.summary,\n            version: rsp.version,\n        };\n    },\n\n    /**\n     * Perform AJAX requests against the server-side API.\n     *\n     * Args:\n     *     method (string):\n     *         The HTTP method to use.\n     *\n     *     model (InstalledExtension):\n     *         The extension object being synced.\n     *\n     *     options (object):\n     *         Options for the sync operation.\n     */\n    sync(method, model, options) {\n        Backbone.sync.call(this, method, model, _.defaults({\n            contentType: 'application/x-www-form-urlencoded',\n            data: model.toJSON(options),\n            processData: true,\n            error: xhr => {\n                let rsp;\n                let text;\n\n                try {\n                    rsp = $.parseJSON(xhr.responseText);\n                    text = rsp.err.msg;\n                } catch (e) {\n                    text = 'HTTP ' + xhr.status + ' ' + xhr.statusText;\n                    rsp = {\n                        loadError: text,\n                        canEnable: false,\n                    };\n                }\n\n                if (_.isFunction(options.error)) {\n                    xhr.errorText = text;\n                    xhr.errorRsp = rsp;\n                    options.error(xhr, options);\n                }\n            },\n        }, options));\n    },\n});\n\n\n/**\n * A collection of installed extensions.\n *\n * This stores the list of installed extensions, and allows fetching from\n * the API.\n */\nconst InstalledExtensionCollection = Backbone.Collection.extend({\n    model: InstalledExtension,\n\n    /**\n     * Parse the response from the server.\n     *\n     * Args:\n     *     rsp (object):\n     *         The response from the server.\n     *\n     * Returns:\n     *     object:\n     *     The parsed data from the response.\n     */\n    parse(rsp) {\n        return rsp.extensions;\n    },\n});\n\n\n/**\n * Manages installed extensions.\n *\n * This stores a collection of installed extensions, and provides\n * functionality for loading the current list from the server.\n *\n * Model Attributes:\n *     apiRoot (string):\n *         The root of the extensions API, used for all lookups.\n */\nDjblets.ExtensionManager = Backbone.Model.extend({\n    defaults: {\n        apiRoot: null,\n    },\n\n    /**\n     * Initialize the manager.\n     */\n    initialize() {\n        this.installedExtensions = new InstalledExtensionCollection();\n        this.installedExtensions.url = this.get('apiRoot');\n    },\n\n    /**\n     * Load the extensions list.\n     */\n    load() {\n        this.trigger('loading');\n\n        this.installedExtensions.fetch({\n            success: () => this.trigger('loaded'),\n        });\n    },\n});\n\n\n})();\n"],"mappings":"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"}