"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Service for offloading computationally complex NLP tasks."""
import abc
import arg_services.nlp.v1.nlp_pb2
import grpc

class NlpServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Vectors: grpc.UnaryUnaryMultiCallable[
        arg_services.nlp.v1.nlp_pb2.VectorsRequest,
        arg_services.nlp.v1.nlp_pb2.VectorsResponse,
    ]
    """Compute embeddings (i.e., vectors) for strings."""
    Similarities: grpc.UnaryUnaryMultiCallable[
        arg_services.nlp.v1.nlp_pb2.SimilaritiesRequest,
        arg_services.nlp.v1.nlp_pb2.SimilaritiesResponse,
    ]
    """Compute the similarity score between two strings."""
    DocBin: grpc.UnaryUnaryMultiCallable[
        arg_services.nlp.v1.nlp_pb2.DocBinRequest,
        arg_services.nlp.v1.nlp_pb2.DocBinResponse,
    ]
    """Process strings by spacy and return them as [binary data](https://spacy.io/api/docbin).
    Locally, spacy can restore this data **without** loading the underlying NLP models into the main memory.
    Allows one to retrieve all computed attributes (e.g., POS tags, sentences), but can only be used by Python programs.
    """

class NlpServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Vectors(
        self,
        request: arg_services.nlp.v1.nlp_pb2.VectorsRequest,
        context: grpc.ServicerContext,
    ) -> arg_services.nlp.v1.nlp_pb2.VectorsResponse:
        """Compute embeddings (i.e., vectors) for strings."""
    @abc.abstractmethod
    def Similarities(
        self,
        request: arg_services.nlp.v1.nlp_pb2.SimilaritiesRequest,
        context: grpc.ServicerContext,
    ) -> arg_services.nlp.v1.nlp_pb2.SimilaritiesResponse:
        """Compute the similarity score between two strings."""
    @abc.abstractmethod
    def DocBin(
        self,
        request: arg_services.nlp.v1.nlp_pb2.DocBinRequest,
        context: grpc.ServicerContext,
    ) -> arg_services.nlp.v1.nlp_pb2.DocBinResponse:
        """Process strings by spacy and return them as [binary data](https://spacy.io/api/docbin).
        Locally, spacy can restore this data **without** loading the underlying NLP models into the main memory.
        Allows one to retrieve all computed attributes (e.g., POS tags, sentences), but can only be used by Python programs.
        """

def add_NlpServiceServicer_to_server(servicer: NlpServiceServicer, server: grpc.Server) -> None: ...
