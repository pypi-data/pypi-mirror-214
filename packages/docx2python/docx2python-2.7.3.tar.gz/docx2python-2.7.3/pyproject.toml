[tool.poetry]
name = "docx2python"
version = "2.7.3"
description = "Extract content from docx files"
authors = ["Shay Hill <shay_public@hotmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
lxml = "^4.9.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
types-lxml = "^2022.11.8"
commitizen = "^2.39.1"
pre-commit = "^3.0.4"

[tool.commitizen]
name = "cz_conventional_commits"
version = "2.7.3"
tag_format = "$version"
version_files = [
    "pyproject.toml:^version"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# [tox]
# isolated_build = true
# envlist = py36

# [testenv]
# whitelist_externals = poetry
# commands =
#     poetry install -v
#     poetry run pytest tests/

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__.py", "**/tests/**"]

pythonVersion = "3.10"
pythonPlatform = "Any"

typeCheckingMode = "strict"
reportShadowedImports = true
reportCallInDefaultInitializer = true
reportImplicitStringConcatenation = true
reportPropertyTypeMismatch = true
reportUninitializedInstanceVariable = true
reportUnnecessaryTypeIgnoreComment = true
reportUnusedCallResult = true
reportImportCycles = false
reportIncompatibleMethodOverride = false

venvPath = "C:\\Users\\shaya\\AppData\\Local\\pypoetry\\Cache\\virtualenvs"
venv = "C:\\Users\\shaya\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\docx2python-fuFHBYOz-py3.11"
