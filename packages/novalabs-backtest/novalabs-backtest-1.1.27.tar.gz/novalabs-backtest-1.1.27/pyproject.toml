[tool.poetry]
name = "nova-backtest"
version = "1.1.27"
description = "Wrappers around Nova Labs utilities focused on safety and testability"
authors = ["Novalabs Inc. <devteam@novalabs.ai>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/Nova-DevTeam/nova-backtest"
repository = "https://github.com/Nova-DevTeam/nova-backtest"
documentation = "https://github.com/Nova-DevTeam/nova-backtest"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
numpy = "^1.24.2"
pytz = "^2023.3"
python-decouple = "^3.8"
matplotlib = "^3.7.1"
aiohttp = "^3.8.4"
asyncio = "^3.4.3"
psaw = "^0.1.0"
telethon = "^1.28.2"
requests = "^2.28.2"
types-requests = "^2.25.4"
ta = "^0.10.2"
pandas = "^2.0.1"

[tool.poetry.group.docs.dependencies]
autodoc_pydantic = "^1.8.0"
myst_parser = "^0.18.1"
nbsphinx = "^0.8.9"
sphinx = "^4.5.0"
sphinx-autobuild = "^2021.3.14"
sphinx_book_theme = "^0.3.3"
sphinx_rtd_theme = "^1.0.0"
sphinx-typlog-theme = "^0.8.0"
sphinx-panels = "^0.6.0"
toml = "^0.10.2"
myst-nb = "^0.17.1"
linkchecker = "^10.2.1"
sphinx-copybutton = "^0.5.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-dotenv = "^0.5.2"
pytest-watcher = "^0.2.6"

[tool.poetry.group.lint.dependencies]
ruff = "^0.0.249"
types-toml = "^0.10.8.1"
black = "^23.1.0"

[tool.poetry.group.typing.dependencies]
mypy = "^0.991"
types-pyyaml = "^6.0.12.2"
types-requests = "^2.28.11.5"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
setuptools = "^67.6.1"
flake8 = "^6.0.0"

[tool.ruff]
select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
]
line-length = 600

[tool.mypy]
ignore_missing_imports = "True"
disallow_untyped_defs = "True"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[tool.coverage.run]
omit = [
    "tests/*",
]

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
