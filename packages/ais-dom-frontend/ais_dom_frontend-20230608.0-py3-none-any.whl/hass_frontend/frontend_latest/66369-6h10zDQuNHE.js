"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([[66369],{66369:(s,e,t)=>{t.a(s,(async(s,i)=>{try{t.r(e);var a=t(17463),r=t(68144),n=t(79932),o=t(49684),l=t(18457),d=t(42952),c=s([o,d]);[o,d]=c.then?(await c)():c;(0,a.Z)([(0,n.Mo)("more-info-sun")],(function(s,e){return{F:class extends e{constructor(...e){super(...e),s(this)}},d:[{kind:"field",decorators:[(0,n.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,n.Cb)()],key:"stateObj",value:void 0},{kind:"method",key:"render",value:function(){if(!this.hass||!this.stateObj)return r.Ld;const s=new Date(this.stateObj.attributes.next_rising),e=new Date(this.stateObj.attributes.next_setting),t=s>e?["set","ris"]:["ris","set"];return r.dy` <hr> ${t.map((t=>r.dy` <div class="row"> <div class="key"> <span>${"ris"===t?this.hass.localize("ui.dialogs.more_info_control.sun.rising"):this.hass.localize("ui.dialogs.more_info_control.sun.setting")}</span> <ha-relative-time .hass="${this.hass}" .datetime="${"ris"===t?s:e}"></ha-relative-time> </div> <div class="value"> ${(0,o.mr)("ris"===t?s:e,this.hass.locale)} </div> </div> `))} <div class="row"> <div class="key"> ${this.hass.localize("ui.dialogs.more_info_control.sun.elevation")} </div> <div class="value"> ${(0,l.uf)(this.stateObj.attributes.elevation,this.hass.locale)} </div> </div> `}},{kind:"get",static:!0,key:"styles",value:function(){return r.iv`.row{margin:0;display:flex;flex-direction:row;justify-content:space-between}ha-relative-time{display:inline-block;white-space:nowrap}hr{border-color:var(--divider-color);border-bottom:none;margin:16px 0}`}}]}}),r.oi);i()}catch(s){i(s)}}))}}]);
//# sourceMappingURL=66369-6h10zDQuNHE.js.map