Metadata-Version: 2.1
Name: brainprint
Version: 0.4.0
Summary: A package to compute BrainPrint (shape descriptors) from FastSurfer/FreeSurfer MRI segmentations
Author-email: Martin Reuter <martin.reuter@dzne.de>, Kersten Diers <kersten.diers@dzne.de>
Maintainer-email: Martin Reuter <martin.reuter@dzne.de>
License: MIT License
        
        Copyright (c) 2019 Image Analysis, DZNE e.V.
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: homepage, https://github.com/Deep-MI/BrainPrint
Project-URL: documentation, https://github.com/Deep-MI/BrainPrint
Project-URL: source, https://github.com/Deep-MI/BrainPrint
Project-URL: tracker, https://github.com/Deep-MI/BrainPrint/issues
Keywords: neuroscience,sMRI,FreeSurfer
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Science/Research
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: pandas
Requires-Dist: lapy (<2,>=1.0.0)
Requires-Dist: psutil
Provides-Extra: all
Requires-Dist: brainprint[build] ; extra == 'all'
Requires-Dist: brainprint[doc] ; extra == 'all'
Requires-Dist: brainprint[style] ; extra == 'all'
Requires-Dist: brainprint[test] ; extra == 'all'
Provides-Extra: build
Requires-Dist: build ; extra == 'build'
Requires-Dist: twine ; extra == 'build'
Provides-Extra: full
Requires-Dist: brainprint[all] ; extra == 'full'
Provides-Extra: style
Requires-Dist: bibclean ; extra == 'style'
Requires-Dist: black ; extra == 'style'
Requires-Dist: codespell ; extra == 'style'
Requires-Dist: isort ; extra == 'style'
Requires-Dist: pydocstyle[toml] ; extra == 'style'
Requires-Dist: ruff ; extra == 'style'
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: pytest-timeout ; extra == 'test'

[![PyPI version](https://badge.fury.io/py/brainprint.svg)](https://pypi.org/project/brainprint/)
# BrainPrint

This is the `brainprint` python package, a derivative of the original
[BrainPrint-legacy](https://github.com/Deep-MI/BrainPrint-legacy) scripts,
with the primary goal to provide a Python-only version, to integrate the
[LaPy](https://github.com/Deep-MI/LaPy) package, and to remove dependencies
on third-party software (shapeDNA-* binaries, gmsh, meshfix). As a result,
some functionality of the original BrainPrint-legacy scripts is no longer
maintained (currently no support of tetrahedral meshes and no support of
cortical parcellations or label files).

## Installation

Use the following code to install the latest release of LaPy into your local
Python package directory:

`python3 -m pip install brainprint`

This will also install the necessary dependencies, e.g. the [LaPy](https://github.com/Deep-MI/LaPy)
package. You may need to add your local Python package directory to your $PATH
in order to run the scripts.

## Usage
### Command Line Interface (CLI)

Once installed, the package provides a `brainprint` executable which can be run from the command line.

The `brainprint` CLI enables per-subject computation of the individual brainprint descriptors. Its usage and options are summarized below;
detailed info is available by calling the script without any arguments from the command line.

```sh
brainprint --sdir <directory> --sid <SubjectID>  [--num <num>] [--evec] [--skipcortex] [--norm <surface|volume|geometry|none> ] [--reweight] [--asymmetry] [--outdir <directory>] [--help] [--more-help]

Options:
  --help           Show this help message and exit
  --more-help      Show extensive help message and exit

Required options:
  --sid <SubjectID>
                   Subject ID (FreeSurfer-processed directory inside the
                   subjects directory)
  --sdir <directory>
                   FreeSurfer subjects directory

Processing directives:
  --num <num>      Number of eigenvalues/vectors to compute (default: 50)
  --evec           Switch on eigenvector computation (default: off)
  --skipcortex     Skip cortical surfaces (default: off)
  --norm <surface|volume|geometry|none>
                   Switch on eigenvalue normalization; will be either surface,
                   volume, or determined by the geometry of the object. Use
                   "none" or leave out entirely to skip normalization.
  --reweight       Switch on eigenvalue reweighting (default: off)
  --asymmetry      Perform left-right asymmetry calculation (default: off)
  --cholmod        Switch on use of (faster) Cholesky decomposition instead
                   of (slower) LU decomposition (default: off). May require 
                   manual install of scikit-sparse package. 

Output parameters:
  --outdir=OUTDIR  Output directory (default: <sdir>/<sid>/brainprint)
  --keep-temp      Whether to keep the temporary files directory or not
                   by default False
```

### Python Package

`brainprint` can also be run within a pure Python environment, i.e. installed and imported as a Python package. E.g.:

```python
>>> from brainprint import Brainprint

>>> subjects_dir = "/path/to/freesurfer/subjects_dir/"
>>> subject_id = "42"

>>> bp = Brainprint(subjects_dir=subjects_dir, asymmetry=True, keep_eigenvectors=True)
>>> results = bp.run(subject_id=subject_id)
>>> results
{"eigenvalues": PosixPath("/path/to/freesurfer/subjects_dir/subject_id/brainprint/subject_id.brainprint.csv"), "eigenvectors": PosixPath("/path/to/freesurfer/subjects_dir/subject_id/brainprint/eigenvectors"), "distances": PosixPath("/path/to/freesurfer/subjects_dir/subject_id/brainprint/subject_id.brainprint.asymmetry.csv")}
```

## Output

The script will create an output directory that contains a CSV table with
values (in that order) for the area, volume, and first n eigenvalues per each
FreeSurfer structure. An additional output file will be created if the
asymmetry calculation is performed and/or for the eigenvectors (CLI `--evecs` flag or `keep_eigenvectors` on class initialization).

## Changes

There are some changes in functionality in comparison to the original [BrainPrint](https://github.com/Deep-MI/BrainPrint-legacy)
scripts:

- currently no support for tetrahedral meshes
- currently no support for analyses of cortical parcellation or label files
- no more Python 2.x compatibility

## References

If you use this software for a publication please cite:

[1] BrainPrint: a discriminative characterization of brain morphology. Wachinger C, Golland P, Kremen W, Fischl B, Reuter M. Neuroimage. 2015;109:232-48. http://dx.doi.org/10.1016/j.neuroimage.2015.01.032 http://www.ncbi.nlm.nih.gov/pubmed/25613439

[2] Laplace-Beltrami spectra as 'Shape-DNA' of surfaces and solids. Reuter M, Wolter F-E, Peinecke N Computer-Aided Design. 2006;38:342-366. http://dx.doi.org/10.1016/j.cad.2005.10.011
