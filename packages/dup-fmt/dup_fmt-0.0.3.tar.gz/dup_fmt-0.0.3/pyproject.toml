[build-system]
requires = [
    "hatchling>=1.8.0",
    # This plug-in support for py-version >= 3.9
    # "hatch-semver",
]
build-backend = "hatchling.build"

[project]
name = "dup-fmt"
description = "The utility formatter objects for the data engine package"
readme = "README.md"
requires-python = ">=3.8.10"
license = "MIT"
keywords = [
    'data',
    'formatter',
]
authors = [
    { name = "korawica", email = "korawich.anu@gmail.com" },
]
classifiers = [
    "Topic :: Utilities",
    "Natural Language :: English",
    #"Development Status :: 3 - Alpha",
    "Development Status :: 4 - Beta",
    #"Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "python-dateutil>=2.8.2,<3.0.0",
    "packaging>=23.1,<24",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/korawica/dup-fmt/"
"Source Code" = "https://github.com/korawica/dup-fmt/"

[project.optional-dependencies]
test = [
    "pytest>=7.1.3",
    "coverage[toml]>=7.0.0",
    "mypy>=0.982",
    "types-python-dateutil",
]
dev = [
    "hatch>=1.6.0",
    "ruff>=0.0.138",
    "pre-commit>=2.17.0",
    "bump2version>=1.0.1"
]

# TODO: Implement cli for use on cmd
# [project.scripts]
# dupfmt = "dup_fmt.cli:main"

[tool.coverage.run]
branch = true
concurrency = ["thread", "multiprocessing"]
parallel = true
context = '${CONTEXT}'
source = [
    "dup_fmt",
]
omit = [
    "dup_fmt/__about__.py",
    "dup_fmt/utils.py",
]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == __main__:",
    "if TYPE_CHECKING:",
]

[tool.hatch.version]
scheme = "standard"
source = "code"
path = "dup_fmt/__about__.py"

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/docs",
    "/scripts",
    "/.pre-commit-config.yaml",
]

[tool.hatch.build.targets.wheel]
packages = ["dup_fmt"]

[tool.pytest.ini_options]
console_output_style = "count"
addopts = [
    "--strict-config",
    "--strict-markers",
]
filterwarnings = ["error"]

[tool.mypy]
python_version = "3.8"
files = ["dup_fmt"]
show_error_codes = true
pretty = true
strict = true
#local_partial_types = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "dup_fmt.utils"
warn_unused_ignores = false
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[tool.black]
line-length = 80
target-version = ['py38']
exclude = """
/(
    \\.git
    | \\.__pycache__
    | \\.idea
    | \\.ruff_cache
    | \\.mypy_cache
    | \\.pytest_cache
    | \\.venv
    | _build
    | buck-out
    | build
    | dist
)/
"""

[tool.ruff]
line-length = 80
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    "build",
    "dist",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["pydantic"]
