{"version":3,"file":"chunks/app_components_events_interfaces_frame_utils_tsx-app_components_segmentedControl_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/interfaces/frame/utils.tsx","webpack:///./app/components/events/interfaces/types.tsx","webpack:///./app/components/segmentedControl.tsx"],"sourcesContent":["import {IconQuestion, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Event, EventOrGroupType, Frame, PlatformType} from 'sentry/types';\nimport {defined, objectIsEmpty} from 'sentry/utils';\n\nimport {SymbolicatorStatus} from '../types';\n\nexport function trimPackage(pkg: string) {\n  const pieces = pkg.split(/^([a-z]:\\\\|\\\\\\\\)/i.test(pkg) ? '\\\\' : '/');\n  const filename = pieces[pieces.length - 1] || pieces[pieces.length - 2] || pkg;\n  return filename.replace(/\\.(dylib|so|a|dll|exe)$/, '');\n}\n\nexport function getPlatform(dataPlatform: PlatformType | null, platform: string) {\n  // prioritize the frame platform but fall back to the platform\n  // of the stack trace / exception\n  return dataPlatform || platform;\n}\n\nexport function getFrameHint(frame: Frame) {\n  // returning [hintText, hintIcon]\n  const {symbolicatorStatus} = frame;\n  const func = frame.function || '<unknown>';\n  // Custom color used to match adjacent text.\n  const warningIcon = <IconQuestion size=\"xs\" color={'#2c45a8' as any} />;\n  const errorIcon = <IconWarning size=\"xs\" color=\"red300\" />;\n\n  if (func.match(/^@objc\\s/)) {\n    return [t('Objective-C -> Swift shim frame'), warningIcon];\n  }\n  if (func.match(/^__?hidden#\\d+/)) {\n    return [t('Hidden function from bitcode build'), errorIcon];\n  }\n  if (!symbolicatorStatus && func === '<unknown>') {\n    // Only render this if the event was not symbolicated.\n    return [t('No function name was supplied by the client SDK.'), warningIcon];\n  }\n\n  if (\n    func === '<unknown>' ||\n    (func === '<redacted>' && symbolicatorStatus === SymbolicatorStatus.MISSING_SYMBOL)\n  ) {\n    switch (symbolicatorStatus) {\n      case SymbolicatorStatus.MISSING_SYMBOL:\n        return [t('The symbol was not found within the debug file.'), warningIcon];\n      case SymbolicatorStatus.UNKNOWN_IMAGE:\n        return [t('No image is specified for the address of the frame.'), warningIcon];\n      case SymbolicatorStatus.MISSING:\n        return [\n          t('The debug file could not be retrieved from any of the sources.'),\n          errorIcon,\n        ];\n      case SymbolicatorStatus.MALFORMED:\n        return [t('The retrieved debug file could not be processed.'), errorIcon];\n      default:\n    }\n  }\n\n  if (func === '<redacted>') {\n    return [t('Unknown system frame. Usually from beta SDKs'), warningIcon];\n  }\n\n  return [null, null];\n}\n\nexport function isDotnet(platform: string) {\n  // csharp platform represents .NET and can be F#, VB or any language targeting CLS (the Common Language Specification)\n  return platform === 'csharp';\n}\n\nexport function hasContextSource(frame: Frame) {\n  return defined(frame.context) && !!frame.context.length;\n}\n\nexport function hasContextVars(frame: Frame) {\n  return !objectIsEmpty(frame.vars || {});\n}\n\nexport function hasContextRegisters(registers: Record<string, string>) {\n  return !objectIsEmpty(registers);\n}\n\nexport function hasAssembly(frame: Frame, platform?: string) {\n  return (\n    isDotnet(getPlatform(frame.platform, platform ?? 'other')) && defined(frame.package)\n  );\n}\n\nexport function isExpandable({\n  frame,\n  registers,\n  emptySourceNotation,\n  platform,\n  isOnlyFrame,\n}: {\n  frame: Frame;\n  registers: Record<string, string>;\n  emptySourceNotation?: boolean;\n  isOnlyFrame?: boolean;\n  platform?: string;\n}) {\n  return (\n    (!isOnlyFrame && emptySourceNotation) ||\n    hasContextSource(frame) ||\n    hasContextVars(frame) ||\n    hasContextRegisters(registers) ||\n    hasAssembly(frame, platform)\n  );\n}\n\nexport function getLeadHint({\n  event,\n  hasNextFrame,\n}: {\n  event: Event;\n  hasNextFrame: boolean;\n}) {\n  if (hasNextFrame) {\n    return t('Called from');\n  }\n\n  switch (event.type) {\n    case EventOrGroupType.ERROR:\n      // ANRs/AppHangs are errors, but not crashes, so \"Crashed in non-app\" might be confusing as if\n      // there was a crash prior to ANR, hence special-casing them\n      return isAnrEvent(event) ? t('Occurred in non-app') : t('Crashed in non-app');\n    default:\n      return t('Occurred in non-app');\n  }\n}\n\nfunction isAnrEvent(event: Event) {\n  const mechanismTag = event.tags?.find(({key}) => key === 'mechanism')?.value;\n  const isANR =\n    mechanismTag === 'ANR' ||\n    mechanismTag === 'AppExitInfo' ||\n    mechanismTag === 'AppHang' ||\n    mechanismTag === 'mx_hang_diagnostic';\n  return isANR;\n}\n","export enum SymbolicatorStatus {\n  SYMBOLICATED = 'symbolicated',\n  MISSING_SYMBOL = 'missing_symbol',\n  UNKNOWN_IMAGE = 'unknown_image',\n  MISSING = 'missing',\n  MALFORMED = 'malformed',\n}\n","import {useMemo, useRef} from 'react';\nimport {Theme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {AriaRadioProps, useRadio, useRadioGroup} from '@react-aria/radio';\nimport {Item, useCollection} from '@react-stately/collections';\nimport {ListCollection} from '@react-stately/list';\nimport {RadioGroupProps, RadioGroupState, useRadioGroupState} from '@react-stately/radio';\nimport {CollectionBase, ItemProps, Node} from '@react-types/shared';\nimport {LayoutGroup, motion} from 'framer-motion';\n\nimport InteractionStateLayer from 'sentry/components/interactionStateLayer';\nimport {Tooltip, TooltipProps} from 'sentry/components/tooltip';\nimport {space} from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {FormSize} from 'sentry/utils/theme';\n\nexport interface SegmentedControlItemProps<Value extends string>\n  extends Omit<ItemProps<any>, 'children'> {\n  key: Value;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  /**\n   * Optional icon to be rendered to the left of the segment label. Use this prop to\n   * ensure proper vertical alignment.\n   *\n   * NOTE: if the segment contains only an icon and no text label (i.e. `children` is\n   * not defined), then an `aria-label` must be provided for screen reader support.\n   */\n  icon?: React.ReactNode;\n  /**\n   * Optional tooltip that appears when the use hovers over the segment. Avoid using\n   * tooltips if there are other, more visible ways to display the same information.\n   */\n  tooltip?: React.ReactNode;\n  /**\n   * Additional props to be passed into <Tooltip />.\n   */\n  tooltipOptions?: Omit<TooltipProps, 'children' | 'title' | 'className'>;\n}\n\ntype Priority = 'default' | 'primary';\nexport interface SegmentedControlProps<Value extends string>\n  extends Omit<RadioGroupProps, 'value' | 'defaultValue' | 'onChange'>,\n    CollectionBase<any> {\n  defaultValue?: Value;\n  disabled?: RadioGroupProps['isDisabled'];\n  onChange?: (value: Value) => void;\n  priority?: Priority;\n  size?: FormSize;\n  value?: Value;\n}\n\nconst collectionFactory = (nodes: Iterable<Node<any>>) => new ListCollection(nodes);\n\nexport function SegmentedControl<Value extends string>({\n  value,\n  defaultValue,\n  onChange,\n  size = 'md',\n  priority = 'default',\n  disabled,\n  ...props\n}: SegmentedControlProps<Value>) {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const collection = useCollection(props, collectionFactory);\n  const ariaProps: RadioGroupProps = {\n    ...props,\n    // Cast value/defaultValue as string to comply with AriaRadioGroupProps. This is safe\n    // as value and defaultValue are already strings (their type, Value, extends string)\n    value: value as string,\n    defaultValue: defaultValue as string,\n    onChange: onChange && (val => onChange(val as Value)),\n    orientation: 'horizontal',\n    isDisabled: disabled,\n  };\n\n  const state = useRadioGroupState(ariaProps);\n  const {radioGroupProps} = useRadioGroup(ariaProps, state);\n\n  const collectionList = useMemo(() => [...collection], [collection]);\n\n  return (\n    <GroupWrap {...radioGroupProps} size={size} priority={priority} ref={ref}>\n      <LayoutGroup id={radioGroupProps.id}>\n        {collectionList.map(option => (\n          <Segment\n            {...option.props}\n            key={option.key}\n            nextKey={option.nextKey}\n            prevKey={option.prevKey}\n            value={String(option.key)}\n            isDisabled={option.props.disabled}\n            state={state}\n            size={size}\n            priority={priority}\n            layoutGroupId={radioGroupProps.id}\n          >\n            {option.rendered}\n          </Segment>\n        ))}\n      </LayoutGroup>\n    </GroupWrap>\n  );\n}\n\nSegmentedControl.Item = Item as <Value extends string>(\n  props: SegmentedControlItemProps<Value>\n) => JSX.Element;\n\ninterface SegmentProps<Value extends string>\n  extends SegmentedControlItemProps<Value>,\n    AriaRadioProps {\n  lastKey: string;\n  layoutGroupId: string;\n  priority: Priority;\n  size: FormSize;\n  state: RadioGroupState;\n  nextKey?: string;\n  prevKey?: string;\n}\n\nfunction Segment<Value extends string>({\n  state,\n  nextKey,\n  prevKey,\n  size,\n  priority,\n  layoutGroupId,\n  tooltip,\n  tooltipOptions = {},\n  icon,\n  ...props\n}: SegmentProps<Value>) {\n  const ref = useRef<HTMLInputElement>(null);\n\n  const {inputProps} = useRadio(props, state, ref);\n\n  const prevOptionIsSelected = defined(prevKey) && state.selectedValue === prevKey;\n  const nextOptionIsSelected = defined(nextKey) && state.selectedValue === nextKey;\n\n  const isSelected = state.selectedValue === props.value;\n  const showDivider = !isSelected && !nextOptionIsSelected;\n\n  const {isDisabled} = props;\n  const content = (\n    <SegmentWrap\n      size={size}\n      isSelected={isSelected}\n      isDisabled={isDisabled}\n      data-test-id={props.value}\n    >\n      <SegmentInput {...inputProps} ref={ref} />\n      {!isDisabled && (\n        <SegmentInteractionStateLayer\n          nextOptionIsSelected={nextOptionIsSelected}\n          prevOptionIsSelected={prevOptionIsSelected}\n        />\n      )}\n      {isSelected && (\n        <SegmentSelectionIndicator\n          layoutId={layoutGroupId}\n          transition={{type: 'tween', ease: 'easeOut', duration: 0.2}}\n          priority={priority}\n          aria-hidden\n        />\n      )}\n\n      <Divider visible={showDivider} role=\"separator\" aria-hidden />\n\n      <LabelWrap size={size} role=\"presentation\">\n        {icon}\n        {/* Once an item is selected, it gets a heavier font weight and becomes slightly\n        wider. To prevent layout shifts, we need a hidden container (HiddenLabel) that\n        will always have normal weight to take up constant space; and a visible,\n        absolutely positioned container (VisibleLabel) that doesn't affect the layout. */}\n        {props.children && (\n          <InnerLabelWrap role=\"presentation\">\n            <HiddenLabel aria-hidden>{props.children}</HiddenLabel>\n            <VisibleLabel\n              isSelected={isSelected}\n              isDisabled={isDisabled}\n              priority={priority}\n              role=\"presentation\"\n            >\n              {props.children}\n            </VisibleLabel>\n          </InnerLabelWrap>\n        )}\n      </LabelWrap>\n    </SegmentWrap>\n  );\n\n  if (tooltip) {\n    return (\n      <Tooltip\n        skipWrapper\n        title={tooltip}\n        {...{delay: 500, position: 'bottom', ...tooltipOptions}}\n      >\n        {content}\n      </Tooltip>\n    );\n  }\n\n  return content;\n}\n\nconst GroupWrap = styled('div')<{priority: Priority; size: FormSize}>`\n  position: relative;\n  display: inline-grid;\n  grid-auto-flow: column;\n  background: ${p =>\n    p.priority === 'primary' ? p.theme.background : p.theme.backgroundTertiary};\n  border: solid 1px ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  min-width: 0;\n\n  ${p => p.theme.form[p.size]}\n`;\n\nconst SegmentWrap = styled('label')<{\n  isSelected: boolean;\n  size: FormSize;\n  isDisabled?: boolean;\n}>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin: 0;\n  border-radius: calc(${p => p.theme.borderRadius} - 1px);\n  cursor: ${p => (p.isDisabled ? 'default' : 'pointer')};\n  min-height: 0;\n  min-width: 0;\n\n  ${p => p.theme.buttonPadding[p.size]}\n  font-weight: 400;\n\n  ${p =>\n    !p.isDisabled &&\n    `\n    &:hover {\n      background-color: inherit;\n\n      [role='separator'] {\n        opacity: 0;\n      }\n    }\n  `}\n\n  ${p => p.isSelected && `z-index: 1;`}\n`;\n\nconst SegmentInput = styled('input')`\n  appearance: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n\n  border-radius: ${p => p.theme.borderRadius};\n  transition: box-shadow 0.125s ease-out;\n  z-index: -1;\n\n  /* Reset global styles */\n  && {\n    padding: 0;\n    margin: 0;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst SegmentInteractionStateLayer = styled(InteractionStateLayer)<{\n  nextOptionIsSelected: boolean;\n  prevOptionIsSelected: boolean;\n}>`\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  width: auto;\n  height: auto;\n  transform: none;\n\n  /* Prevent small gaps between adjacent pairs of selected & hovered radios (due to their\n  border radius) by extending the hovered radio's interaction state layer into and\n  behind the selected radio. */\n  transition: left 0.2s, right 0.2s;\n  ${p => p.prevOptionIsSelected && `left: calc(-${p.theme.borderRadius} - 2px);`}\n  ${p => p.nextOptionIsSelected && `right: calc(-${p.theme.borderRadius} - 2px);`}\n`;\n\nconst SegmentSelectionIndicator = styled(motion.div)<{priority: Priority}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  ${p =>\n    p.priority === 'primary'\n      ? `\n    background: ${p.theme.active};\n    border-radius: ${p.theme.borderRadius};\n    input.focus-visible ~ & {\n      box-shadow: 0 0 0 3px ${p.theme.focus};\n    }\n\n    top: -1px;\n    bottom: -1px;\n    label:first-child > & {\n      left: -1px;\n    }\n    label:last-child > & {\n      right: -1px;\n    }\n  `\n      : `\n    background: ${p.theme.backgroundElevated};\n    border-radius: calc(${p.theme.borderRadius} - 1px);\n    box-shadow: 0 0 2px rgba(43, 34, 51, 0.32);\n    input.focus-visible ~ & {\n      box-shadow: 0 0 0 2px ${p.theme.focusBorder};\n    }\n  `}\n`;\n\nconst LabelWrap = styled('span')<{size: FormSize}>`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  gap: ${p => (p.size === 'xs' ? space(0.5) : space(0.75))};\n  z-index: 1;\n`;\n\nconst InnerLabelWrap = styled('span')`\n  position: relative;\n  display: flex;\n  line-height: 1;\n  min-width: 0;\n`;\n\nconst HiddenLabel = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  margin: 0 2px;\n  visibility: hidden;\n  user-select: none;\n`;\n\nfunction getTextColor({\n  isDisabled,\n  isSelected,\n  priority,\n  theme,\n}: {\n  isSelected: boolean;\n  priority: Priority;\n  theme: Theme;\n  isDisabled?: boolean;\n}) {\n  if (isDisabled) {\n    return `color: ${theme.subText};`;\n  }\n\n  if (isSelected) {\n    return priority === 'primary'\n      ? `color: ${theme.white};`\n      : `color: ${theme.headingColor};`;\n  }\n\n  return `color: ${theme.textColor};`;\n}\n\nconst VisibleLabel = styled('span')<{\n  isSelected: boolean;\n  priority: Priority;\n  isDisabled?: boolean;\n}>`\n  ${p => p.theme.overflowEllipsis}\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: color 0.25s ease-out;\n\n  user-select: none;\n  font-weight: ${p => (p.isSelected ? 600 : 400)};\n  letter-spacing: ${p => (p.isSelected ? '-0.015em' : 'inherit')};\n  text-align: center;\n  line-height: ${p => p.theme.text.lineHeightBody};\n  ${getTextColor}\n`;\n\nconst Divider = styled('div')<{visible: boolean}>`\n  position: absolute;\n  top: 50%;\n  right: 0;\n  width: 0;\n  height: 50%;\n  transform: translate(1px, -50%);\n  border-right: solid 1px ${p => p.theme.innerBorder};\n\n  label:last-child > & {\n    display: none;\n  }\n\n  ${p => !p.visible && `opacity: 0;`}\n`;\n"],"names":["trimPackage","pkg","pieces","split","test","length","replace","getPlatform","dataPlatform","platform","getFrameHint","frame","symbolicatorStatus","func","function","warningIcon","_jsx","IconQuestion","size","color","errorIcon","IconWarning","match","t","SymbolicatorStatus","isDotnet","hasContextSource","defined","context","hasContextVars","objectIsEmpty","vars","hasContextRegisters","registers","hasAssembly","package","isExpandable","_ref","emptySourceNotation","isOnlyFrame","getLeadHint","_ref2","event","hasNextFrame","type","EventOrGroupType","mechanismTag","tags","find","_ref3","key","value","isAnrEvent","collectionFactory","nodes","ListCollection","SegmentedControl","defaultValue","onChange","priority","disabled","props","ref","useRef","collection","useCollection","ariaProps","val","orientation","isDisabled","state","useRadioGroupState","radioGroupProps","useRadioGroup","collectionList","useMemo","GroupWrap","children","LayoutGroup","id","map","option","_createElement","Segment","nextKey","prevKey","String","layoutGroupId","rendered","tooltip","tooltipOptions","icon","inputProps","useRadio","prevOptionIsSelected","selectedValue","nextOptionIsSelected","isSelected","showDivider","content","_jsxs","SegmentWrap","SegmentInput","SegmentInteractionStateLayer","SegmentSelectionIndicator","layoutId","transition","ease","duration","Divider","visible","role","LabelWrap","InnerLabelWrap","HiddenLabel","VisibleLabel","Tooltip","skipWrapper","title","delay","position","displayName","Item","_styled","target","p","theme","background","backgroundTertiary","border","borderRadius","form","buttonPadding","InteractionStateLayer","motion","active","focus","backgroundElevated","focusBorder","space","name","styles","overflowEllipsis","getTextColor","subText","white","headingColor","textColor","text","lineHeightBody","innerBorder"],"sourceRoot":""}