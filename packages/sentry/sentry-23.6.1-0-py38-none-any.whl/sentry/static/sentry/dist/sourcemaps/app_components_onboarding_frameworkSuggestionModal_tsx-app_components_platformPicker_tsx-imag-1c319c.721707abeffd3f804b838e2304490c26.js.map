{"version":3,"file":"chunks/app_components_onboarding_frameworkSuggestionModal_tsx-app_components_platformPicker_tsx-imag-1c319c.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/onboarding/frameworkSuggestionModal.tsx","webpack:///./app/components/platformPicker.tsx","webpack:///./app/components/searchBar.tsx"],"sourcesContent":["import {Link as RouterLink} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport * as qs from 'query-string';\n\nimport useRouter from 'sentry/utils/useRouter';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = LinkProps & {\n  /**\n   * Link target. We don't want to expose the ToLocationFunction on this component.\n   */\n  to: LocationDescriptor;\n  /**\n   * The class to apply when the link is 'active'\n   */\n  activeClassName?: string;\n  disabled?: boolean;\n  index?: boolean;\n  /**\n   * Should be should be supplied by the parent component\n   */\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n  query?: string;\n};\n\nfunction ListLink({\n  children,\n  className,\n  isActive,\n  query,\n  to,\n  activeClassName = 'active',\n  index = false,\n  disabled = false,\n  ...props\n}: Props) {\n  const router = useRouter();\n  const queryData = query ? qs.parse(query) : undefined;\n  const targetLocation = typeof to === 'string' ? {pathname: to, query: queryData} : to;\n  const target = normalizeUrl(targetLocation);\n\n  const active = isActive?.(target, index) ?? router.isActive(target, index);\n\n  return (\n    <StyledLi\n      className={classNames({[activeClassName]: active}, className)}\n      disabled={disabled}\n    >\n      <RouterLink {...props} onlyActiveOnIndex={index} to={disabled ? '' : target}>\n        {children}\n      </RouterLink>\n    </StyledLi>\n  );\n}\n\nexport default ListLink;\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {Fragment, useCallback, useEffect, useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport partition from 'lodash/partition';\nimport sortBy from 'lodash/sortBy';\nimport {PlatformIcon} from 'platformicons';\n\nimport onboardingFrameworkSelectionJavascript from 'sentry-images/spot/onboarding-framework-selection-javascript.svg';\nimport onboardingFrameworkSelectionNode from 'sentry-images/spot/onboarding-framework-selection-node.svg';\nimport onboardingFrameworkSelectionPython from 'sentry-images/spot/onboarding-framework-selection-python.svg';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Button} from 'sentry/components/button';\nimport {RadioLineItem} from 'sentry/components/forms/controls/radioGroup';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport Radio from 'sentry/components/radio';\nimport categoryList from 'sentry/data/platformCategories';\nimport platforms from 'sentry/data/platforms';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {OnboardingSelectedSDK, Organization} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nexport enum SupportedLanguages {\n  JAVASCRIPT = 'javascript',\n  PYTHON = 'python',\n  NODE = 'node',\n}\n\nexport const topJavascriptFrameworks = [\n  'javascript-react',\n  'javascript-nextjs',\n  'javascript-vue',\n  'javascript-angular',\n  'javascript-svelte',\n  'javascript-sveltekit',\n  'javascript-remix',\n];\n\nconst topPythonFrameworks = [\n  'python-django',\n  'python-flask',\n  'python-fastapi',\n  'python-awslambda',\n  'python-aiohttp',\n];\n\nconst topNodeFrameworks = [\n  'node-express',\n  'node-awslambda',\n  'node-gcpfunctions',\n  'node-serverlesscloud',\n  'node-koa',\n];\n\nexport const languageDetails = {\n  [SupportedLanguages.JAVASCRIPT]: {\n    description: t(\n      'Our JavaScript framework SDK’s include all the features of our Browser Javascript SDK with additional features specific to that framework'\n    ),\n    topFrameworksImage: onboardingFrameworkSelectionJavascript,\n  },\n  [SupportedLanguages.NODE]: {\n    description: t(\n      'Our Node framework SDK’s include all the features of our Node SDK with instructions specific to that framework'\n    ),\n    topFrameworksImage: onboardingFrameworkSelectionNode,\n  },\n  [SupportedLanguages.PYTHON]: {\n    description: t(\n      'Our Python framework SDK’s include all the features of our Python SDK with instructions specific to that framework'\n    ),\n    topFrameworksImage: onboardingFrameworkSelectionPython,\n  },\n};\n\ntype Props = ModalRenderProps & {\n  onConfigure: (selectedFramework: OnboardingSelectedSDK) => void;\n  onSkip: () => void;\n  organization: Organization;\n  selectedPlatform: OnboardingSelectedSDK;\n  newOrg?: boolean;\n};\n\nexport function FrameworkSuggestionModal({\n  Body,\n  Footer,\n  selectedPlatform,\n  onSkip,\n  onConfigure,\n  closeModal,\n  CloseButton,\n  organization,\n  newOrg,\n}: Props) {\n  const [selectedFramework, setSelectedFramework] = useState<\n    OnboardingSelectedSDK | undefined\n  >(undefined);\n\n  const frameworks = platforms.filter(\n    platform =>\n      platform.type === 'framework' && platform.language === selectedPlatform.key\n  );\n\n  const [topFrameworks, otherFrameworks] = partition(frameworks, framework => {\n    if (selectedPlatform.key === SupportedLanguages.NODE) {\n      return topNodeFrameworks.includes(framework.id);\n    }\n    if (selectedPlatform.key === SupportedLanguages.PYTHON) {\n      return topPythonFrameworks.includes(framework.id);\n    }\n    return topJavascriptFrameworks.includes(framework.id);\n  });\n\n  const otherFrameworksSortedAlphabetically = sortBy(otherFrameworks);\n  const topFrameworksOrdered = sortBy(topFrameworks, framework => {\n    if (selectedPlatform.key === SupportedLanguages.NODE) {\n      return topNodeFrameworks.indexOf(framework.id);\n    }\n    if (selectedPlatform.key === SupportedLanguages.PYTHON) {\n      return topPythonFrameworks.indexOf(framework.id);\n    }\n    return topJavascriptFrameworks.indexOf(framework.id);\n  });\n\n  useEffect(() => {\n    trackAnalytics(\n      newOrg\n        ? 'onboarding.select_framework_modal_rendered'\n        : 'project_creation.select_framework_modal_rendered',\n      {\n        platform: selectedPlatform.key,\n        organization,\n      }\n    );\n  }, [selectedPlatform.key, organization, newOrg]);\n\n  const handleConfigure = useCallback(() => {\n    if (!selectedFramework) {\n      return;\n    }\n\n    trackAnalytics(\n      newOrg\n        ? 'onboarding.select_framework_modal_configure_sdk_button_clicked'\n        : 'project_creation.select_framework_modal_configure_sdk_button_clicked',\n      {\n        platform: selectedPlatform.key,\n        framework: selectedFramework.key,\n        organization,\n      }\n    );\n\n    onConfigure(selectedFramework);\n    closeModal();\n  }, [\n    selectedPlatform,\n    selectedFramework,\n    organization,\n    onConfigure,\n    closeModal,\n    newOrg,\n  ]);\n\n  const handleSkip = useCallback(() => {\n    trackAnalytics(\n      newOrg\n        ? 'onboarding.select_framework_modal_skip_button_clicked'\n        : 'project_creation.select_framework_modal_skip_button_clicked',\n      {\n        platform: selectedPlatform.key,\n        organization,\n      }\n    );\n    onSkip();\n    closeModal();\n  }, [selectedPlatform, organization, closeModal, onSkip, newOrg]);\n\n  return (\n    <Fragment>\n      <Header>\n        <CloseButton onClick={closeModal} />\n      </Header>\n      <Body>\n        <TopFrameworksImage\n          src={languageDetails[selectedPlatform.key].topFrameworksImage}\n        />\n        <Heading>{t('Do you use a framework?')}</Heading>\n        <Description>{languageDetails[selectedPlatform.key].description}</Description>\n        <Panel>\n          <PanelBody>\n            <Frameworks>\n              {[...topFrameworksOrdered, ...otherFrameworksSortedAlphabetically].map(\n                (framework, index) => {\n                  const frameworkCategory =\n                    categoryList.find(category => {\n                      return category.platforms.includes(framework.id as never);\n                    })?.id ?? 'all';\n\n                  return (\n                    <Framework key={framework.id}>\n                      <RadioLabel\n                        index={index}\n                        onClick={() =>\n                          setSelectedFramework({\n                            key: framework.id,\n                            type: framework.type,\n                            language: framework.language,\n                            category: frameworkCategory,\n                          })\n                        }\n                      >\n                        <RadioBox\n                          radioSize=\"small\"\n                          checked={selectedFramework?.key === framework.id}\n                          readOnly\n                        />\n                        <FrameworkIcon size={24} platform={framework.id} />\n                        {framework.name}\n                      </RadioLabel>\n                    </Framework>\n                  );\n                }\n              )}\n            </Frameworks>\n          </PanelBody>\n        </Panel>\n      </Body>\n      <Footer>\n        <Actions>\n          <Button size=\"md\" onClick={handleSkip}>\n            {t('Skip')}\n          </Button>\n          <Button\n            size=\"md\"\n            priority=\"primary\"\n            onClick={handleConfigure}\n            disabled={!selectedFramework}\n            title={!selectedFramework ? t('Select a framework to configure') : undefined}\n          >\n            {t('Configure SDK')}\n          </Button>\n        </Actions>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst Header = styled('header')`\n  position: relative;\n  height: 30px;\n\n  margin: -${space(4)} -${space(2)} 0 -${space(3)};\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    margin: -${space(4)} -${space(4)} 0 -${space(4)};\n  }\n`;\n\nconst TopFrameworksImage = styled('img')`\n  margin-bottom: ${space(2)};\n`;\n\nconst Heading = styled('h6')`\n  margin-bottom: ${space(1)};\n  text-align: center;\n`;\n\nconst Description = styled(TextBlock)`\n  margin-bottom: ${space(2)};\n  text-align: center;\n`;\n\nconst Frameworks = styled(List)`\n  max-height: 240px;\n  overflow-y: auto;\n`;\n\nconst Framework = styled(ListItem)`\n  height: 40px;\n  display: grid;\n  text-align: left;\n  cursor: pointer;\n  :not(:last-child) {\n    border-bottom: 1px solid ${p => p.theme.border};\n  }\n`;\n\nconst FrameworkIcon = styled(PlatformIcon)`\n  border: 1px solid ${p => p.theme.innerBorder};\n`;\n\nconst RadioLabel = styled(RadioLineItem)`\n  display: inline-grid;\n  grid-template-columns: max-content max-content 1fr;\n  align-items: center;\n  padding: ${space(1)} ${space(1.5)};\n  gap: ${space(1.5)};\n  input {\n    cursor: pointer;\n  }\n`;\n\nconst RadioBox = styled(Radio)`\n  padding: ${space(0.5)};\n`;\n\nconst Actions = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${space(1)};\n  width: 100%;\n`;\n\nexport const modalCss = css`\n  max-width: 400px;\n  width: 100%;\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport {PlatformIcon} from 'platformicons';\n\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport SearchBar from 'sentry/components/searchBar';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport categoryList, {filterAliases, PlatformKey} from 'sentry/data/platformCategories';\nimport platforms from 'sentry/data/platforms';\nimport {IconClose, IconProject} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, PlatformIntegration} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\n\nexport const PLATFORM_CATEGORIES: {\n  id: string;\n  name: string;\n  platforms?: PlatformKey[];\n}[] = [...JSON.parse(JSON.stringify(categoryList)), {id: 'all', name: t('All')}];\n\nconst PlatformList = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\nexport type Category = (typeof PLATFORM_CATEGORIES)[number]['id'];\n\nexport type Platform = PlatformIntegration & {\n  category: Category;\n};\n\ninterface PlatformPickerProps {\n  setPlatform: (props: Platform | null) => void;\n  defaultCategory?: Category;\n  listClassName?: string;\n  listProps?: React.HTMLAttributes<HTMLDivElement>;\n  noAutoFilter?: boolean;\n  organization?: Organization;\n  platform?: string | null;\n  showOther?: boolean;\n  source?: string;\n}\n\ntype State = {\n  category: Category;\n  filter: string;\n};\n\nclass PlatformPicker extends Component<PlatformPickerProps, State> {\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state: State = {\n    category: this.props.defaultCategory ?? PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const filter = this.state.filter.toLowerCase();\n\n    const subsetMatch = (platform: PlatformIntegration) =>\n      platform.id.includes(filter) ||\n      platform.name.toLowerCase().includes(filter) ||\n      filterAliases[platform.id as PlatformKey]?.some(alias => alias.includes(filter));\n\n    const categoryMatch = (platform: PlatformIntegration) => {\n      if (category === 'all') {\n        return true;\n      }\n\n      // Symfony was no appering under the server category\n      // because the php-symfony entry in src/sentry/integration-docs/_platforms.json\n      // does not contain the suffix 2.\n      // This is a temporary fix until we can update that file or completly remove the php-symfony2 occurrences\n      if (\n        (platform.id as any) === 'php-symfony' &&\n        (currentCategory?.platforms as undefined | string[])?.includes('php-symfony2')\n      ) {\n        return true;\n      }\n      return (currentCategory?.platforms as undefined | string[])?.includes(platform.id);\n    };\n\n    const filtered = platforms\n      .filter(this.state.filter ? subsetMatch : categoryMatch)\n      .sort((a, b) => a.id.localeCompare(b.id));\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      trackAnalytics('growth.platformpicker_search', {\n        search: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n        source: this.props.source,\n        organization: this.props.organization ?? null,\n      });\n    }\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps, listClassName} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={(e: React.MouseEvent) => {\n                  trackAnalytics('growth.platformpicker_category', {\n                    category: id,\n                    source: this.props.source,\n                    organization: this.props.organization ?? null,\n                  });\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <StyledSearchBar\n            size=\"sm\"\n            query={filter}\n            placeholder={t('Filter Platforms')}\n            onChange={val => this.setState({filter: val}, this.logSearch)}\n          />\n        </NavContainer>\n        <PlatformList className={listClassName} {...listProps}>\n          {platformList.map(platform => {\n            return (\n              <PlatformCard\n                data-test-id={`platform-${platform.id}`}\n                key={platform.id}\n                platform={platform}\n                selected={this.props.platform === platform.id}\n                onClear={(e: React.MouseEvent) => {\n                  setPlatform(null);\n                  e.stopPropagation();\n                }}\n                onClick={() => {\n                  trackAnalytics('growth.select_platform', {\n                    platform_id: platform.id,\n                    source: this.props.source,\n                    organization: this.props.organization ?? null,\n                  });\n                  setPlatform({...platform, category});\n                }}\n              />\n            );\n          })}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon={<IconProject size=\"xl\" />}\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {tct(\n              `Not finding your platform? You can still create your project,\n              but looks like we don't have an official SDK for your platform\n              yet. However, there's a rich ecosystem of community supported\n              SDKs (including Perl, CFML, Clojure, and ActionScript). Try\n              [search:searching for Sentry clients] or contacting support.`,\n              {\n                search: (\n                  <ExternalLink href=\"https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories\" />\n                ),\n              }\n            )}\n          </EmptyMessage>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  margin-bottom: ${space(2)};\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: 1fr minmax(0, 300px);\n  align-items: start;\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  min-width: 6rem;\n  max-width: 12rem;\n  margin-top: -${space(0.25)};\n  margin-left: auto;\n  flex-shrink: 0;\n  flex-basis: 0;\n  flex-grow: 1;\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n  white-space: nowrap;\n\n  > li {\n    float: none;\n    display: inline-block;\n  }\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin: ${space(2)};\n`;\n\nconst ClearButton = styled(Button)`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  min-height: 0;\n  height: 22px;\n  width: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n`;\n\nClearButton.defaultProps = {\n  icon: <IconClose isCircled size=\"xs\" />,\n  borderless: true,\n  size: 'xs',\n};\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIcon\n      platform={platform.id}\n      size={56}\n      radius={5}\n      withLanguageIcon\n      format=\"lg\"\n    />\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} aria-label={t('Clear')} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  background: ${p => p.selected && p.theme.alert.info.backgroundLight};\n  cursor: pointer;\n\n  &:hover {\n    background: ${p => p.theme.alert.muted.backgroundLight};\n  }\n\n  h3 {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    color: ${p => (p.selected ? p.theme.textColor : p.theme.subText)};\n    text-align: center;\n    font-size: ${p => p.theme.fontSizeExtraSmall};\n    text-transform: uppercase;\n    margin: 0;\n    padding: 0 ${space(0.5)};\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {InputGroup, InputProps} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputGroup.LeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputGroup.LeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputGroup.TrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputGroup.TrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(InputGroup.Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n"],"names":["ListLink","_ref","children","className","isActive","query","to","activeClassName","index","disabled","props","router","useRouter","queryData","qs","undefined","targetLocation","pathname","target","normalizeUrl","active","_jsx","StyledLi","classNames","RouterLink","onlyActiveOnIndex","displayName","_styled","shouldForwardProp","prop","p","theme","SupportedLanguages","topJavascriptFrameworks","topPythonFrameworks","topNodeFrameworks","languageDetails","JAVASCRIPT","description","t","topFrameworksImage","NODE","onboardingFrameworkSelectionNode","PYTHON","FrameworkSuggestionModal","Body","Footer","selectedPlatform","onSkip","onConfigure","closeModal","CloseButton","organization","newOrg","selectedFramework","setSelectedFramework","useState","frameworks","platforms","platform","type","language","key","topFrameworks","otherFrameworks","partition","framework","includes","id","otherFrameworksSortedAlphabetically","sortBy","topFrameworksOrdered","indexOf","useEffect","trackAnalytics","handleConfigure","useCallback","handleSkip","_jsxs","Fragment","Header","onClick","TopFrameworksImage","src","Heading","Description","Panel","PanelBody","Frameworks","map","frameworkCategory","categoryList","category","Framework","RadioLabel","RadioBox","radioSize","checked","readOnly","FrameworkIcon","size","name","Actions","Button","priority","title","space","breakpoints","medium","TextBlock","List","styles","ListItem","border","PlatformIcon","innerBorder","RadioLineItem","Radio","modalCss","PLATFORM_CATEGORIES","JSON","parse","stringify","PlatformList","PlatformPicker","Component","constructor","arguments","_defineProperty","this","defaultCategory","filter","noAutoFilter","split","debounce","state","search","toLowerCase","num_results","platformList","length","source","DEFAULT_DEBOUNCE_DURATION","currentCategory","filtered","filterAliases","some","alias","sort","a","b","localeCompare","showOther","_ref2","render","setPlatform","listProps","listClassName","NavContainer","CategoryNav","_ref3","e","setState","preventDefault","StyledSearchBar","placeholder","onChange","val","logSearch","PlatformCard","selected","onClear","stopPropagation","platform_id","EmptyMessage","icon","IconProject","tct","ExternalLink","href","SearchBar","NavTabs","StyledPlatformIcon","ClearButton","background","textColor","defaultProps","IconClose","isCircled","borderless","_ref4","radius","withLanguageIcon","format","alert","info","backgroundLight","muted","subText","fontSizeExtraSmall","queryProp","defaultQuery","onSearch","width","trailing","inputProps","inputRef","useRef","setQuery","onQueryChange","value","onSubmit","current","blur","clearSearch","FormWrap","InputGroup","disablePointerEvents","IconSearch","color","StyledInput","ref","autoComplete","SearchBarTrailingButton"],"sourceRoot":""}