{"version":3,"file":"chunks/app_views_settings_projectSourceMaps_detail_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/sourceMapsArtifactRow.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/index.tsx"],"sourcesContent":["import {useMemo} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, User} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactElement | null;\n\nfunction checkUserRole(user: User, organization: Organization, role: RoleProps['role']) {\n  if (!user) {\n    return false;\n  }\n\n  if (isActiveSuperuser()) {\n    return true;\n  }\n\n  if (!Array.isArray(organization.orgRoleList)) {\n    return false;\n  }\n\n  const roleIds = organization.orgRoleList.map(r => r.id);\n\n  if (!roleIds.includes(role) || !roleIds.includes(organization.orgRole ?? '')) {\n    return false;\n  }\n\n  const requiredIndex = roleIds.indexOf(role);\n  const currentIndex = roleIds.indexOf(organization.orgRole ?? '');\n  return currentIndex >= requiredIndex;\n}\n\ninterface RoleProps {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactElement | ChildrenRenderFn;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * Minimum required role\n   */\n  role: string;\n}\n\nfunction Role({role, organization, children}: RoleProps): React.ReactElement | null {\n  const user = ConfigStore.get('user');\n\n  const hasRole = useMemo(\n    () => checkUserRole(user, organization, role),\n    // It seems that this returns a stable reference, but\n    [organization, role, user]\n  );\n\n  if (isRenderFunc<ChildrenRenderFn>(children)) {\n    return children({hasRole});\n  }\n\n  return hasRole ? children : null;\n}\n\nconst withOrganizationRole = withOrganization(Role);\n\nexport {withOrganizationRole as Role};\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {InputGroup, InputProps} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputGroup.LeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputGroup.LeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputGroup.TrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputGroup.TrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(InputGroup.Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Role} from 'sentry/components/acl/role';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport FileSize from 'sentry/components/fileSize';\nimport Link from 'sentry/components/links/link';\nimport Tag from 'sentry/components/tag';\nimport TimeSince from 'sentry/components/timeSince';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Artifact} from 'sentry/types';\n\ntype Props = {\n  artifact: Artifact;\n  downloadRole: string;\n  downloadUrl: string;\n  onDelete: (id: string) => void;\n  orgSlug: string;\n};\n\nfunction SourceMapsArtifactRow({\n  artifact,\n  onDelete,\n  downloadUrl,\n  downloadRole,\n  orgSlug,\n}: Props) {\n  const {name, size, dateCreated, id, dist} = artifact;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <Fragment>\n      <NameColumn>\n        <Name>{name || `(${t('empty')})`}</Name>\n        <TimeAndDistWrapper>\n          <TimeWrapper>\n            <IconClock size=\"sm\" />\n            <TimeSince date={dateCreated} />\n          </TimeWrapper>\n          <StyledTag\n            type={dist ? 'info' : undefined}\n            tooltipText={dist ? undefined : t('No distribution set')}\n          >\n            {dist ?? t('none')}\n          </StyledTag>\n        </TimeAndDistWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={tct(\n                  'Artifacts can only be downloaded by users with organization [downloadRole] role[orHigher]. This can be changed in [settingsLink:Debug Files Access] settings.',\n                  {\n                    downloadRole,\n                    orHigher: downloadRole !== 'owner' ? ` ${t('or higher')}` : '',\n                    settingsLink: <Link to={`/settings/${orgSlug}/#debugFilesRole`} />,\n                  }\n                )}\n                disabled={hasRole}\n                isHoverable\n              >\n                <Button\n                  size=\"sm\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Artifact') : undefined}\n                  aria-label={t('Download Artifact')}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete artifacts.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this artifact?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"sm\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Artifact') : undefined}\n                    aria-label={t('Remove Artifact')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n}\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeAndDistWrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  margin-top: ${space(1)};\n  align-items: center;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledTag = styled(Tag)`\n  margin-left: ${space(1)};\n`;\n\nexport default SourceMapsArtifactRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Access from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Artifact, Organization, Project} from 'sentry/types';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nimport SourceMapsArtifactRow from './sourceMapsArtifactRow';\n\ntype RouteParams = {name: string; projectId: string};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  artifacts: Artifact[];\n};\n\nclass ProjectSourceMapsDetail extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId, name} = this.props.params;\n\n    return routeTitleGen(t('Archive %s', formatVersion(name)), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      artifacts: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['artifacts', this.getArtifactsUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArtifactsUrl() {\n    const {organization} = this.props;\n    const {projectId, name} = this.props.params;\n\n    return `/projects/${organization.slug}/${projectId}/releases/${encodeURIComponent(\n      name\n    )}/files/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleArtifactDelete = async (id: string) => {\n    addLoadingMessage(t('Removing artifact\\u2026'));\n\n    try {\n      await this.api.requestPromise(`${this.getArtifactsUrl()}${id}/`, {\n        method: 'DELETE',\n      });\n      this.fetchData();\n      addSuccessMessage(t('Artifact removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifact. Please try again.'));\n    }\n  };\n\n  handleArchiveDelete = async () => {\n    const {organization} = this.props;\n    const {projectId, name} = this.props.params;\n\n    addLoadingMessage(t('Removing artifacts\\u2026'));\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/files/source-maps/`,\n        {\n          method: 'DELETE',\n          query: {name},\n        }\n      );\n      this.fetchData();\n      addSuccessMessage(t('Artifacts removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifacts. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no artifacts that match your search.');\n    }\n\n    return t('There are no artifacts in this archive.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderArtifacts() {\n    const {organization} = this.props;\n    const {artifacts} = this.state;\n    const artifactApiUrl = this.api.baseUrl + this.getArtifactsUrl();\n\n    if (!artifacts.length) {\n      return null;\n    }\n\n    return artifacts.map(artifact => {\n      return (\n        <SourceMapsArtifactRow\n          key={artifact.id}\n          artifact={artifact}\n          onDelete={this.handleArtifactDelete}\n          downloadUrl={`${artifactApiUrl}${artifact.id}/?download=1`}\n          downloadRole={organization.debugFilesRole}\n          orgSlug={organization.slug}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, artifacts, artifactsPageLinks} = this.state;\n    const {name} = this.props.params;\n    const {project, organization} = this.props;\n\n    return (\n      <Fragment>\n        <StyledSettingsPageHeader\n          title={\n            <Title>\n              {t('Archive')}&nbsp;\n              <TextOverflow>\n                <Version version={name} tooltipRawVersion anchor={false} truncate />\n              </TextOverflow>\n            </Title>\n          }\n          action={\n            <StyledButtonBar gap={1}>\n              <ReleaseButton\n                to={`/organizations/${organization.slug}/releases/${encodeURIComponent(\n                  name\n                )}/?project=${project.id}`}\n              >\n                {t('Go to Release')}\n              </ReleaseButton>\n              <Access access={['project:releases']}>\n                {({hasAccess}) => (\n                  <Tooltip\n                    disabled={hasAccess}\n                    title={t('You do not have permission to delete artifacts.')}\n                  >\n                    <Confirm\n                      message={t(\n                        'Are you sure you want to remove all artifacts in this archive?'\n                      )}\n                      onConfirm={this.handleArchiveDelete}\n                      disabled={!hasAccess}\n                    >\n                      <Button\n                        icon={<IconDelete size=\"sm\" />}\n                        title={t('Remove All Artifacts')}\n                        aria-label={t('Remove All Artifacts')}\n                        disabled={!hasAccess}\n                      />\n                    </Confirm>\n                  </Tooltip>\n                )}\n              </Access>\n\n              <SearchBar\n                placeholder={t('Filter artifacts')}\n                onSearch={this.handleSearch}\n                query={this.getQuery()}\n              />\n            </StyledButtonBar>\n          }\n        />\n\n        <StyledPanelTable\n          headers={[\n            t('Artifact'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={artifacts.length === 0}\n          isLoading={loading}\n        >\n          {this.renderArtifacts()}\n        </StyledPanelTable>\n        <Pagination pageLinks={artifactsPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledSettingsPageHeader = styled(SettingsPageHeader)`\n  /*\n    ugly selector to make header work on mobile\n    we can refactor this once we start making other settings more responsive\n  */\n  > div {\n    @media (max-width: ${p => p.theme.breakpoints.large}) {\n      display: block;\n    }\n    > div {\n      min-width: 0;\n      @media (max-width: ${p => p.theme.breakpoints.large}) {\n        margin-bottom: ${space(2)};\n      }\n    }\n  }\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  justify-content: flex-start;\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst ReleaseButton = styled(Button)`\n  white-space: nowrap;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectSourceMapsDetail;\n"],"names":["withOrganizationRole","withOrganization","_ref","role","organization","children","user","ConfigStore","hasRole","useMemo","isActiveSuperuser","Array","isArray","orgRoleList","roleIds","map","r","id","includes","orgRole","requiredIndex","indexOf","checkUserRole","isRenderFunc","SearchBar","query","queryProp","defaultQuery","onChange","onSearch","width","size","className","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","e","value","target","onSubmit","preventDefault","current","blur","clearSearch","_jsx","FormWrap","_jsxs","InputGroup","disablePointerEvents","IconSearch","color","StyledInput","ref","type","name","autoComplete","SearchBarTrailingButton","borderless","onClick","icon","IconClose","t","displayName","_styled","styles","p","Button","theme","subText","space","routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","SentryDocumentTitle","title","this","renderComponent","SourceMapsArtifactRow","artifact","onDelete","downloadUrl","downloadRole","dateCreated","dist","handleDeleteClick","Fragment","NameColumn","Name","TimeAndDistWrapper","TimeWrapper","IconClock","TimeSince","date","StyledTag","tooltipText","SizeColumn","FileSize","bytes","ActionsColumn","ButtonBar","gap","Role","_ref2","Tooltip","tct","orHigher","settingsLink","Link","to","disabled","isHoverable","IconDownload","href","Access","access","_ref3","hasAccess","Confirm","message","onConfirm","IconDelete","fontSizeMedium","Tag","ProjectSourceMapsDetail","constructor","_defineProperty","location","router","props","push","cursor","async","addLoadingMessage","api","requestPromise","getArtifactsUrl","method","fetchData","addSuccessMessage","addErrorMessage","projectId","params","slug","routeTitleGen","formatVersion","getDefaultState","super","artifacts","getEndpoints","getQuery","encodeURIComponent","decodeScalar","getEmptyMessage","renderLoading","renderBody","renderArtifacts","state","artifactApiUrl","baseUrl","handleArtifactDelete","debugFilesRole","loading","artifactsPageLinks","project","StyledSettingsPageHeader","Title","TextOverflow","Version","version","tooltipRawVersion","anchor","truncate","action","StyledButtonBar","ReleaseButton","handleArchiveDelete","placeholder","handleSearch","StyledPanelTable","headers","emptyMessage","isEmpty","isLoading","Pagination","pageLinks","SettingsPageHeader","breakpoints","large","PanelTable"],"sourceRoot":""}