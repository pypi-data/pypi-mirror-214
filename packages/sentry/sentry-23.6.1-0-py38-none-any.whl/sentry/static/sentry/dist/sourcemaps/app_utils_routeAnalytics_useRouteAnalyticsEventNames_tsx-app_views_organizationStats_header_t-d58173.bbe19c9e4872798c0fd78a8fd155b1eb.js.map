{"version":3,"file":"chunks/app_utils_routeAnalytics_useRouteAnalyticsEventNames_tsx-app_views_organizationStats_header_t-d58173.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeAnalytics/useRouteAnalyticsEventNames.tsx","webpack:///./app/views/organizationStats/header.tsx","webpack:///./app/views/organizationStats/teamInsights/controls.tsx","webpack:///./app/views/organizationStats/teamInsights/descriptionCard.tsx","webpack:///./app/views/organizationStats/teamInsights/styles.tsx","webpack:///./app/views/organizationStats/teamInsights/utils.tsx"],"sourcesContent":["import {useContext, useEffect} from 'react';\n\nimport {RouteAnalyticsContext} from 'sentry/views/routeAnalyticsContextProvider';\n\n/**\n * This hook provides custom analytics event names for route based analytics.\n * @param eventKey The key used to identify the event\n * @param eventName The English string used as the event name\n */\nexport default function useRouteAnalyticsEventNames(eventKey: string, eventName: string) {\n  const {setEventNames, previousUrl} = useContext(RouteAnalyticsContext);\n  useEffect(() => {\n    setEventNames(eventKey, eventName);\n  }, [setEventNames, eventKey, eventName, previousUrl]);\n}\n","import {FeatureFeedback} from 'sentry/components/featureFeedback';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport Link from 'sentry/components/links/link';\nimport {PageHeadingQuestionTooltip} from 'sentry/components/pageHeadingQuestionTooltip';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\n\ntype Props = {\n  activeTab: 'stats' | 'issues' | 'health';\n  organization: Organization;\n};\n\nfunction StatsHeader({organization, activeTab}: Props) {\n  return (\n    <Layout.Header>\n      <Layout.HeaderContent>\n        <Layout.Title>\n          {t('Stats')}\n          <PageHeadingQuestionTooltip\n            docsUrl=\"https://docs.sentry.io/product/stats/\"\n            title={t(\n              'A view of the usage data that Sentry has received across your entire organization.'\n            )}\n          />\n        </Layout.Title>\n      </Layout.HeaderContent>\n      <Layout.HeaderActions>\n        {activeTab !== 'stats' && (\n          <FeatureFeedback buttonProps={{size: 'sm'}} featureName=\"team-stats\" />\n        )}\n      </Layout.HeaderActions>\n      <Layout.HeaderNavTabs underlined>\n        <li className={`${activeTab === 'stats' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/`}>{t('Usage')}</Link>\n        </li>\n        <li className={`${activeTab === 'issues' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/issues/`}>\n            {t('Issues')}\n          </Link>\n        </li>\n        <li className={`${activeTab === 'health' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/health/`}>\n            {t('Health')}\n          </Link>\n        </li>\n      </Layout.HeaderNavTabs>\n    </Layout.Header>\n  );\n}\n\nexport default StatsHeader;\n","import {RouteComponentProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport pick from 'lodash/pick';\nimport uniq from 'lodash/uniq';\nimport moment from 'moment';\n\nimport SelectControl from 'sentry/components/forms/controls/selectControl';\nimport {ChangeData} from 'sentry/components/organizations/timeRangeSelector';\nimport PageTimeRangeSelector from 'sentry/components/pageTimeRangeSelector';\nimport TeamSelector from 'sentry/components/teamSelector';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {DateString, TeamWithProjects} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport localStorage from 'sentry/utils/localStorage';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport {dataDatetime} from './utils';\n\nconst INSIGHTS_DEFAULT_STATS_PERIOD = '8w';\n\nconst PAGE_QUERY_PARAMS = [\n  'pageStatsPeriod',\n  'pageStart',\n  'pageEnd',\n  'pageUtc',\n  'dataCategory',\n  'transform',\n  'sort',\n  'query',\n  'cursor',\n  'team',\n  'environment',\n];\n\ntype Props = Pick<RouteComponentProps<{}, {}>, 'router' | 'location'> & {\n  currentEnvironment?: string;\n  currentTeam?: TeamWithProjects;\n  showEnvironment?: boolean;\n};\n\nfunction TeamStatsControls({\n  location,\n  router,\n  currentTeam,\n  currentEnvironment,\n  showEnvironment,\n}: Props) {\n  const {projects} = useProjects({\n    slugs: currentTeam?.projects.map(project => project.slug) ?? [],\n  });\n  const organization = useOrganization();\n  const isSuperuser = isActiveSuperuser();\n  const theme = useTheme();\n\n  const query = location?.query ?? {};\n  const localStorageKey = `teamInsightsSelectedTeamId:${organization.slug}`;\n\n  function handleChangeTeam(teamId: string) {\n    localStorage.setItem(localStorageKey, teamId);\n    // TODO(workflow): Preserve environment if it exists for the new team\n    setStateOnUrl({team: teamId, environment: undefined});\n  }\n\n  function handleEnvironmentChange({value}: {label: string; value: string}) {\n    if (value === '') {\n      setStateOnUrl({environment: undefined});\n    } else {\n      setStateOnUrl({environment: value});\n    }\n  }\n\n  function handleUpdateDatetime(datetime: ChangeData): LocationDescriptorObject {\n    const {start, end, relative, utc} = datetime;\n\n    if (start && end) {\n      const parser = utc ? moment.utc : moment;\n\n      return setStateOnUrl({\n        pageStatsPeriod: undefined,\n        pageStart: parser(start).format(),\n        pageEnd: parser(end).format(),\n        pageUtc: utc ?? undefined,\n      });\n    }\n\n    return setStateOnUrl({\n      pageStatsPeriod: relative || undefined,\n      pageStart: undefined,\n      pageEnd: undefined,\n      pageUtc: undefined,\n    });\n  }\n\n  function setStateOnUrl(nextState: {\n    environment?: string;\n    pageEnd?: DateString;\n    pageStart?: DateString;\n    pageStatsPeriod?: string | null;\n    pageUtc?: boolean | null;\n    team?: string;\n  }): LocationDescriptorObject {\n    const nextQueryParams = pick(nextState, PAGE_QUERY_PARAMS);\n\n    const nextLocation = {\n      ...location,\n      query: {\n        ...query,\n        ...nextQueryParams,\n      },\n    };\n\n    router.push(nextLocation);\n\n    return nextLocation;\n  }\n\n  const {period, start, end, utc} = dataDatetime(query);\n  const environmentOptions = uniq(\n    projects.map(project => project.environments).flat()\n  ).map(env => ({label: env, value: env}));\n\n  return (\n    <ControlsWrapper showEnvironment={showEnvironment}>\n      <StyledTeamSelector\n        name=\"select-team\"\n        inFieldLabel={t('Team: ')}\n        value={currentTeam?.slug}\n        onChange={choice => handleChangeTeam(choice.actor.id)}\n        teamFilter={isSuperuser ? undefined : filterTeam => filterTeam.isMember}\n        styles={{\n          singleValue(provided: any) {\n            const custom = {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              fontSize: theme.fontSizeMedium,\n              ':before': {\n                ...provided[':before'],\n                color: theme.textColor,\n                marginRight: space(1.5),\n                marginLeft: space(0.5),\n              },\n            };\n            return {...provided, ...custom};\n          },\n          input: (provided: any, state: any) => ({\n            ...provided,\n            display: 'grid',\n            gridTemplateColumns: 'max-content 1fr',\n            alignItems: 'center',\n            gridGap: space(1),\n            ':before': {\n              backgroundColor: state.theme.backgroundSecondary,\n              height: 24,\n              width: 38,\n              borderRadius: 3,\n              content: '\"\"',\n              display: 'block',\n            },\n          }),\n        }}\n      />\n      {showEnvironment && (\n        <SelectControl\n          options={[\n            {\n              value: '',\n              label: t('All'),\n            },\n            ...environmentOptions,\n          ]}\n          value={currentEnvironment ?? ''}\n          onChange={handleEnvironmentChange}\n          styles={{\n            input: (provided: any) => ({\n              ...provided,\n              display: 'grid',\n              gridTemplateColumns: 'max-content 1fr',\n              alignItems: 'center',\n              gridGap: space(1),\n              ':before': {\n                height: 24,\n                width: 90,\n                borderRadius: 3,\n                content: '\"\"',\n                display: 'block',\n              },\n            }),\n            control: (base: any) => ({\n              ...base,\n              boxShadow: 'none',\n            }),\n            singleValue: (base: any) => ({\n              ...base,\n              fontSize: theme.fontSizeMedium,\n              display: 'flex',\n              ':before': {\n                ...base[':before'],\n                color: theme.textColor,\n                marginRight: space(1.5),\n              },\n            }),\n          }}\n          inFieldLabel={t('Environment:')}\n        />\n      )}\n      <StyledPageTimeRangeSelector\n        organization={organization}\n        relative={period ?? ''}\n        start={start ?? null}\n        end={end ?? null}\n        utc={utc ?? null}\n        onUpdate={handleUpdateDatetime}\n        showAbsolute={false}\n        relativeOptions={{\n          '14d': t('Last 2 weeks'),\n          '4w': t('Last 4 weeks'),\n          [INSIGHTS_DEFAULT_STATS_PERIOD]: t('Last 8 weeks'),\n          '12w': t('Last 12 weeks'),\n        }}\n      />\n    </ControlsWrapper>\n  );\n}\n\nexport default TeamStatsControls;\n\nconst ControlsWrapper = styled('div')<{showEnvironment?: boolean}>`\n  display: grid;\n  align-items: center;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 246px ${p => (p.showEnvironment ? '246px' : '')} 1fr;\n  }\n`;\n\nconst StyledTeamSelector = styled(TeamSelector)`\n  & > div {\n    box-shadow: ${p => p.theme.dropShadowMedium};\n  }\n`;\n\nconst StyledPageTimeRangeSelector = styled(PageTimeRangeSelector)`\n  div {\n    min-height: unset;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  description: React.ReactNode;\n  title: string;\n};\n\nfunction DescriptionCard({title, description, children}: Props) {\n  return (\n    <Wrapper>\n      <LeftPanel>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n      </LeftPanel>\n      <RightPanel>{children}</RightPanel>\n    </Wrapper>\n  );\n}\n\nexport default DescriptionCard;\n\nconst Wrapper = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  display: flex;\n  margin-bottom: ${space(3)};\n  flex-direction: column;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    flex-direction: row;\n  }\n`;\n\nconst LeftPanel = styled('div')`\n  padding: ${space(2)} ${space(2)};\n  border-bottom: 1px solid ${p => p.theme.border};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    max-width: 250px;\n    border-right: 1px solid ${p => p.theme.border};\n    border-bottom: 0;\n  }\n`;\n\nconst Title = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  margin: 0 0 ${space(0.5)};\n`;\n\nconst Description = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst RightPanel = styled('div')`\n  flex-grow: 1;\n`;\n","import styled from '@emotion/styled';\n\nimport IdBadge from 'sentry/components/idBadge';\n\nexport const ProjectBadgeContainer = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProjectBadge = styled(IdBadge)`\n  flex-shrink: 0;\n`;\n","import moment from 'moment';\n\nimport BaseChart from 'sentry/components/charts/baseChart';\nimport {DateTimeObject} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport type {SeriesDataUnit} from 'sentry/types/echarts';\n\n/**\n * Buckets a week of sequential days into one data unit\n */\nexport function sortSeriesByDay(data: SeriesDataUnit[]): SeriesDataUnit[] {\n  return data.sort((a, b) => new Date(a.name).getTime() - new Date(b.name).getTime());\n}\n\n/**\n * Convert an object with date as the key to a series\n */\nexport function convertDayValueObjectToSeries(\n  data: Record<string, number>\n): SeriesDataUnit[] {\n  return Object.entries(data).map(([bucket, count]) => ({\n    value: count,\n    name: new Date(bucket).getTime(),\n  }));\n}\n\n/**\n * Takes a sorted array of trend items and groups them by worst/better/no chagne\n */\nexport function groupByTrend<T extends {trend: number}>(data: T[]): T[] {\n  const worseItems = data.filter(x => Math.round(x.trend) < 0);\n  const betterItems = data.filter(x => Math.round(x.trend) > 0);\n  const zeroItems = data.filter(x => Math.round(x.trend) === 0);\n  return [...worseItems, ...betterItems, ...zeroItems];\n}\n\nexport const barAxisLabel = (): React.ComponentProps<typeof BaseChart>['xAxis'] => {\n  return {\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    },\n    axisLabel: {\n      formatter: (date: string) => {\n        return moment(new Date(Number(date))).format('MMM D');\n      },\n    },\n  };\n};\n\nconst INSIGHTS_DEFAULT_STATS_PERIOD = '8w';\n\nexport function dataDatetime(\n  query: Parameters<typeof normalizeDateTimeParams>[0]\n): DateTimeObject {\n  const {\n    start,\n    end,\n    statsPeriod,\n    utc: utcString,\n  } = normalizeDateTimeParams(query, {\n    allowEmptyPeriod: true,\n    allowAbsoluteDatetime: true,\n    allowAbsolutePageDatetime: true,\n  });\n\n  if (!statsPeriod && !start && !end) {\n    return {period: INSIGHTS_DEFAULT_STATS_PERIOD};\n  }\n\n  // Following getParams, statsPeriod will take priority over start/end\n  if (statsPeriod) {\n    return {period: statsPeriod};\n  }\n\n  const utc = utcString === 'true';\n  if (start && end) {\n    return utc\n      ? {\n          start: moment.utc(start).format(),\n          end: moment.utc(end).format(),\n          utc,\n        }\n      : {\n          start: moment(start).utc().format(),\n          end: moment(end).utc().format(),\n          utc,\n        };\n  }\n\n  return {period: INSIGHTS_DEFAULT_STATS_PERIOD};\n}\n"],"names":["useRouteAnalyticsEventNames","eventKey","eventName","setEventNames","previousUrl","useContext","RouteAnalyticsContext","useEffect","StatsHeader","_ref","organization","activeTab","_jsxs","Layout","children","_jsx","t","PageHeadingQuestionTooltip","docsUrl","title","FeatureFeedback","buttonProps","size","featureName","underlined","className","Link","to","slug","displayName","PAGE_QUERY_PARAMS","TeamStatsControls","location","router","currentTeam","currentEnvironment","showEnvironment","projects","useProjects","slugs","map","project","useOrganization","isSuperuser","isActiveSuperuser","theme","useTheme","query","localStorageKey","setStateOnUrl","nextState","nextQueryParams","pick","nextLocation","push","period","start","end","utc","dataDatetime","environmentOptions","uniq","environments","flat","env","label","value","ControlsWrapper","StyledTeamSelector","name","inFieldLabel","onChange","choice","handleChangeTeam","teamId","actor","id","localStorage","team","environment","undefined","teamFilter","filterTeam","isMember","styles","singleValue","provided","custom","display","justifyContent","alignItems","fontSize","fontSizeMedium","color","textColor","marginRight","space","marginLeft","input","state","gridTemplateColumns","gridGap","backgroundColor","backgroundSecondary","height","width","borderRadius","content","SelectControl","options","_ref2","control","base","boxShadow","StyledPageTimeRangeSelector","relative","onUpdate","datetime","parser","moment","pageStatsPeriod","pageStart","format","pageEnd","pageUtc","showAbsolute","relativeOptions","_styled","target","p","breakpoints","small","TeamSelector","dropShadowMedium","PageTimeRangeSelector","DescriptionCard","description","Wrapper","LeftPanel","Title","Description","RightPanel","border","medium","fontSizeLarge","subText","ProjectBadgeContainer","ProjectBadge","IdBadge","sortSeriesByDay","data","sort","a","b","Date","getTime","convertDayValueObjectToSeries","Object","entries","bucket","count","groupByTrend","filter","x","Math","round","trend","barAxisLabel","type","axisTick","alignWithLabel","axisLabel","formatter","date","Number","INSIGHTS_DEFAULT_STATS_PERIOD","statsPeriod","utcString","normalizeDateTimeParams","allowEmptyPeriod","allowAbsoluteDatetime","allowAbsolutePageDatetime"],"sourceRoot":""}