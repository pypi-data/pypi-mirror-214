{"version":3,"file":"chunks/app_views_settings_account_accountEmails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/settings/account/accountEmails.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {RequestOptions} from 'sentry/api';\nimport AlertLink from 'sentry/components/alertLink';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Form, {FormProps} from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Tag from 'sentry/components/tag';\nimport accountEmailsFields from 'sentry/data/forms/accountEmails';\nimport {IconDelete, IconStack} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {UserEmail} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/emails/';\n\ntype Props = AsyncView['props'];\n\ntype State = AsyncView['state'] & {\n  emails: UserEmail[];\n};\n\nclass AccountEmails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Emails');\n  }\n\n  getEndpoints() {\n    return [];\n  }\n\n  handleSubmitSuccess: FormProps['onSubmitSuccess'] = (_change, model, id) => {\n    if (id === undefined) {\n      return;\n    }\n    model.setValue(id, '');\n    this.remountComponent();\n  };\n\n  renderBody() {\n    return (\n      <Fragment>\n        <SettingsPageHeader title={t('Email Addresses')} />\n        <EmailAddresses />\n        <Form\n          apiMethod=\"POST\"\n          apiEndpoint={ENDPOINT}\n          saveOnBlur\n          allowUndo={false}\n          onSubmitSuccess={this.handleSubmitSuccess}\n        >\n          <JsonForm forms={accountEmailsFields} />\n        </Form>\n\n        <AlertLink to=\"/settings/account/notifications\" icon={<IconStack />}>\n          {t('Want to change how many emails you get? Use the notifications panel.')}\n        </AlertLink>\n      </Fragment>\n    );\n  }\n}\n\nexport default AccountEmails;\n\nexport class EmailAddresses extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['emails', ENDPOINT]];\n  }\n  doApiCall(endpoint: string, requestParams: RequestOptions) {\n    this.setState({loading: true, emails: []}, () =>\n      this.api\n        .requestPromise(endpoint, requestParams)\n        .then(() => this.remountComponent())\n        .catch(err => {\n          this.remountComponent();\n\n          if (err?.responseJSON?.email) {\n            addErrorMessage(err.responseJSON.email);\n          }\n        })\n    );\n  }\n  handleSetPrimary = (email: string) =>\n    this.doApiCall(ENDPOINT, {\n      method: 'PUT',\n      data: {email},\n    });\n\n  handleRemove = (email: string) =>\n    this.doApiCall(ENDPOINT, {\n      method: 'DELETE',\n      data: {email},\n    });\n\n  handleVerify = (email: string) =>\n    this.doApiCall(`${ENDPOINT}confirm/`, {\n      method: 'POST',\n      data: {email},\n    });\n\n  render() {\n    const {emails, loading} = this.state;\n    const primary = emails?.find(({isPrimary}) => isPrimary);\n    const secondary = emails?.filter(({isPrimary}) => !isPrimary);\n\n    if (loading) {\n      return (\n        <Panel>\n          <PanelHeader>{t('Email Addresses')}</PanelHeader>\n          <PanelBody>\n            <LoadingIndicator />\n          </PanelBody>\n        </Panel>\n      );\n    }\n    return (\n      <Panel>\n        <PanelHeader>{t('Email Addresses')}</PanelHeader>\n        <PanelBody>\n          {primary && (\n            <EmailRow\n              onRemove={this.handleRemove}\n              onVerify={this.handleVerify}\n              {...primary}\n            />\n          )}\n\n          {secondary?.map(emailObj => (\n            <EmailRow\n              key={emailObj.email}\n              onSetPrimary={this.handleSetPrimary}\n              onRemove={this.handleRemove}\n              onVerify={this.handleVerify}\n              {...emailObj}\n            />\n          ))}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype EmailRowProps = {\n  email: string;\n  onRemove: (email: string, e: React.MouseEvent) => void;\n  onVerify: (email: string, e: React.MouseEvent) => void;\n  hideRemove?: boolean;\n  isPrimary?: boolean;\n  isVerified?: boolean;\n  onSetPrimary?: (email: string, e: React.MouseEvent) => void;\n};\n\nfunction EmailRow({\n  email,\n  onRemove,\n  onVerify,\n  onSetPrimary,\n  isVerified,\n  isPrimary,\n  hideRemove,\n}: EmailRowProps) {\n  return (\n    <EmailItem>\n      <EmailTags>\n        {email}\n        {!isVerified && <Tag type=\"warning\">{t('Unverified')}</Tag>}\n        {isPrimary && <Tag type=\"success\">{t('Primary')}</Tag>}\n      </EmailTags>\n      <ButtonBar gap={1}>\n        {!isPrimary && isVerified && (\n          <Button size=\"sm\" onClick={e => onSetPrimary?.(email, e)}>\n            {t('Set as primary')}\n          </Button>\n        )}\n        {!isVerified && (\n          <Button size=\"sm\" onClick={e => onVerify(email, e)}>\n            {t('Resend verification')}\n          </Button>\n        )}\n        {!hideRemove && !isPrimary && (\n          <Button\n            aria-label={t('Remove email')}\n            data-test-id=\"remove\"\n            priority=\"danger\"\n            size=\"sm\"\n            icon={<IconDelete />}\n            onClick={e => onRemove(email, e)}\n          />\n        )}\n      </ButtonBar>\n    </EmailItem>\n  );\n}\n\nconst EmailTags = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  align-items: center;\n`;\n\nconst EmailItem = styled(PanelItem)`\n  justify-content: space-between;\n`;\n"],"names":["ENDPOINT","AccountEmails","AsyncView","constructor","arguments","_defineProperty","_change","model","id","undefined","setValue","this","remountComponent","getTitle","t","getEndpoints","renderBody","_jsxs","Fragment","children","_jsx","SettingsPageHeader","title","EmailAddresses","Form","apiMethod","apiEndpoint","saveOnBlur","allowUndo","onSubmitSuccess","handleSubmitSuccess","JsonForm","forms","accountEmailsFields","AlertLink","to","icon","IconStack","AsyncComponent","email","doApiCall","method","data","endpoint","requestParams","setState","loading","emails","api","requestPromise","then","catch","err","responseJSON","addErrorMessage","render","state","primary","find","_ref","isPrimary","secondary","filter","_ref2","Panel","PanelHeader","PanelBody","LoadingIndicator","EmailRow","onRemove","handleRemove","onVerify","handleVerify","map","emailObj","onSetPrimary","handleSetPrimary","_ref3","isVerified","hideRemove","EmailItem","EmailTags","Tag","type","ButtonBar","gap","Button","size","onClick","e","priority","IconDelete","displayName","_styled","target","space","PanelItem","name","styles"],"sourceRoot":""}