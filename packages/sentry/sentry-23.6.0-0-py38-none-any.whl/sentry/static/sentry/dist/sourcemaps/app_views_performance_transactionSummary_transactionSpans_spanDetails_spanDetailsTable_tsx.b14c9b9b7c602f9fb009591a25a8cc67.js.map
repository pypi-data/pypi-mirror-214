{"version":3,"file":"chunks/app_views_performance_transactionSummary_transactionSpans_spanDetails_spanDetailsTable_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/performanceDuration.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/spanDetailsTable.tsx"],"sourcesContent":["import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n  replace?: boolean;\n};\n\nfunction SortLink({\n  align,\n  title,\n  canSort,\n  generateSortLink,\n  onClick,\n  direction,\n  replace,\n}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  const handleOnClick: React.MouseEventHandler<HTMLAnchorElement> = e => {\n    if (replace) {\n      e.preventDefault();\n      browserHistory.replace(target);\n    }\n    onClick?.(e);\n  };\n\n  return (\n    <StyledLink align={align} to={target} onClick={handleOnClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  // @ts-expect-error It doesn't look like the `css` property is a part of the props,\n  // but prior to this style of destructure-omitting it, it was being omitted\n  // with lodash.omit. I mean keeping it omitted here just in case.\n  const {align: _align, css: _css, ...forwardProps} = props;\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import Duration from 'sentry/components/duration';\nimport {defined} from 'sentry/utils';\n\ninterface DurationProps {\n  abbreviation?: boolean;\n}\n\ninterface SecondsProps extends DurationProps {\n  seconds: number;\n}\n\ninterface MillisecondsProps extends DurationProps {\n  milliseconds: number;\n}\n\ninterface NanosecondsProps extends DurationProps {\n  nanoseconds: number;\n}\n\ntype PerformanceDurationProps = SecondsProps | MillisecondsProps | NanosecondsProps;\n\nfunction isMilliseconds(props: PerformanceDurationProps): props is MillisecondsProps {\n  return defined((props as MillisecondsProps).milliseconds);\n}\n\nfunction isNanoseconds(props: PerformanceDurationProps): props is NanosecondsProps {\n  return defined((props as NanosecondsProps).nanoseconds);\n}\n\nfunction PerformanceDuration(props: PerformanceDurationProps) {\n  const normalizedSeconds = isNanoseconds(props)\n    ? props.nanoseconds / 1_000_000_000\n    : isMilliseconds(props)\n    ? props.milliseconds / 1000\n    : props.seconds;\n\n  return (\n    <Duration\n      abbreviation={props.abbreviation}\n      seconds={normalizedSeconds}\n      fixedDigits={2}\n    />\n  );\n}\n\nexport default PerformanceDuration;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport Pagination from 'sentry/components/pagination';\nimport {DurationPill, RowRectangle} from 'sentry/components/performance/waterfall/rowBar';\nimport {pickBarColor, toPercent} from 'sentry/components/performance/waterfall/utils';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {ColumnType, fieldAlignment} from 'sentry/utils/discover/fields';\nimport {formatPercentage} from 'sentry/utils/formatters';\nimport {\n  ExampleTransaction,\n  SuspectSpan,\n} from 'sentry/utils/performance/suspectSpans/types';\nimport {VisuallyCompleteWithData} from 'sentry/utils/performanceForSentry';\n\nimport {generateTransactionLink} from '../../utils';\n\ntype TableColumnKeys =\n  | 'id'\n  | 'timestamp'\n  | 'transactionDuration'\n  | 'spanDuration'\n  | 'occurrences'\n  | 'cumulativeDuration'\n  | 'spans';\n\ntype TableColumn = GridColumnOrder<TableColumnKeys>;\n\ntype TableDataRow = Record<TableColumnKeys, any>;\n\ntype Props = {\n  examples: ExampleTransaction[];\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  transactionName: string;\n  pageLinks?: string | null;\n  project?: Project;\n  suspectSpan?: SuspectSpan;\n};\n\nexport default function SpanTable(props: Props) {\n  const {\n    location,\n    organization,\n    project,\n    examples,\n    suspectSpan,\n    transactionName,\n    isLoading,\n    pageLinks,\n  } = props;\n\n  if (!defined(examples)) {\n    return null;\n  }\n\n  const data = examples\n    // we assume that the span appears in each example at least once,\n    // if this assumption is broken, nothing onwards will work so\n    // filter out such examples\n    .filter(example => example.spans.length > 0)\n    .map(example => ({\n      id: example.id,\n      project: project?.slug,\n      // timestamps are in seconds but want them in milliseconds\n      timestamp: example.finishTimestamp * 1000,\n      transactionDuration: (example.finishTimestamp - example.startTimestamp) * 1000,\n      spanDuration: example.nonOverlappingExclusiveTime,\n      occurrences: example.spans.length,\n      cumulativeDuration: example.spans.reduce(\n        (duration, span) => duration + span.exclusiveTime,\n        0\n      ),\n      spans: example.spans,\n    }));\n\n  return (\n    <Fragment>\n      <VisuallyCompleteWithData\n        id=\"SpanDetails-SpanDetailsTable\"\n        hasData={!!data.length}\n        isLoading={isLoading}\n      >\n        <GridEditable\n          isLoading={isLoading}\n          data={data}\n          columnOrder={SPANS_TABLE_COLUMN_ORDER}\n          columnSortBy={[]}\n          grid={{\n            renderHeadCell,\n            renderBodyCell: renderBodyCellWithMeta(\n              location,\n              organization,\n              transactionName,\n              suspectSpan\n            ),\n          }}\n          location={location}\n        />\n      </VisuallyCompleteWithData>\n      <Pagination pageLinks={pageLinks ?? null} />\n    </Fragment>\n  );\n}\n\nfunction renderHeadCell(column: TableColumn, _index: number): React.ReactNode {\n  const align = fieldAlignment(column.key, COLUMN_TYPE[column.key]);\n  return (\n    <SortLink\n      title={column.name}\n      align={align}\n      direction={undefined}\n      canSort={false}\n      generateSortLink={() => undefined}\n    />\n  );\n}\n\nfunction renderBodyCellWithMeta(\n  location: Location,\n  organization: Organization,\n  transactionName: string,\n  suspectSpan?: SuspectSpan\n) {\n  return function (column: TableColumn, dataRow: TableDataRow): React.ReactNode {\n    // if the transaction duration is falsey, then just render the span duration on its own\n    if (column.key === 'spanDuration' && dataRow.transactionDuration) {\n      return (\n        <SpanDurationBar\n          spanOp={suspectSpan?.op ?? ''}\n          spanDuration={dataRow.spanDuration}\n          transactionDuration={dataRow.transactionDuration}\n        />\n      );\n    }\n\n    const fieldRenderer = getFieldRenderer(column.key, COLUMN_TYPE);\n    let rendered = fieldRenderer(dataRow, {location, organization});\n\n    if (column.key === 'id') {\n      const worstSpan = dataRow.spans.length\n        ? dataRow.spans.reduce((worst, span) =>\n            worst.exclusiveTime >= span.exclusiveTime ? worst : span\n          )\n        : null;\n      const target = generateTransactionLink(transactionName)(\n        organization,\n        dataRow,\n        location.query,\n        worstSpan.id\n      );\n\n      rendered = <Link to={target}>{rendered}</Link>;\n    }\n\n    return rendered;\n  };\n}\n\nconst COLUMN_TYPE: Omit<\n  Record<TableColumnKeys, ColumnType>,\n  'spans' | 'transactionDuration'\n> = {\n  id: 'string',\n  timestamp: 'date',\n  spanDuration: 'duration',\n  occurrences: 'integer',\n  cumulativeDuration: 'duration',\n};\n\nconst SPANS_TABLE_COLUMN_ORDER: TableColumn[] = [\n  {\n    key: 'id',\n    name: t('Event ID'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'timestamp',\n    name: t('Timestamp'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'spanDuration',\n    name: t('Span Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'occurrences',\n    name: t('Count'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'cumulativeDuration',\n    name: t('Cumulative Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n];\n\nconst DurationBar = styled('div')`\n  position: relative;\n  display: flex;\n  top: ${space(0.5)};\n  background-color: ${p => p.theme.gray100};\n`;\n\nconst DurationBarSection = styled(RowRectangle)`\n  position: relative;\n  width: 100%;\n  top: 0;\n`;\n\ntype SpanDurationBarProps = {\n  spanDuration: number;\n  spanOp: string;\n  transactionDuration: number;\n};\n\nexport function SpanDurationBar(props: SpanDurationBarProps) {\n  const {spanOp, spanDuration, transactionDuration} = props;\n  const widthPercentage = spanDuration / transactionDuration;\n  const position = widthPercentage < 0.7 ? 'right' : 'inset';\n\n  return (\n    <DurationBar>\n      <div style={{width: toPercent(widthPercentage)}}>\n        <Tooltip\n          title={tct('[percentage] of the transaction', {\n            percentage: formatPercentage(widthPercentage),\n          })}\n          containerDisplayMode=\"block\"\n        >\n          <DurationBarSection style={{backgroundColor: pickBarColor(spanOp)}}>\n            <DurationPill durationDisplay={position} showDetail={false}>\n              <PerformanceDuration abbreviation milliseconds={spanDuration} />\n            </DurationPill>\n          </DurationBarSection>\n        </Tooltip>\n      </div>\n    </DurationBar>\n  );\n}\n"],"names":["SortLink","_ref","align","title","canSort","generateSortLink","onClick","direction","replace","target","_jsx","StyledNonLink","children","arrow","StyledIconArrow","size","_jsxs","StyledLink","to","e","preventDefault","browserHistory","displayName","_styled","props","_align","css","_css","forwardProps","Link","p","IconArrow","name","styles","PerformanceDuration","normalizedSeconds","defined","nanoseconds","isNanoseconds","milliseconds","isMilliseconds","seconds","Duration","abbreviation","fixedDigits","SpanTable","location","organization","project","examples","suspectSpan","transactionName","isLoading","pageLinks","data","filter","example","spans","length","map","id","slug","timestamp","finishTimestamp","transactionDuration","startTimestamp","spanDuration","nonOverlappingExclusiveTime","occurrences","cumulativeDuration","reduce","duration","span","exclusiveTime","Fragment","VisuallyCompleteWithData","hasData","GridEditable","columnOrder","SPANS_TABLE_COLUMN_ORDER","columnSortBy","grid","renderHeadCell","renderBodyCell","renderBodyCellWithMeta","Pagination","column","_index","fieldAlignment","key","COLUMN_TYPE","undefined","dataRow","SpanDurationBar","spanOp","op","rendered","getFieldRenderer","fieldRenderer","worstSpan","worst","generateTransactionLink","query","t","width","COL_WIDTH_UNDEFINED","DurationBar","space","theme","gray100","DurationBarSection","RowRectangle","widthPercentage","position","style","toPercent","Tooltip","tct","percentage","formatPercentage","containerDisplayMode","backgroundColor","pickBarColor","DurationPill","durationDisplay","showDetail"],"sourceRoot":""}