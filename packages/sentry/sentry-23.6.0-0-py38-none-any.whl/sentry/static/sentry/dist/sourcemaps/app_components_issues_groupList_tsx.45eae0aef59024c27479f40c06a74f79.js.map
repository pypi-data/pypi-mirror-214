{"version":3,"file":"chunks/app_components_issues_groupList_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/issues/groupList.tsx","webpack:///./app/components/issues/groupListHeader.tsx","webpack:///./app/views/alerts/rules/metric/details/relatedIssuesNotAvailable.tsx"],"sourcesContent":["import {Component} from 'react';\nimport {browserHistory, WithRouterProps} from 'react-router';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\nimport {fetchOrgMembers, indexMembersByProject} from 'sentry/actionCreators/members';\nimport {Client} from 'sentry/api';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport IssuesReplayCountProvider from 'sentry/components/replays/issuesReplayCountProvider';\nimport {parseSearch, Token} from 'sentry/components/searchSyntax/parser';\nimport {treeResultLocator} from 'sentry/components/searchSyntax/utils';\nimport StreamGroup, {\n  DEFAULT_STREAM_GROUP_STATS_PERIOD,\n} from 'sentry/components/stream/group';\nimport {t} from 'sentry/locale';\nimport GroupStore from 'sentry/stores/groupStore';\nimport {Group} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n// eslint-disable-next-line no-restricted-imports\nimport withSentryRouter from 'sentry/utils/withSentryRouter';\nimport {TimePeriodType} from 'sentry/views/alerts/rules/metric/details/constants';\nimport {RELATED_ISSUES_BOOLEAN_QUERY_ERROR} from 'sentry/views/alerts/rules/metric/details/relatedIssuesNotAvailable';\n\nimport GroupListHeader from './groupListHeader';\n\nconst defaultProps = {\n  canSelectGroups: true,\n  withChart: true,\n  withPagination: true,\n  useFilteredStats: true,\n  useTintRow: true,\n  narrowGroups: false,\n};\n\ntype Props = WithRouterProps & {\n  api: Client;\n  endpointPath: string;\n  orgId: string;\n  query: string;\n  customStatsPeriod?: TimePeriodType;\n  onFetchSuccess?: (\n    groupListState: State,\n    onCursor: (\n      cursor: string,\n      path: string,\n      query: Record<string, any>,\n      pageDiff: number\n    ) => void\n  ) => void;\n  queryFilterDescription?: string;\n  queryParams?: Record<string, number | string | string[] | undefined | null>;\n  renderEmptyMessage?: () => React.ReactNode;\n  renderErrorMessage?: (props: {detail: string}, retry: () => void) => React.ReactNode;\n  // where the group list is rendered\n  source?: string;\n} & Partial<typeof defaultProps>;\n\ntype State = {\n  error: boolean;\n  errorData: {detail: string} | null;\n  groups: Group[];\n  loading: boolean;\n  pageLinks: string | null;\n  memberList?: ReturnType<typeof indexMembersByProject>;\n};\n\nclass GroupList extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    loading: true,\n    error: false,\n    errorData: null,\n    groups: [],\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    return (\n      !isEqual(this.state, nextState) ||\n      nextProps.endpointPath !== this.props.endpointPath ||\n      nextProps.query !== this.props.query ||\n      !isEqual(nextProps.queryParams, this.props.queryParams)\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const ignoredQueryParams = ['end'];\n\n    if (\n      prevProps.orgId !== this.props.orgId ||\n      prevProps.endpointPath !== this.props.endpointPath ||\n      prevProps.query !== this.props.query ||\n      !isEqual(\n        omit(prevProps.queryParams, ignoredQueryParams),\n        omit(this.props.queryParams, ignoredQueryParams)\n      )\n    ) {\n      this.fetchData();\n    }\n  }\n\n  componentWillUnmount() {\n    GroupStore.reset();\n    this.listener?.();\n  }\n\n  listener = GroupStore.listen(() => this.onGroupChange(), undefined);\n\n  fetchData = async () => {\n    GroupStore.loadInitialData([]);\n    const {api, orgId, queryParams} = this.props;\n    api.clear();\n\n    this.setState({loading: true, error: false, errorData: null});\n\n    fetchOrgMembers(api, orgId).then(members => {\n      this.setState({memberList: indexMembersByProject(members)});\n    });\n\n    const endpoint = this.getGroupListEndpoint();\n\n    const parsedQuery = parseSearch((queryParams ?? this.getQueryParams()).query);\n    const hasLogicBoolean = parsedQuery\n      ? treeResultLocator<boolean>({\n          tree: parsedQuery,\n          noResultValue: false,\n          visitorTest: ({token, returnResult}) => {\n            return token.type === Token.LOGIC_BOOLEAN ? returnResult(true) : null;\n          },\n        })\n      : false;\n\n    // Check if the alert rule query has AND or OR\n    // logic queries haven't been implemented for issue search yet\n    if (hasLogicBoolean) {\n      this.setState({\n        error: true,\n        errorData: {detail: RELATED_ISSUES_BOOLEAN_QUERY_ERROR},\n        loading: false,\n      });\n      return;\n    }\n\n    try {\n      const [data, , jqXHR] = await api.requestPromise(endpoint, {\n        includeAllArgs: true,\n      });\n\n      GroupStore.add(data);\n\n      this.setState(\n        {\n          error: false,\n          errorData: null,\n          loading: false,\n          pageLinks: jqXHR?.getResponseHeader('Link') ?? null,\n        },\n        () => {\n          this.props.onFetchSuccess?.(this.state, this.handleCursorChange);\n        }\n      );\n    } catch (error) {\n      this.setState({error: true, errorData: error.responseJSON, loading: false});\n    }\n  };\n\n  getGroupListEndpoint() {\n    const {orgId, endpointPath, queryParams} = this.props;\n    const path = endpointPath ?? `/organizations/${orgId}/issues/`;\n    const queryParameters = queryParams ?? this.getQueryParams();\n\n    return `${path}?${qs.stringify(queryParameters)}`;\n  }\n\n  getQueryParams() {\n    const {location, query} = this.props;\n\n    const queryParams = location.query;\n    queryParams.limit = 50;\n    queryParams.sort = 'new';\n    queryParams.query = query;\n\n    return queryParams;\n  }\n\n  handleCursorChange(\n    cursor: string | undefined,\n    path: string,\n    query: Record<string, any>,\n    pageDiff: number\n  ) {\n    const queryPageInt = parseInt(query.page, 10);\n    let nextPage: number | undefined = isNaN(queryPageInt)\n      ? pageDiff\n      : queryPageInt + pageDiff;\n\n    // unset cursor and page when we navigate back to the first page\n    // also reset cursor if somehow the previous button is enabled on\n    // first page and user attempts to go backwards\n    if (nextPage <= 0) {\n      cursor = undefined;\n      nextPage = undefined;\n    }\n\n    browserHistory.push({\n      pathname: path,\n      query: {...query, cursor, page: nextPage},\n    });\n  }\n\n  onGroupChange() {\n    const groups = GroupStore.getAllItems() as Group[];\n    if (!isEqual(groups, this.state.groups)) {\n      this.setState({groups});\n    }\n  }\n\n  render() {\n    const {\n      canSelectGroups,\n      withChart,\n      renderEmptyMessage,\n      renderErrorMessage,\n      withPagination,\n      useFilteredStats,\n      useTintRow,\n      customStatsPeriod,\n      queryParams,\n      queryFilterDescription,\n      narrowGroups,\n      source,\n    } = this.props;\n    const {loading, error, errorData, groups, memberList, pageLinks} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (error) {\n      if (typeof renderErrorMessage === 'function' && errorData) {\n        return renderErrorMessage(errorData, this.fetchData);\n      }\n\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    if (groups.length === 0) {\n      if (typeof renderEmptyMessage === 'function') {\n        return renderEmptyMessage();\n      }\n      return (\n        <Panel>\n          <PanelBody>\n            <EmptyStateWarning>\n              <p>{t(\"There don't seem to be any events fitting the query.\")}</p>\n            </EmptyStateWarning>\n          </PanelBody>\n        </Panel>\n      );\n    }\n\n    const statsPeriod =\n      queryParams?.groupStatsPeriod === 'auto'\n        ? queryParams?.groupStatsPeriod\n        : DEFAULT_STREAM_GROUP_STATS_PERIOD;\n\n    return (\n      <IssuesReplayCountProvider groupIds={groups.map(({id}) => id)}>\n        <Panel>\n          <GroupListHeader withChart={!!withChart} narrowGroups={narrowGroups} />\n          <PanelBody>\n            {groups.map(({id, project}) => {\n              const members = memberList?.hasOwnProperty(project.slug)\n                ? memberList[project.slug]\n                : undefined;\n\n              return (\n                <StreamGroup\n                  key={id}\n                  id={id}\n                  canSelect={canSelectGroups}\n                  withChart={withChart}\n                  memberList={members}\n                  useFilteredStats={useFilteredStats}\n                  useTintRow={useTintRow}\n                  customStatsPeriod={customStatsPeriod}\n                  statsPeriod={statsPeriod}\n                  queryFilterDescription={queryFilterDescription}\n                  narrowGroups={narrowGroups}\n                  source={source}\n                />\n              );\n            })}\n          </PanelBody>\n        </Panel>\n        {withPagination && (\n          <Pagination pageLinks={pageLinks} onCursor={this.handleCursorChange} />\n        )}\n      </IssuesReplayCountProvider>\n    );\n  }\n}\n\nexport {GroupList};\n\nexport default withApi(withSentryRouter(GroupList));\n","import styled from '@emotion/styled';\n\nimport {PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  withChart: boolean;\n  narrowGroups?: boolean;\n  showLastTriggered?: boolean;\n};\n\nfunction GroupListHeader({\n  withChart = true,\n  narrowGroups = false,\n  showLastTriggered = false,\n}: Props) {\n  return (\n    <PanelHeader disablePadding>\n      <IssueWrapper>{t('Issue')}</IssueWrapper>\n      {withChart && <ChartWrapper narrowGroups={narrowGroups}>{t('Graph')}</ChartWrapper>}\n      <EventUserWrapper>{t('events')}</EventUserWrapper>\n      <EventUserWrapper>{t('users')}</EventUserWrapper>\n      <AssigneeWrapper narrowGroups={narrowGroups}>{t('Assignee')}</AssigneeWrapper>\n      {showLastTriggered && <EventUserWrapper>{t('Last Triggered')}</EventUserWrapper>}\n    </PanelHeader>\n  );\n}\n\nexport default GroupListHeader;\n\nconst Heading = styled('div')`\n  display: flex;\n  align-self: center;\n  margin: 0 ${space(2)};\n  color: ${p => p.theme.subText};\n`;\n\nconst IssueWrapper = styled(Heading)`\n  flex: 1;\n  width: 66.66%;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    width: 50%;\n  }\n`;\n\nconst EventUserWrapper = styled(Heading)`\n  justify-content: flex-end;\n  width: 60px;\n  white-space: nowrap;\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    width: 80px;\n  }\n`;\n\nconst ChartWrapper = styled(Heading)<{narrowGroups: boolean}>`\n  justify-content: space-between;\n  width: 160px;\n\n  @media (max-width: ${p =>\n      p.narrowGroups ? p.theme.breakpoints.xlarge : p.theme.breakpoints.large}) {\n    display: none;\n  }\n`;\n\nconst AssigneeWrapper = styled(Heading)<{narrowGroups: boolean}>`\n  justify-content: flex-end;\n  width: 80px;\n\n  @media (max-width: ${p =>\n      p.narrowGroups ? p.theme.breakpoints.large : p.theme.breakpoints.medium}) {\n    display: none;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport type {LinkProps} from 'sentry/components/links/link';\nimport {Panel} from 'sentry/components/panels';\n\ninterface Props {\n  buttonText: string;\n  buttonTo: LinkProps['to'];\n}\n\nexport const RELATED_ISSUES_BOOLEAN_QUERY_ERROR =\n  'Error parsing search query: Boolean statements containing \"OR\" or \"AND\" are not supported in this search';\n\n/**\n * Renders an Alert box of type \"info\" for boolean queries in alert details. Renders a discover link if the feature is available.\n */\nexport function RelatedIssuesNotAvailable({buttonTo, buttonText}: Props) {\n  return (\n    <StyledAlert\n      type=\"info\"\n      showIcon\n      trailingItems={\n        <Feature features={['discover-basic']}>\n          <Button priority=\"default\" size=\"xs\" to={buttonTo}>\n            {buttonText}\n          </Button>\n        </Feature>\n      }\n    >\n      <div data-test-id=\"loading-error-message\">\n        Related Issues unavailable for this alert.\n      </div>\n    </StyledAlert>\n  );\n}\n\nconst StyledAlert = styled(Alert)`\n  ${Panel} & {\n    border-radius: 0;\n    border-width: 1px 0;\n  }\n`;\n"],"names":["GroupList","Component","constructor","arguments","_defineProperty","loading","error","errorData","groups","pageLinks","GroupStore","this","onGroupChange","undefined","async","api","orgId","queryParams","props","clear","setState","fetchOrgMembers","then","members","memberList","indexMembersByProject","endpoint","getGroupListEndpoint","parsedQuery","parseSearch","getQueryParams","query","treeResultLocator","tree","noResultValue","visitorTest","_ref","token","returnResult","type","Token","detail","RELATED_ISSUES_BOOLEAN_QUERY_ERROR","data","jqXHR","requestPromise","includeAllArgs","getResponseHeader","onFetchSuccess","state","handleCursorChange","responseJSON","componentDidMount","fetchData","shouldComponentUpdate","nextProps","nextState","isEqual","endpointPath","componentDidUpdate","prevProps","ignoredQueryParams","omit","componentWillUnmount","listener","path","queryParameters","qs","location","limit","sort","cursor","pageDiff","queryPageInt","parseInt","page","nextPage","isNaN","browserHistory","pathname","render","canSelectGroups","withChart","renderEmptyMessage","renderErrorMessage","withPagination","useFilteredStats","useTintRow","customStatsPeriod","queryFilterDescription","narrowGroups","source","_jsx","LoadingIndicator","LoadingError","onRetry","length","Panel","children","PanelBody","EmptyStateWarning","t","statsPeriod","groupStatsPeriod","DEFAULT_STREAM_GROUP_STATS_PERIOD","_jsxs","IssuesReplayCountProvider","groupIds","map","_ref2","id","GroupListHeader","_ref3","project","hasOwnProperty","slug","StreamGroup","canSelect","Pagination","onCursor","displayName","withApi","withSentryRouter","showLastTriggered","PanelHeader","disablePadding","IssueWrapper","ChartWrapper","EventUserWrapper","AssigneeWrapper","Heading","_styled","target","space","p","theme","subText","breakpoints","medium","xlarge","large","RelatedIssuesNotAvailable","buttonTo","buttonText","StyledAlert","showIcon","trailingItems","Feature","features","Button","priority","size","to","Alert"],"sourceRoot":""}