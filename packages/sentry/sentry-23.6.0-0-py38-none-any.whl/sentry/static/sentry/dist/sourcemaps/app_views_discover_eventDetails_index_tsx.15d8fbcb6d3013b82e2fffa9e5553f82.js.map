{"version":3,"file":"chunks/app_views_discover_eventDetails_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/views/discover/breadcrumb.tsx","webpack:///./app/components/group/times.tsx","webpack:///./app/components/seenByList.tsx","webpack:///./app/views/discover/eventDetails/linkedIssue.tsx","webpack:///./app/views/discover/eventDetails/content.tsx","webpack:///./app/views/discover/eventDetails/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport {space} from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst EventMessage = styled(\n  ({className, level, levelIndicatorSize, message, annotations}: Props) => (\n    <div className={className}>\n      {level && (\n        <ErrorLevel size={levelIndicatorSize} level={level}>\n          {level}\n        </ErrorLevel>\n      )}\n\n      {message && <Message>{message}</Message>}\n\n      {annotations}\n    </div>\n  )\n)`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst Message = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport Breadcrumbs, {Crumb} from 'sentry/components/breadcrumbs';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {getDiscoverLandingUrl} from 'sentry/utils/discover/urls';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  event?: Event;\n  isHomepage?: boolean;\n};\n\nfunction DiscoverBreadcrumb({\n  eventView,\n  event,\n  organization,\n  location,\n  isHomepage,\n}: Props) {\n  const crumbs: Crumb[] = [];\n  const discoverTarget = organization.features.includes('discover-query')\n    ? {\n        pathname: getDiscoverLandingUrl(organization),\n        query: {\n          ...omit(location.query, 'homepage'),\n          ...eventView.generateBlankQueryStringObject(),\n          ...eventView.getPageFiltersQuery(),\n        },\n      }\n    : null;\n\n  crumbs.push({\n    to:\n      isHomepage && eventView\n        ? eventView.getResultsViewUrlTarget(organization.slug, isHomepage)\n        : discoverTarget,\n    label: t('Discover'),\n  });\n\n  if (!isHomepage && eventView && eventView.isValid()) {\n    crumbs.push({\n      to: `/organizations/${organization.slug}/discover/queries/`,\n      label: t('Saved Queries'),\n    });\n    crumbs.push({\n      to: eventView.getResultsViewUrlTarget(organization.slug, isHomepage),\n      label: eventView.name || '',\n    });\n  }\n\n  if (event) {\n    crumbs.push({\n      label: t('Event Detail'),\n    });\n  }\n\n  return <Breadcrumbs crumbs={crumbs} />;\n}\n\nexport default DiscoverBreadcrumb;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconClock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\n/**\n * Renders the first & last seen times for a group or event with\n * a clock icon.\n */\n\ntype Props = {\n  firstSeen: string;\n  lastSeen: string;\n};\n\nfunction Times({lastSeen, firstSeen}: Props) {\n  return (\n    <Container>\n      <FlexWrapper>\n        {lastSeen && (\n          <Fragment>\n            <StyledIconClock legacySize=\"11px\" />\n            <TimeSince date={lastSeen} suffix={t('ago')} />\n          </Fragment>\n        )}\n        {firstSeen && lastSeen && (\n          <span className=\"hidden-xs hidden-sm\">&nbsp;—&nbsp;</span>\n        )}\n        {firstSeen && (\n          <TimeSince date={firstSeen} suffix={t('old')} className=\"hidden-xs hidden-sm\" />\n        )}\n      </FlexWrapper>\n    </Container>\n  );\n}\n\nconst Container = styled('div')`\n  flex-shrink: 1;\n  min-width: 0; /* flex-hack for overflow-ellipsised children */\n`;\n\nconst FlexWrapper = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n\n  /* The following aligns the icon with the text, fixes bug in Firefox */\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  /* this is solely for optics, since TimeSince always begins\n  with a number, and numbers do not have descenders */\n  margin-right: ${space(0.5)};\n`;\n\nexport default Times;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport AvatarList from 'sentry/components/avatar/avatarList';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconShow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {AvatarUser, User} from 'sentry/types';\nimport {userDisplayName} from 'sentry/utils/formatters';\n\ntype Props = {\n  // Avatar size\n  avatarSize?: number;\n\n  className?: string;\n\n  iconPosition?: 'left' | 'right';\n\n  // Tooltip message for the \"Seen By\" icon\n  iconTooltip?: string;\n\n  // Max avatars to display\n  maxVisibleAvatars?: number;\n  // List of *all* users that have seen something\n  seenBy?: User[];\n};\n\nfunction SeenByList({\n  avatarSize = 28,\n  seenBy = [],\n  iconTooltip = t('People who have viewed this'),\n  maxVisibleAvatars = 10,\n  iconPosition = 'left',\n  className,\n}: Props) {\n  const activeUser = ConfigStore.get('user');\n  const displayUsers = seenBy.filter(user => activeUser.id !== user.id);\n\n  if (displayUsers.length === 0) {\n    return null;\n  }\n\n  // Note className=\"seen-by\" is required for responsive design\n  return (\n    <SeenByWrapper iconPosition={iconPosition} className={className}>\n      <AvatarList\n        users={displayUsers}\n        avatarSize={avatarSize}\n        maxVisibleAvatars={maxVisibleAvatars}\n        renderTooltip={user => (\n          <Fragment>\n            {userDisplayName(user)}\n            <br />\n            {moment((user as AvatarUser).lastSeen).format('LL')}\n          </Fragment>\n        )}\n      />\n      <IconWrapper iconPosition={iconPosition}>\n        <Tooltip title={iconTooltip} skipWrapper>\n          <IconShow size=\"sm\" color=\"subText\" />\n        </Tooltip>\n      </IconWrapper>\n    </SeenByWrapper>\n  );\n}\n\nconst SeenByWrapper = styled('div')<{iconPosition: Props['iconPosition']}>`\n  display: flex;\n  ${p => (p.iconPosition === 'left' ? 'flex-direction: row-reverse' : '')};\n`;\n\nconst IconWrapper = styled('div')<{iconPosition: Props['iconPosition']}>`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  color: ${p => p.theme.textColor};\n  height: 28px;\n  width: 24px;\n  text-align: center;\n  ${p => (p.iconPosition === 'left' ? 'margin-right: 10px' : '')};\n`;\n\nexport default SeenByList;\n","import styled from '@emotion/styled';\n\nimport {Alert} from 'sentry/components/alert';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport Times from 'sentry/components/group/times';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport SeenByList from 'sentry/components/seenByList';\nimport ShortId from 'sentry/components/shortId';\nimport GroupChart from 'sentry/components/stream/groupChart';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\n\ntype Props = {\n  eventId: string;\n  groupId: string;\n};\n\ntype State = {\n  group: Group;\n};\n\nclass LinkedIssue extends AsyncComponent<\n  Props & AsyncComponent['props'],\n  State & AsyncComponent['state']\n> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {groupId} = this.props;\n    const groupUrl = `/issues/${groupId}/`;\n\n    return [['group', groupUrl]];\n  }\n\n  renderLoading() {\n    return <Placeholder height=\"120px\" bottomGutter={2} />;\n  }\n\n  renderError(error?: Error, disableLog = false): React.ReactNode {\n    const {errors} = this.state;\n    const hasNotFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (hasNotFound) {\n      return (\n        <Alert type=\"warning\" showIcon>\n          {t('The linked issue cannot be found. It may have been deleted, or merged.')}\n        </Alert>\n      );\n    }\n\n    return super.renderError(error, disableLog);\n  }\n\n  renderBody() {\n    const {eventId} = this.props;\n    const {group} = this.state;\n    const issueUrl = `${group.permalink}events/${eventId}/`;\n\n    return (\n      <Section>\n        <SectionHeading>{t('Event Issue')}</SectionHeading>\n        <StyledIssueCard>\n          <IssueCardHeader>\n            <StyledLink to={issueUrl} data-test-id=\"linked-issue\">\n              <StyledShortId\n                shortId={group.shortId}\n                avatar={\n                  <ProjectBadge\n                    project={group.project}\n                    avatarSize={16}\n                    hideName\n                    disableLink\n                  />\n                }\n              />\n            </StyledLink>\n            <SeenByList seenBy={group.seenBy} maxVisibleAvatars={5} />\n          </IssueCardHeader>\n          <IssueCardBody>\n            <GroupChart statsPeriod=\"30d\" data={group} height={56} />\n          </IssueCardBody>\n          <IssueCardFooter>\n            <Times lastSeen={group.lastSeen} firstSeen={group.firstSeen} />\n          </IssueCardFooter>\n        </StyledIssueCard>\n      </Section>\n    );\n  }\n}\n\nconst Section = styled('div')`\n  margin-bottom: ${space(4)};\n`;\n\nconst StyledIssueCard = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst IssueCardHeader = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(1)};\n`;\n\nconst StyledLink = styled(Link)`\n  justify-content: flex-start;\n`;\n\nconst IssueCardBody = styled('div')`\n  background: ${p => p.theme.backgroundSecondary};\n  padding-top: ${space(1)};\n`;\n\nconst StyledShortId = styled(ShortId)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n`;\n\nconst IssueCardFooter = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeSmall};\n  padding: ${space(0.5)} ${space(1)};\n`;\n\nexport default LinkedIssue;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport NotFound from 'sentry/components/errors/notFound';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport EventCustomPerformanceMetrics from 'sentry/components/events/eventCustomPerformanceMetrics';\nimport {BorderlessEventEntries} from 'sentry/components/events/eventEntries';\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport EventVitals from 'sentry/components/events/eventVitals';\nimport * as SpanEntryContext from 'sentry/components/events/interfaces/spans/context';\nimport FileSize from 'sentry/components/fileSize';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {TransactionProfileIdProvider} from 'sentry/components/profiling/transactionProfileIdProvider';\nimport {TransactionToProfileButton} from 'sentry/components/profiling/transactionToProfileButton';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {TagsTable} from 'sentry/components/tagsTable';\nimport {IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {Event, EventTag} from 'sentry/types/event';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {formatTagKey} from 'sentry/utils/discover/fields';\nimport {eventDetailsRoute} from 'sentry/utils/discover/urls';\nimport {getMessage} from 'sentry/utils/events';\nimport {QuickTraceContext} from 'sentry/utils/performance/quickTrace/quickTraceContext';\nimport QuickTraceQuery from 'sentry/utils/performance/quickTrace/quickTraceQuery';\nimport TraceMetaQuery, {\n  TraceMetaQueryChildrenProps,\n} from 'sentry/utils/performance/quickTrace/traceMetaQuery';\nimport {QuickTraceQueryChildrenProps} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceTimeRangeFromEvent,\n  isTransaction,\n} from 'sentry/utils/performance/quickTrace/utils';\nimport Projects from 'sentry/utils/projects';\nimport EventMetas from 'sentry/views/performance/transactionDetails/eventMetas';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\nimport {ProfileGroupProvider} from 'sentry/views/profiling/profileGroupProvider';\nimport {ProfileContext, ProfilesProvider} from 'sentry/views/profiling/profilesProvider';\n\nimport DiscoverBreadcrumb from '../breadcrumb';\nimport {generateTitle, getExpandedResults} from '../utils';\n\nimport LinkedIssue from './linkedIssue';\n\ntype Props = Pick<RouteComponentProps<{eventSlug: string}, {}>, 'params' | 'location'> & {\n  eventSlug: string;\n  eventView: EventView;\n  organization: Organization;\n  isHomepage?: boolean;\n};\n\ntype State = {\n  event: Event | undefined;\n  isSidebarVisible: boolean;\n} & AsyncComponent['state'];\n\nclass EventDetailsContent extends AsyncComponent<Props, State> {\n  state: State = {\n    // AsyncComponent state\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: {},\n    event: undefined,\n\n    // local state\n    isSidebarVisible: true,\n  };\n\n  toggleSidebar = () => {\n    this.setState({isSidebarVisible: !this.state.isSidebarVisible});\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, params, location, eventView} = this.props;\n    const {eventSlug} = params;\n\n    const query = eventView.getEventsAPIPayload(location);\n\n    // Fields aren't used, reduce complexity by omitting from query entirely\n    query.field = [];\n\n    const url = `/organizations/${organization.slug}/events/${eventSlug}/`;\n\n    // Get a specific event. This could be coming from\n    // a paginated group or standalone event.\n    return [['event', url, {query}]];\n  }\n\n  get projectId() {\n    return this.props.eventSlug.split(':')[0];\n  }\n\n  generateTagUrl = (tag: EventTag) => {\n    const {eventView, organization, isHomepage} = this.props;\n    const {event} = this.state;\n    if (!event) {\n      return '';\n    }\n    const eventReference = {...event};\n    if (eventReference.id) {\n      delete (eventReference as any).id;\n    }\n    const tagKey = formatTagKey(tag.key);\n    const nextView = getExpandedResults(eventView, {[tagKey]: tag.value}, eventReference);\n    return nextView.getResultsViewUrlTarget(organization.slug, isHomepage);\n  };\n\n  renderBody() {\n    const {event} = this.state;\n\n    if (!event) {\n      return <NotFound />;\n    }\n\n    return this.renderContent(event);\n  }\n\n  renderContent(event: Event) {\n    const {organization, location, eventView, isHomepage} = this.props;\n    const {isSidebarVisible} = this.state;\n\n    // metrics\n    trackAnalytics('discover_v2.event_details', {\n      event_type: event.type,\n      organization,\n    });\n\n    const transactionName = event.tags.find(tag => tag.key === 'transaction')?.value;\n    const transactionSummaryTarget =\n      event.type === 'transaction' && transactionName\n        ? transactionSummaryRouteWithQuery({\n            orgSlug: organization.slug,\n            transaction: transactionName,\n            projectID: event.projectID,\n            query: location.query,\n          })\n        : null;\n\n    const eventJsonUrl = `/api/0/projects/${organization.slug}/${this.projectId}/events/${event.eventID}/json/`;\n\n    const hasProfilingFeature = organization.features.includes('profiling');\n\n    const profileId = isTransaction(event) ? event.contexts?.profile?.profile_id : null;\n\n    const renderContent = (\n      results?: QuickTraceQueryChildrenProps,\n      metaResults?: TraceMetaQueryChildrenProps\n    ) => (\n      <TransactionProfileIdProvider\n        projectId={event.projectID}\n        transactionId={event.type === 'transaction' ? event.id : undefined}\n        timestamp={event.dateReceived}\n      >\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <DiscoverBreadcrumb\n              eventView={eventView}\n              event={event}\n              organization={organization}\n              location={location}\n              isHomepage={isHomepage}\n            />\n            <EventHeader event={event} />\n          </Layout.HeaderContent>\n          <Layout.HeaderActions>\n            <ButtonBar gap={1}>\n              <Button size=\"sm\" onClick={this.toggleSidebar}>\n                {isSidebarVisible ? 'Hide Details' : 'Show Details'}\n              </Button>\n              <Button\n                size=\"sm\"\n                icon={<IconOpen />}\n                href={eventJsonUrl}\n                external\n                onClick={() =>\n                  trackAnalytics('performance_views.event_details.json_button_click', {\n                    organization,\n                  })\n                }\n              >\n                {t('JSON')} (<FileSize bytes={event.size} />)\n              </Button>\n              {hasProfilingFeature && event.type === 'transaction' && (\n                <TransactionToProfileButton projectSlug={this.projectId} />\n              )}\n              {transactionSummaryTarget && (\n                <Feature organization={organization} features={['performance-view']}>\n                  {({hasFeature}) => (\n                    <Button\n                      size=\"sm\"\n                      disabled={!hasFeature}\n                      priority=\"primary\"\n                      to={transactionSummaryTarget}\n                    >\n                      {t('Go to Summary')}\n                    </Button>\n                  )}\n                </Feature>\n              )}\n            </ButtonBar>\n          </Layout.HeaderActions>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <EventMetas\n              quickTrace={results ?? null}\n              meta={metaResults?.meta ?? null}\n              event={event}\n              organization={organization}\n              projectId={this.projectId}\n              location={location}\n              errorDest=\"discover\"\n              transactionDest=\"discover\"\n            />\n          </Layout.Main>\n          <Layout.Main fullWidth={!isSidebarVisible}>\n            <Projects orgId={organization.slug} slugs={[this.projectId]}>\n              {({projects, initiallyLoaded}) =>\n                initiallyLoaded ? (\n                  <SpanEntryContext.Provider\n                    value={{\n                      getViewChildTransactionTarget: childTransactionProps => {\n                        const childTransactionLink = eventDetailsRoute({\n                          eventSlug: childTransactionProps.eventSlug,\n                          orgSlug: organization.slug,\n                        });\n\n                        return {\n                          pathname: childTransactionLink,\n                          query: eventView.generateQueryStringObject(),\n                        };\n                      },\n                    }}\n                  >\n                    <QuickTraceContext.Provider value={results}>\n                      {hasProfilingFeature ? (\n                        <ProfilesProvider\n                          orgSlug={organization.slug}\n                          projectSlug={this.projectId}\n                          profileId={profileId || ''}\n                        >\n                          <ProfileContext.Consumer>\n                            {profiles => (\n                              <ProfileGroupProvider\n                                type=\"flamechart\"\n                                input={\n                                  profiles?.type === 'resolved' ? profiles.data : null\n                                }\n                                traceID={profileId || ''}\n                              >\n                                <BorderlessEventEntries\n                                  organization={organization}\n                                  event={event}\n                                  project={projects[0] as Project}\n                                  location={location}\n                                  showTagSummary={false}\n                                />\n                              </ProfileGroupProvider>\n                            )}\n                          </ProfileContext.Consumer>\n                        </ProfilesProvider>\n                      ) : (\n                        <BorderlessEventEntries\n                          organization={organization}\n                          event={event}\n                          project={projects[0] as Project}\n                          location={location}\n                          showTagSummary={false}\n                        />\n                      )}\n                    </QuickTraceContext.Provider>\n                  </SpanEntryContext.Provider>\n                ) : (\n                  <LoadingIndicator />\n                )\n              }\n            </Projects>\n          </Layout.Main>\n          {isSidebarVisible && (\n            <Layout.Side>\n              <EventVitals event={event} />\n              {(organization.features.includes('dashboards-mep') ||\n                organization.features.includes('mep-rollout-flag')) && (\n                <EventCustomPerformanceMetrics\n                  event={event}\n                  location={location}\n                  organization={organization}\n                  isHomepage={isHomepage}\n                />\n              )}\n              {event.groupID && (\n                <LinkedIssue groupId={event.groupID} eventId={event.eventID} />\n              )}\n              <TagsTable\n                generateUrl={this.generateTagUrl}\n                event={event}\n                query={eventView.query}\n              />\n            </Layout.Side>\n          )}\n        </Layout.Body>\n      </TransactionProfileIdProvider>\n    );\n\n    const hasQuickTraceView = organization.features.includes('performance-view');\n\n    if (hasQuickTraceView) {\n      const traceId = event.contexts?.trace?.trace_id ?? '';\n      const {start, end} = getTraceTimeRangeFromEvent(event);\n\n      return (\n        <TraceMetaQuery\n          location={location}\n          orgSlug={organization.slug}\n          traceId={traceId}\n          start={start}\n          end={end}\n        >\n          {metaResults => (\n            <QuickTraceQuery\n              event={event}\n              location={location}\n              orgSlug={organization.slug}\n            >\n              {results => renderContent(results, metaResults)}\n            </QuickTraceQuery>\n          )}\n        </TraceMetaQuery>\n      );\n    }\n\n    return renderContent();\n  }\n\n  renderError(error: Error) {\n    const notFound = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n    const permissionDenied = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    if (notFound) {\n      return <NotFound />;\n    }\n    if (permissionDenied) {\n      return (\n        <LoadingError message={t('You do not have permission to view that event.')} />\n      );\n    }\n\n    return super.renderError(error, true);\n  }\n\n  getEventSlug = (): string => {\n    const {eventSlug} = this.props.params;\n\n    if (typeof eventSlug === 'string') {\n      return eventSlug.trim();\n    }\n\n    return '';\n  };\n\n  renderComponent() {\n    const {eventView, organization} = this.props;\n    const {event} = this.state;\n    const eventSlug = this.getEventSlug();\n    const projectSlug = eventSlug.split(':')[0];\n\n    const title = generateTitle({eventView, event, organization});\n\n    return (\n      <SentryDocumentTitle\n        title={title}\n        orgSlug={organization.slug}\n        projectSlug={projectSlug}\n      >\n        {super.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nfunction EventHeader({event}: {event: Event}) {\n  const message = getMessage(event);\n  return (\n    <EventHeaderContainer data-test-id=\"event-header\">\n      <TitleWrapper>\n        <StyledEventOrGroupTitle data={event} />\n      </TitleWrapper>\n      {message && (\n        <MessageWrapper>\n          <EventMessage message={message} />\n        </MessageWrapper>\n      )}\n    </EventHeaderContainer>\n  );\n}\n\nconst EventHeaderContainer = styled('div')`\n  max-width: ${p => p.theme.breakpoints.small};\n`;\n\nconst TitleWrapper = styled('div')`\n  margin-top: 20px;\n`;\n\nconst StyledEventOrGroupTitle = styled(EventOrGroupTitle)`\n  font-size: ${p => p.theme.headerFontSize};\n`;\n\nconst MessageWrapper = styled('div')`\n  margin-top: ${space(1)};\n`;\n\nexport default EventDetailsContent;\n","import {RouteComponentProps} from 'react-router';\nimport omit from 'lodash/omit';\n\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport EventDetailsContent from './content';\n\ntype Props = RouteComponentProps<{eventSlug: string}, {}> & {\n  organization: Organization;\n};\n\nfunction EventDetails({organization, location, params}: Props) {\n  const eventSlug = typeof params.eventSlug === 'string' ? params.eventSlug.trim() : '';\n\n  const isHomepage = location.query.homepage;\n  const eventView = EventView.fromLocation(\n    isHomepage ? {...location, query: omit(location.query, 'id')} : location\n  );\n  const eventName = eventView.name;\n\n  const documentTitle =\n    typeof eventName === 'string' && String(eventName).trim().length > 0\n      ? [String(eventName).trim(), t('Discover')]\n      : [t('Discover')];\n\n  const projectSlug = eventSlug.split(':')[0];\n\n  return (\n    <SentryDocumentTitle\n      title={documentTitle.join(' — ')}\n      orgSlug={organization.slug}\n      projectSlug={projectSlug}\n    >\n      <Layout.Page>\n        <NoProjectMessage organization={organization}>\n          <EventDetailsContent\n            organization={organization}\n            location={location}\n            params={params}\n            eventView={eventView}\n            eventSlug={eventSlug}\n            isHomepage={isHomepage}\n          />\n        </NoProjectMessage>\n      </Layout.Page>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withOrganization(EventDetails);\n"],"names":["DEFAULT_SIZE","_styled","target","p","size","level","theme","error","EventMessage","_ref","className","levelIndicatorSize","message","annotations","_jsxs","children","_jsx","ErrorLevel","Message","space","overflowEllipsis","DiscoverBreadcrumb","eventView","event","organization","location","isHomepage","crumbs","discoverTarget","features","includes","pathname","getDiscoverLandingUrl","query","omit","generateBlankQueryStringObject","getPageFiltersQuery","push","to","getResultsViewUrlTarget","slug","label","t","isValid","name","Breadcrumbs","displayName","Times","lastSeen","firstSeen","Container","FlexWrapper","Fragment","StyledIconClock","legacySize","TimeSince","date","suffix","styles","IconClock","SeenByList","avatarSize","seenBy","iconTooltip","maxVisibleAvatars","iconPosition","activeUser","ConfigStore","displayUsers","filter","user","id","length","SeenByWrapper","AvatarList","users","renderTooltip","userDisplayName","moment","format","IconWrapper","Tooltip","title","skipWrapper","IconShow","color","textColor","LinkedIssue","AsyncComponent","getEndpoints","groupId","this","props","renderLoading","Placeholder","height","bottomGutter","renderError","disableLog","arguments","undefined","errors","state","Object","values","find","resp","status","Alert","type","showIcon","super","renderBody","eventId","group","issueUrl","permalink","Section","SectionHeading","StyledIssueCard","IssueCardHeader","StyledLink","StyledShortId","shortId","avatar","ProjectBadge","project","hideName","disableLink","IssueCardBody","GroupChart","statsPeriod","data","IssueCardFooter","border","borderRadius","Link","backgroundSecondary","ShortId","fontSizeMedium","gray300","fontSizeSmall","EventDetailsContent","constructor","_defineProperty","loading","reloading","isSidebarVisible","setState","tag","eventReference","tagKey","formatTagKey","key","getExpandedResults","value","eventSlug","params","trim","getEventsAPIPayload","field","projectId","split","renderContent","NotFound","trackAnalytics","event_type","transactionName","tags","transactionSummaryTarget","transactionSummaryRouteWithQuery","orgSlug","transaction","projectID","eventJsonUrl","eventID","hasProfilingFeature","profileId","isTransaction","contexts","profile","profile_id","results","metaResults","TransactionProfileIdProvider","transactionId","timestamp","dateReceived","Layout","EventHeader","ButtonBar","gap","Button","onClick","toggleSidebar","icon","IconOpen","href","external","FileSize","bytes","TransactionToProfileButton","projectSlug","Feature","hasFeature","disabled","priority","fullWidth","EventMetas","quickTrace","meta","errorDest","transactionDest","Projects","orgId","slugs","_ref2","projects","initiallyLoaded","SpanEntryContext","getViewChildTransactionTarget","childTransactionProps","eventDetailsRoute","generateQueryStringObject","QuickTraceContext","ProfilesProvider","ProfileContext","profiles","ProfileGroupProvider","input","traceID","BorderlessEventEntries","showTagSummary","LoadingIndicator","EventVitals","EventCustomPerformanceMetrics","groupID","TagsTable","generateUrl","generateTagUrl","traceId","trace","trace_id","start","end","getTraceTimeRangeFromEvent","TraceMetaQuery","QuickTraceQuery","notFound","permissionDenied","LoadingError","renderComponent","getEventSlug","generateTitle","SentryDocumentTitle","_ref3","getMessage","EventHeaderContainer","TitleWrapper","StyledEventOrGroupTitle","MessageWrapper","breakpoints","small","EventOrGroupTitle","headerFontSize","EventDetails","homepage","EventView","eventName","documentTitle","String","join","NoProjectMessage","withOrganization"],"sourceRoot":""}