{"version":3,"file":"chunks/app_views_userFeedback_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/components/issues/compactIssue.tsx","webpack:///./app/views/userFeedback/utils.tsx","webpack:///./app/views/userFeedback/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {bulkUpdate} from 'sentry/actionCreators/group';\nimport {addLoadingMessage, clearIndicators} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport Link from 'sentry/components/links/link';\nimport {PanelItem} from 'sentry/components/panels';\nimport {IconChat, IconMute, IconStar} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport GroupStore from 'sentry/stores/groupStore';\nimport {space} from 'sentry/styles/space';\nimport {BaseGroup, Organization} from 'sentry/types';\nimport {getMessage} from 'sentry/utils/events';\nimport {Aliases} from 'sentry/utils/theme';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype HeaderProps = {\n  data: BaseGroup;\n  organization: Organization;\n  eventId?: string;\n};\n\nfunction CompactIssueHeader({data, organization, eventId}: HeaderProps) {\n  const basePath = `/organizations/${organization.slug}/issues/`;\n\n  const issueLink = eventId\n    ? `${basePath}${data.id}/events/${eventId}/?referrer=compact-issue`\n    : `${basePath}${data.id}/?referrer=compact-issue`;\n\n  const commentColor: keyof Aliases =\n    data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n      ? 'success'\n      : 'textColor';\n\n  return (\n    <Fragment>\n      <IssueHeaderMetaWrapper>\n        <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n        <h3 className=\"truncate\">\n          <IconLink to={issueLink || ''}>\n            {data.status === 'ignored' && <IconMute size=\"xs\" />}\n            {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n            <EventOrGroupTitle data={data} />\n          </IconLink>\n        </h3>\n      </IssueHeaderMetaWrapper>\n      <div className=\"event-extra\">\n        <span className=\"project-name\">\n          <strong>{data.project.slug}</strong>\n        </span>\n        {data.numComments !== 0 && (\n          <span>\n            <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n              <IconChat size=\"xs\" color={commentColor} />\n              <span className=\"tag-count\">{data.numComments}</span>\n            </IconLink>\n          </span>\n        )}\n        <span className=\"culprit\">{getMessage(data)}</span>\n      </div>\n    </Fragment>\n  );\n}\n\ntype GroupTypes = ReturnType<typeof GroupStore.get>;\n\n/**\n * Type assertion to disambiguate GroupTypes\n *\n * The GroupCollapseRelease type isn't compatible with BaseGroup\n */\nfunction isGroup(maybe: GroupTypes): maybe is BaseGroup {\n  return (maybe as BaseGroup).status !== undefined;\n}\n\ntype Props = {\n  api: Client;\n  id: string;\n  organization: Organization;\n  children?: React.ReactNode;\n  data?: BaseGroup;\n  eventId?: string;\n};\n\ntype State = {\n  issue?: GroupTypes;\n};\n\nclass CompactIssue extends Component<Props, State> {\n  state: State = {\n    issue: this.props.data || GroupStore.get(this.props.id),\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  listener = GroupStore.listen(\n    (itemIds: Set<string>) => this.onGroupChange(itemIds),\n    undefined\n  );\n\n  onGroupChange(itemIds: Set<string>) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  }\n\n  onUpdate(data: Record<string, string>) {\n    const issue = this.state.issue;\n    if (!issue) {\n      return;\n    }\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    bulkUpdate(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  }\n\n  render() {\n    const issue = this.state.issue;\n    const {organization} = this.props;\n    if (!isGroup(issue)) {\n      return null;\n    }\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n\n    return (\n      <IssueRow className={className}>\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          eventId={this.props.eventId}\n        />\n        {this.props.children}\n      </IssueRow>\n    );\n  }\n}\n\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n\nconst IssueRow = styled(PanelItem)`\n  padding-top: ${space(1.5)};\n  padding-bottom: ${space(0.75)};\n  flex-direction: column;\n`;\n","import pick from 'lodash/pick';\nimport * as qs from 'query-string';\n\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\n\nconst DEFAULT_STATUS = 'unresolved';\n\n/**\n * Get query for API given the current location.search string\n */\nexport function getQuery(search: string) {\n  const query = qs.parse(search);\n\n  const status = typeof query.status !== 'undefined' ? query.status : DEFAULT_STATUS;\n\n  const queryParams = {\n    status,\n    ...pick(query, ['cursor', ...Object.values(URL_PARAM)]),\n  };\n\n  return queryParams;\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {withProfiler} from '@sentry/react';\nimport omit from 'lodash/omit';\n\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport {EventUserFeedback} from 'sentry/components/events/userFeedback';\nimport CompactIssue from 'sentry/components/issues/compactIssue';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport {PageHeadingQuestionTooltip} from 'sentry/components/pageHeadingQuestionTooltip';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {SegmentedControl} from 'sentry/components/segmentedControl';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, UserReport} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport {UserFeedbackEmpty} from './userFeedbackEmpty';\nimport {getQuery} from './utils';\n\ntype State = AsyncView['state'] & {\n  reportList: UserReport[];\n};\n\ntype Props = RouteComponentProps<{}, {}> & {\n  organization: Organization;\n};\n\nclass OrganizationUserFeedback extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {\n      organization,\n      location: {search},\n    } = this.props;\n\n    return [\n      [\n        'reportList',\n        `/organizations/${organization.slug}/user-feedback/`,\n        {\n          query: getQuery(search),\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return `${t('User Feedback')} - ${this.props.organization.slug}`;\n  }\n\n  get projectIds() {\n    const {project} = this.props.location.query;\n\n    return Array.isArray(project)\n      ? project\n      : typeof project === 'string'\n      ? [project]\n      : [];\n  }\n\n  renderResults() {\n    const {organization} = this.props;\n\n    return (\n      <Panel className=\"issue-list\" data-test-id=\"user-feedback-list\">\n        {this.state.reportList.map(item => {\n          const issue = item.issue;\n          return (\n            <CompactIssue key={item.id} id={issue.id} data={issue} eventId={item.eventID}>\n              <StyledEventUserFeedback\n                report={item}\n                orgId={organization.slug}\n                issueId={issue.id}\n              />\n            </CompactIssue>\n          );\n        })}\n      </Panel>\n    );\n  }\n\n  renderEmpty() {\n    return <UserFeedbackEmpty projectIds={this.projectIds} />;\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderStreamBody() {\n    const {loading, reportList} = this.state;\n\n    if (loading) {\n      return (\n        <Panel>\n          <LoadingIndicator />\n        </Panel>\n      );\n    }\n\n    if (!reportList.length) {\n      return this.renderEmpty();\n    }\n\n    return this.renderResults();\n  }\n\n  renderBody() {\n    const {organization, router} = this.props;\n    const {location} = this.props;\n    const {pathname, search, query} = location;\n    const {status} = getQuery(search);\n    const {reportListPageLinks} = this.state;\n\n    const unresolvedQuery = omit(query, 'status');\n    const allIssuesQuery = {...query, status: ''};\n\n    return (\n      <PageFiltersContainer>\n        <NoProjectMessage organization={organization}>\n          <Layout.Header>\n            <Layout.HeaderContent>\n              <Layout.Title>\n                {t('User Feedback')}\n                <PageHeadingQuestionTooltip\n                  docsUrl=\"https://docs.sentry.io/product/user-feedback/\"\n                  title={t(\n                    'Feedback submitted by users who experienced an error while using your application, including their name, email address, and any additional comments.'\n                  )}\n                />\n              </Layout.Title>\n            </Layout.HeaderContent>\n          </Layout.Header>\n          <Layout.Body data-test-id=\"user-feedback\">\n            <Layout.Main fullWidth>\n              <Filters>\n                <PageFilterBar>\n                  <ProjectPageFilter />\n                  <EnvironmentPageFilter />\n                  <DatePageFilter alignDropdown=\"right\" />\n                </PageFilterBar>\n                <SegmentedControl\n                  aria-label={t('Issue Status')}\n                  value={!Array.isArray(status) ? status || '' : ''}\n                  onChange={key =>\n                    router.replace({\n                      pathname,\n                      query: key === 'unresolved' ? unresolvedQuery : allIssuesQuery,\n                    })\n                  }\n                >\n                  <SegmentedControl.Item key=\"unresolved\">\n                    {t('Unresolved')}\n                  </SegmentedControl.Item>\n                  <SegmentedControl.Item key=\"\">{t('All Issues')}</SegmentedControl.Item>\n                </SegmentedControl>\n              </Filters>\n              {this.renderStreamBody()}\n              <Pagination pageLinks={reportListPageLinks} />\n            </Layout.Main>\n          </Layout.Body>\n        </NoProjectMessage>\n      </PageFiltersContainer>\n    );\n  }\n}\n\nexport default withOrganization(withProfiler(OrganizationUserFeedback));\n\nconst Filters = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(0, max-content) max-content;\n  justify-content: start;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: minmax(0, 1fr) max-content;\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nconst StyledEventUserFeedback = styled(EventUserFeedback)`\n  margin: ${space(2)} 0;\n`;\n"],"names":["DEFAULT_SIZE","_styled","target","p","size","level","theme","error","AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","CompactIssueHeader","_ref","data","organization","eventId","basePath","slug","issueLink","id","commentColor","subscriptionDetails","reason","_jsxs","Fragment","IssueHeaderMetaWrapper","StyledErrorLevel","className","IconLink","to","status","IconMute","isBookmarked","IconStar","isSolid","EventOrGroupTitle","project","numComments","IconChat","color","getMessage","CompactIssue","Component","constructor","arguments","_defineProperty","issue","props","GroupStore","itemIds","onGroupChange","undefined","UNSAFE_componentWillReceiveProps","nextProps","setState","componentWillUnmount","listener","has","onUpdate","state","addLoadingMessage","t","bulkUpdate","api","orgId","projectId","complete","clearIndicators","hasSeen","IssueRow","withApi","withOrganization","name","styles","ErrorLevel","space","Link","PanelItem","getQuery","search","query","qs","pick","Object","values","URL_PARAM","OrganizationUserFeedback","getEndpoints","location","projectIds","Array","isArray","renderResults","Panel","reportList","map","item","eventID","StyledEventUserFeedback","report","issueId","renderEmpty","UserFeedbackEmpty","renderLoading","renderBody","renderStreamBody","loading","LoadingIndicator","length","router","pathname","reportListPageLinks","unresolvedQuery","omit","allIssuesQuery","PageFiltersContainer","NoProjectMessage","Layout","PageHeadingQuestionTooltip","docsUrl","fullWidth","Filters","PageFilterBar","ProjectPageFilter","EnvironmentPageFilter","DatePageFilter","alignDropdown","SegmentedControl","value","onChange","key","replace","Pagination","pageLinks","withProfiler","breakpoints","medium","small","EventUserFeedback"],"sourceRoot":""}