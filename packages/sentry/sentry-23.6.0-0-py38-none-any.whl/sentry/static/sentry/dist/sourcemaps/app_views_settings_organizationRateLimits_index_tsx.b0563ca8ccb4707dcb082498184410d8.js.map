{"version":3,"file":"chunks/app_views_settings_organizationRateLimits_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6uBAeA,MAiBMA,EAjBqBC,MACzB,MAAMC,EAAkB,GACxB,IAAIC,EAAI,EACR,KAAOA,GAAK,KACVD,EAAME,KAAKD,GAETA,GADEA,EAAI,IACD,IACIA,EAAI,IACR,IAEA,IAGT,OAAOD,CAAK,EAIoBD,GAAqB,IAAAI,EAAA,CAAAC,KAAA,UAAAC,OAAA,mBAEvD,SAASC,EAAqBC,GAAwB,IAAvB,aAACC,GAAoBD,EAGlD,MAAM,MAACE,GAASD,GACV,QAACE,EAAO,gBAAEC,EAAe,aAAEC,EAAY,aAAEC,GAAgBJ,EACzDK,EAAc,CAClBC,iBAAkBH,GAAgB,IAClCI,iBAAkBH,GAGpB,OACEI,EAAAA,EAAAA,IAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAkB,CAACC,OAAOC,EAAAA,EAAAA,GAAE,kBAE7BL,EAAAA,EAAAA,IAACM,EAAAA,GAAK,CAAAL,SAAA,EACJC,EAAAA,EAAAA,IAACK,EAAAA,GAAW,CAAAN,UAAEI,EAAAA,EAAAA,GAAE,oBAChBL,EAAAA,EAAAA,IAACQ,EAAAA,EAAS,CAAAP,SAAA,EACRC,EAAAA,EAAAA,IAACO,EAAAA,GAAU,CAACC,KAAK,OAAMT,UACpBI,EAAAA,EAAAA,GAAG,+MAKNL,EAAAA,EAAAA,IAACW,EAAAA,EAAI,CACH,eAAa,oBACbC,YAAU,EACVC,WAAS,EACTC,UAAU,MACVC,YAAc,kBAAiBxB,EAAayB,QAC5CnB,YAAaA,EAAYI,SAAA,CAEvBR,GAoBAS,EAAAA,EAAAA,IAACe,EAAAA,EAAU,CACTC,OAAOb,EAAAA,EAAAA,GAAE,iBACTc,MAAMd,EAAAA,EAAAA,GACJ,2EACAJ,UAEFC,EAAAA,EAAAA,IAACkB,EAAAA,EAAS,CAACC,IAAGnC,EAAoBe,UAC/BqB,EAAAA,EAAAA,IACC,0FACA,CACE7B,UACAC,yBA9BRQ,EAAAA,EAAAA,IAACqB,EAAAA,EAAU,CACTpC,KAAK,mBACL+B,OAAOb,EAAAA,EAAAA,GAAE,iBACTmB,IAAK,EACLC,IAAK,IACLC,cAAe7C,EACfsC,MAAMd,EAAAA,EAAAA,GACJ,2EAEFsB,YAAY,WACZC,YAAaC,GACVA,GAEGP,EAAAA,EAAAA,IAAI,oBAAqB,CACvBQ,OAAQD,EAAME,oBAFhB1B,EAAAA,EAAAA,GAAE,eAwBZH,EAAAA,EAAAA,IAACqB,EAAAA,EAAU,CACTpC,KAAK,mBACL+B,OAAOb,EAAAA,EAAAA,GAAE,qBACTc,MAAMd,EAAAA,EAAAA,GACJ,mGAEF2B,KAAM,EACNR,IAAK,GACLC,IAAK,IACLG,YAAaC,GACD,MAAVA,EAAiB,GAAEA,MAAWxB,EAAAA,EAAAA,GAAE,gCAQhD,CAtFShB,EAAqB4C,YAAA,wBAwF9B,UChHA,GAAeC,EAAAA,EAAAA,IANf,SACEC,GAEA,OAAQA,EAAM5C,cAAsBW,EAAAA,EAAAA,IAACkC,EAAsB,IAAKD,IAAnC,IAC/B,G","sources":["webpack:///./app/views/settings/organizationRateLimits/organizationRateLimits.tsx","webpack:///./app/views/settings/organizationRateLimits/index.tsx"],"sourcesContent":["import {RouteComponentProps} from 'react-router';\n\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport RangeField from 'sentry/components/forms/fields/rangeField';\nimport Form from 'sentry/components/forms/form';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = RouteComponentProps<{}, {}> & {\n  organization: Organization;\n};\n\nconst getRateLimitValues = () => {\n  const steps: number[] = [];\n  let i = 0;\n  while (i <= 1_000_000) {\n    steps.push(i);\n    if (i < 10_000) {\n      i += 1_000;\n    } else if (i < 100_000) {\n      i += 10_000;\n    } else {\n      i += 100_000;\n    }\n  }\n  return steps;\n};\n\n// We can just generate this once\nconst ACCOUNT_RATE_LIMIT_VALUES = getRateLimitValues();\n\nfunction OrganizationRateLimit({organization}: Props) {\n  // TODO(billy): Update organization.quota in organizationStore with new values\n\n  const {quota} = organization;\n  const {maxRate, maxRateInterval, projectLimit, accountLimit} = quota;\n  const initialData = {\n    projectRateLimit: projectLimit || 100,\n    accountRateLimit: accountLimit,\n  };\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('Rate Limits')} />\n\n      <Panel>\n        <PanelHeader>{t('Adjust Limits')}</PanelHeader>\n        <PanelBody>\n          <PanelAlert type=\"info\">\n            {t(`Rate limits allow you to control how much data is stored for this\n                organization. When a rate is exceeded the system will begin discarding\n                data until the next interval.`)}\n          </PanelAlert>\n\n          <Form\n            data-test-id=\"rate-limit-editor\"\n            saveOnBlur\n            allowUndo\n            apiMethod=\"PUT\"\n            apiEndpoint={`/organizations/${organization.slug}/`}\n            initialData={initialData}\n          >\n            {!maxRate ? (\n              <RangeField\n                name=\"accountRateLimit\"\n                label={t('Account Limit')}\n                min={0}\n                max={1000000}\n                allowedValues={ACCOUNT_RATE_LIMIT_VALUES}\n                help={t(\n                  'The maximum number of events to accept across this entire organization.'\n                )}\n                placeholder=\"e.g. 500\"\n                formatLabel={value =>\n                  !value\n                    ? t('No Limit')\n                    : tct('[number] per hour', {\n                        number: value.toLocaleString(),\n                      })\n                }\n              />\n            ) : (\n              <FieldGroup\n                label={t('Account Limit')}\n                help={t(\n                  'The maximum number of events to accept across this entire organization.'\n                )}\n              >\n                <TextBlock css={{marginBottom: 0}}>\n                  {tct(\n                    'Your account is limited to a maximum of [maxRate] events per [maxRateInterval] seconds.',\n                    {\n                      maxRate,\n                      maxRateInterval,\n                    }\n                  )}\n                </TextBlock>\n              </FieldGroup>\n            )}\n            <RangeField\n              name=\"projectRateLimit\"\n              label={t('Per-Project Limit')}\n              help={t(\n                'The maximum percentage of the account limit (set above) that an individual project can consume.'\n              )}\n              step={5}\n              min={50}\n              max={100}\n              formatLabel={value =>\n                value !== 100 ? `${value}%` : t('No Limit \\u2014 100%')\n              }\n            />\n          </Form>\n        </PanelBody>\n      </Panel>\n    </div>\n  );\n}\n\nexport default OrganizationRateLimit;\n","import withOrganization from 'sentry/utils/withOrganization';\n\nimport OrganizationRateLimits from './organizationRateLimits';\n\nfunction OrganizationRateLimitsContainer(\n  props: React.ComponentProps<typeof OrganizationRateLimits>\n) {\n  return !props.organization ? null : <OrganizationRateLimits {...props} />;\n}\n\nexport default withOrganization(OrganizationRateLimitsContainer);\n"],"names":["ACCOUNT_RATE_LIMIT_VALUES","getRateLimitValues","steps","i","push","_ref2","name","styles","OrganizationRateLimit","_ref","organization","quota","maxRate","maxRateInterval","projectLimit","accountLimit","initialData","projectRateLimit","accountRateLimit","_jsxs","children","_jsx","SettingsPageHeader","title","t","Panel","PanelHeader","PanelBody","PanelAlert","type","Form","saveOnBlur","allowUndo","apiMethod","apiEndpoint","slug","FieldGroup","label","help","TextBlock","css","tct","RangeField","min","max","allowedValues","placeholder","formatLabel","value","number","toLocaleString","step","displayName","withOrganization","props","OrganizationRateLimits"],"sourceRoot":""}