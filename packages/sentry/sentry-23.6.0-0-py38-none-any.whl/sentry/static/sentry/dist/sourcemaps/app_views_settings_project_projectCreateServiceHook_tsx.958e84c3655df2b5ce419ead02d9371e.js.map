{"version":3,"file":"chunks/app_views_settings_project_projectCreateServiceHook_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"kmBAcA,SAASA,EAAwBC,GAAgC,IAA/B,aAACC,EAAY,OAAEC,GAAcF,EAC7D,MAAM,UAACG,GAAaD,EACdE,GAAQC,EAAAA,EAAAA,GAAE,uBAEhB,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAmB,CAACH,MAAOA,EAAMI,UAChCC,EAAAA,EAAAA,IAACC,EAAAA,SAAQ,CAAAF,SAAA,EACPF,EAAAA,EAAAA,IAACK,EAAAA,EAAkB,CAACP,MAAOA,KAC3BE,EAAAA,EAAAA,IAACM,EAAAA,EAAuB,CACtBX,aAAcA,EACdE,UAAWA,EACXU,YAAa,CAACC,OAAQ,GAAIC,UAAU,SAK9C,CAhBShB,EAAwBiB,YAAA,2BAkBjC,SAAeC,EAAAA,EAAAA,GAAiBlB,E,0vBCnBhC,MAAMmB,EAAgB,CAAC,cAAe,iBASvB,MAAMN,UAAgCO,EAAAA,UAAiBC,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,wBAClD,KAChB,MAAM,aAACrB,EAAY,UAAEE,GAAaoB,KAAKC,MACvCC,EAAAA,eAAAA,MACEC,EAAAA,EAAAA,GAAc,aAAYzB,EAAa0B,iBAAiBxB,YACzD,GACF,CAEDyB,SACE,MAAM,YAACf,EAAW,aAAEZ,EAAY,UAAEE,EAAS,OAAE0B,GAAUN,KAAKC,MAEtDM,EAAWD,EACZ,aAAY5B,EAAa0B,QAAQxB,WAAmB0B,KACpD,aAAY5B,EAAa0B,QAAQxB,WAEtC,OACEG,EAAAA,EAAAA,IAACyB,EAAAA,GAAK,CAAAvB,UACJC,EAAAA,EAAAA,IAACuB,EAAAA,EAAO,CACNC,UAAWJ,EAAS,MAAQ,OAC5BK,YAAaJ,EACbjB,YAAaA,EACbsB,gBAAiBZ,KAAKY,gBACtBC,YAAa,CACXC,UAAW,EACXC,aAAc,IAEhBC,YAAaV,GAASxB,EAAAA,EAAAA,GAAE,iBAAkBA,EAAAA,EAAAA,GAAE,eAAeG,SAAA,EAE3DF,EAAAA,EAAAA,IAACkC,EAAAA,GAAW,CAAAhC,UAAEH,EAAAA,EAAAA,GAAE,yBAChBI,EAAAA,EAAAA,IAACgC,EAAAA,EAAS,CAAAjC,SAAA,EACRF,EAAAA,EAAAA,IAACoC,EAAAA,EAAY,CAACC,KAAK,WAAWC,OAAOvC,EAAAA,EAAAA,GAAE,aACvCC,EAAAA,EAAAA,IAACuC,EAAAA,EAAS,CACRF,KAAK,MACLC,OAAOvC,EAAAA,EAAAA,GAAE,OACTyC,UAAQ,EACRC,MAAM1C,EAAAA,EAAAA,GAAE,yCAEVC,EAAAA,EAAAA,IAAC0C,EAAAA,EAAS,CACRL,KAAK,SACLC,OAAOvC,EAAAA,EAAAA,GAAE,UACT4C,QAAQ,EACRF,MAAM1C,EAAAA,EAAAA,GAAE,6CAA6CG,SAEpDR,IAAA,IAAC,KAAC2C,EAAI,MAAEO,EAAK,SAAEC,GAASnD,EAAA,OACvBM,EAAAA,EAAAA,IAAC8C,EAAAA,EAAgB,CAACD,SAAUA,EAAUD,MAAOA,EAAOP,KAAMA,EAAKnC,SAC5DU,EAAcmC,KAAIC,IACjBhD,EAAAA,EAAAA,IAAC8C,EAAAA,EAAAA,KAAqB,CAAaF,MAAOI,EAAM9C,SAC7C8C,GADyBA,MAIb,WAOjC,EAzDmB1C,EAAuBI,YAAA,yB","sources":["webpack:///./app/views/settings/project/projectCreateServiceHook.tsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'sentry/views/settings/project/serviceHookSettingsForm';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n};\n\nfunction ProjectCreateServiceHook({organization, params}: Props) {\n  const {projectId} = params;\n  const title = t('Create Service Hook');\n\n  return (\n    <SentryDocumentTitle title={title}>\n      <Fragment>\n        <SettingsPageHeader title={title} />\n        <ServiceHookSettingsForm\n          organization={organization}\n          projectId={projectId}\n          initialData={{events: [], isActive: true}}\n        />\n      </Fragment>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withOrganization(ProjectCreateServiceHook);\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport MultipleCheckbox from 'sentry/components/forms/controls/multipleCheckbox';\nimport BooleanField from 'sentry/components/forms/fields/booleanField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport FormField from 'sentry/components/forms/formField';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Organization, ServiceHook} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\nconst EVENT_CHOICES = ['event.alert', 'event.created'];\n\ntype Props = {\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  organization: Organization;\n  projectId: string;\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends Component<Props> {\n  onSubmitSuccess = () => {\n    const {organization, projectId} = this.props;\n    browserHistory.push(\n      normalizeUrl(`/settings/${organization.slug}/projects/${projectId}/hooks/`)\n    );\n  };\n\n  render() {\n    const {initialData, organization, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${organization.slug}/${projectId}/hooks/${hookId}/`\n      : `/projects/${organization.slug}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({name, value, onChange}) => (\n                <MultipleCheckbox onChange={onChange} value={value} name={name}>\n                  {EVENT_CHOICES.map(event => (\n                    <MultipleCheckbox.Item key={event} value={event}>\n                      {event}\n                    </MultipleCheckbox.Item>\n                  ))}\n                </MultipleCheckbox>\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n"],"names":["ProjectCreateServiceHook","_ref","organization","params","projectId","title","t","_jsx","SentryDocumentTitle","children","_jsxs","Fragment","SettingsPageHeader","ServiceHookSettingsForm","initialData","events","isActive","displayName","withOrganization","EVENT_CHOICES","Component","constructor","arguments","_defineProperty","this","props","browserHistory","normalizeUrl","slug","render","hookId","endpoint","Panel","ApiForm","apiMethod","apiEndpoint","onSubmitSuccess","footerStyle","marginTop","paddingRight","submitLabel","PanelHeader","PanelBody","BooleanField","name","label","TextField","required","help","FormField","inline","value","onChange","MultipleCheckbox","map","event"],"sourceRoot":""}