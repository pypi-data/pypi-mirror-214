{"version":3,"file":"chunks/app_components_gridEditable_sortLink_tsx-app_views_performance_landing_widgets_components_sel-2037ba.xxxxxxxxxxxxxxxxxxxx.js","mappings":"uiBAoBA,SAASA,EAAQC,GAQP,IARQ,MAChBC,EAAK,MACLC,EAAK,QACLC,EAAO,iBACPC,EAAgB,QAChBC,EAAO,UACPC,EAAS,QACTC,GACMP,EACN,MAAMQ,EAASJ,IAEf,IAAKI,IAAWL,EACd,OAAOM,EAAAA,EAAAA,IAACC,EAAa,CAACT,MAAOA,EAAMU,SAAET,IAGvC,MAAMU,EAASN,GACbG,EAAAA,EAAAA,IAACI,EAAe,CAACC,KAAK,KAAKR,UAAyB,SAAdA,EAAuB,OAAS,OAD7C,KAY3B,OACES,EAAAA,EAAAA,IAACC,EAAU,CAACf,MAAOA,EAAOgB,GAAIT,EAAQH,QAT0Ba,IAC5DX,IACFW,EAAEC,iBACFC,EAAAA,eAAAA,QAAuBZ,IAEzBH,IAAUa,EAAE,EAIiDP,SAAA,CAC1DT,EAAM,IAAEU,IAGf,CAhCSb,EAAQsB,YAAA,WAqCjB,MAAML,GAAaM,EAAAA,EAAAA,IAAQC,IAIzB,MAAOtB,MAAOuB,EAAQC,IAAKC,KAASC,GAAgBJ,EACpD,OAAOd,EAAAA,EAAAA,IAACmB,EAAAA,EAAI,IAAKD,GAAgB,GAClC,CAAAnB,OAAA,YANkBc,CAMjB,gHAaGO,GAAwBA,EAAE5B,MAAS,eAAc4B,EAAE5B,SAAW,IAAG,KAGhES,GAAgBY,EAAAA,EAAAA,GAAO,MAAK,CAAAd,OAAA,YAAZc,CAAa,gDAI9BO,GAA4BA,EAAE5B,MAAS,eAAc4B,EAAE5B,SAAW,IAAG,KAGpEY,GAAkBS,EAAAA,EAAAA,GAAOQ,EAAAA,GAAS,CAAAtB,OAAA,YAAhBc,CAAiB,CAAAS,KAAA,SAAAC,OAAA,uBAIzC,G,urBCxEe,SAASC,EAAeV,GACrC,OACEd,EAAAA,EAAAA,IAAA,OAAAE,SACGY,EAAMW,MAAMC,KAAI,CAACC,EAAMC,KACtBC,EAAAA,EAAAA,IAACC,EAAc,IACThB,EACJiB,WAAYH,IAAUd,EAAMkB,cAC5BC,aAAcL,EACdM,IAAKN,GAEJD,QAKX,CAEA,SAASG,EAAcvC,GAM4D,IAN3D,WACtBwC,EACAE,aAAcL,EAAK,SACnB1B,EAAQ,iBACRiC,EAAgB,WAChBC,GAC+E7C,EAC/E,OACEe,EAAAA,EAAAA,IAAC+B,EAAiB,CAAAnC,SAAA,EAChBF,EAAAA,EAAAA,IAACsC,EAAkB,CAACC,MAAOH,GAAc,GAAGlC,UAC1CF,EAAAA,EAAAA,IAACwC,EAAAA,EAAa,CAACZ,MAAOA,EAAOa,KAAK,QAAOvC,UACvCF,EAAAA,EAAAA,IAAC0C,EAAAA,EAAK,CAACC,QAASZ,EAAYa,SAAUA,IAAMT,EAAiBP,SAGhE1B,IAGP,CAlCwBsB,EAAcZ,YAAA,iBAiB7BkB,EAAclB,YAAA,iBAmBhB,MAAMiC,GAAmBhC,EAAAA,EAAAA,GAAO,MAAK,CAAAd,OAAA,aAAZc,CAAa,sFAK9BiC,EAAAA,EAAAA,GAAM,GAAE,KAGVC,GAAWlC,EAAAA,EAAAA,GAAO,OAAM,CAAAd,OAAA,aAAbc,CAAc,UAC3BO,GAAKA,EAAE4B,MAAMC,SAAO,eAChB7B,GAAKA,EAAE4B,MAAME,gBAAc,0BAI7BC,GAAWtC,EAAAA,EAAAA,GAAOM,EAAAA,EAAI,CAAApB,OAAA,aAAXc,CAAY,CAAAS,KAAA,SAAAC,OAAA,gCAK7B,SAAS6B,IACd,OACE9C,EAAAA,EAAAA,IAAC+C,EAAuB,CAAAnD,SAAA,EACtBF,EAAAA,EAAAA,IAACsD,EAAc,CAAApD,UAAEqD,EAAAA,EAAAA,GAAE,uBACnBvD,EAAAA,EAAAA,IAACwD,EAAgB,CAAAtD,UACdqD,EAAAA,EAAAA,GACC,sFAKV,CAEO,SAASE,EAAU3C,GAIxB,OACEd,EAAAA,EAAAA,IAAC0D,EAAa,CAACjE,OAAO8D,EAAAA,EAAAA,GAAE,oDAAoDrD,UAC1EF,EAAAA,EAAAA,IAAC2D,EAAe,CACd/D,QAASA,KACPkB,EAAMlB,UACNkB,EAAM8C,mBAAmB,EAAE,KAKrC,CA3BgBR,EAAuBxC,YAAA,0BAavB6C,EAAS7C,YAAA,YAgBzB,MAAM8C,GAAgB7C,EAAAA,EAAAA,GAAOgD,EAAAA,EAAO,CAAA9D,OAAA,aAAdc,CAAe,CAAAS,KAAA,UAAAC,OAAA,2DAM/BoC,GAAkB9C,EAAAA,EAAAA,GAAOiD,EAAAA,GAAS,CAAA/D,OAAA,aAAhBc,CAAiB,yBAE9BO,GAAKA,EAAE4B,MAAMe,SAAO,KAGzBV,GAA0BxC,EAAAA,EAAAA,GAAOmD,EAAAA,EAAiB,CAAAjE,OAAA,aAAxBc,CAAyB,CAAAS,KAAA,UAAAC,OAAA,kGAQnD+B,GAAiBzC,EAAAA,EAAAA,GAAO,OAAM,CAAAd,OAAA,aAAbc,CAAc,cACtBO,GAAKA,EAAE4B,MAAMiB,oBAAkB,WACnC7C,GAAKA,EAAE4B,MAAMC,SAAO,mCAEZH,EAAAA,EAAAA,GAAM,GAAE,KAGrBU,GAAmB3C,EAAAA,EAAAA,GAAO,IAAG,CAAAd,OAAA,aAAVc,CAAW,cACrBO,GAAKA,EAAE4B,MAAME,gBAAc,WAC/B9B,GAAKA,EAAE4B,MAAMC,SAAO,qBAIzBZ,GAAoBxB,EAAAA,EAAAA,GAAO,MAAK,CAAAd,OAAA,aAAZc,CAAa,sCAEbO,GAAKA,EAAE4B,MAAMkB,QAAM,aAChCpB,EAAAA,EAAAA,GAAM,GAAE,KAAIA,EAAAA,EAAAA,GAAM,GAAE,eAClB1B,GAAKA,EAAE4B,MAAME,gBAAc,KAGpCZ,GAAqBzB,EAAAA,EAAAA,GAAO,MAAK,CAAAd,OAAA,aAAZc,CAAa,6EAMhBO,GAAKA,EAAEmB,OAAK,K","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/views/performance/landing/widgets/components/selectableList.tsx"],"sourcesContent":["import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n  replace?: boolean;\n};\n\nfunction SortLink({\n  align,\n  title,\n  canSort,\n  generateSortLink,\n  onClick,\n  direction,\n  replace,\n}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  const handleOnClick: React.MouseEventHandler<HTMLAnchorElement> = e => {\n    if (replace) {\n      e.preventDefault();\n      browserHistory.replace(target);\n    }\n    onClick?.(e);\n  };\n\n  return (\n    <StyledLink align={align} to={target} onClick={handleOnClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  // @ts-expect-error It doesn't look like the `css` property is a part of the props,\n  // but prior to this style of destructure-omitting it, it was being omitted\n  // with lodash.omit. I mean keeping it omitted here just in case.\n  const {align: _align, css: _css, ...forwardProps} = props;\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import styled from '@emotion/styled';\n\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport {RadioLineItem} from 'sentry/components/forms/controls/radioGroup';\nimport Link from 'sentry/components/links/link';\nimport Radio from 'sentry/components/radio';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  items: (() => React.ReactNode)[];\n  selectedIndex: number;\n  setSelectedIndex: (index: number) => void;\n  radioColor?: string;\n};\n\nexport default function SelectableList(props: Props) {\n  return (\n    <div>\n      {props.items.map((item, index) => (\n        <SelectableItem\n          {...props}\n          isSelected={index === props.selectedIndex}\n          currentIndex={index}\n          key={index}\n        >\n          {item()}\n        </SelectableItem>\n      ))}\n    </div>\n  );\n}\n\nfunction SelectableItem({\n  isSelected,\n  currentIndex: index,\n  children,\n  setSelectedIndex,\n  radioColor,\n}: {children: React.ReactNode; currentIndex: number; isSelected: boolean} & Props) {\n  return (\n    <ListItemContainer>\n      <ItemRadioContainer color={radioColor ?? ''}>\n        <RadioLineItem index={index} role=\"radio\">\n          <Radio checked={isSelected} onChange={() => setSelectedIndex(index)} />\n        </RadioLineItem>\n      </ItemRadioContainer>\n      {children}\n    </ListItemContainer>\n  );\n}\n\nexport const RightAlignedCell = styled('div')`\n  text-align: right;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 ${space(1)};\n`;\n\nexport const Subtitle = styled('span')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeMedium};\n  display: inline-block;\n`;\n\nexport const GrowLink = styled(Link)`\n  flex-grow: 1;\n  display: inherit;\n`;\n\nexport function WidgetEmptyStateWarning() {\n  return (\n    <StyledEmptyStateWarning>\n      <PrimaryMessage>{t('No results found')}</PrimaryMessage>\n      <SecondaryMessage>\n        {t(\n          'Transactions may not be listed due to the filters above or a low sampling rate'\n        )}\n      </SecondaryMessage>\n    </StyledEmptyStateWarning>\n  );\n}\n\nexport function ListClose(props: {\n  onClick: () => void;\n  setSelectListIndex: (n: number) => void;\n}) {\n  return (\n    <StyledTooltip title={t('Exclude this transaction from the search filter.')}>\n      <StyledIconClose\n        onClick={() => {\n          props.onClick();\n          props.setSelectListIndex(0);\n        }}\n      />\n    </StyledTooltip>\n  );\n}\n\nconst StyledTooltip = styled(Tooltip)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledIconClose = styled(IconClose)`\n  cursor: pointer;\n  color: ${p => p.theme.gray200};\n`;\n\nconst StyledEmptyStateWarning = styled(EmptyStateWarning)`\n  min-height: 300px;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst PrimaryMessage = styled('span')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  color: ${p => p.theme.gray300};\n  font-weight: 600;\n  margin: 0 auto ${space(1)};\n`;\n\nconst SecondaryMessage = styled('p')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.gray300};\n  max-width: 300px;\n`;\n\nconst ListItemContainer = styled('div')`\n  display: flex;\n  border-top: 1px solid ${p => p.theme.border};\n  padding: ${space(1)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ItemRadioContainer = styled('div')`\n  grid-row: 1/3;\n  input {\n    cursor: pointer;\n  }\n  input:checked::after {\n    background-color: ${p => p.color};\n  }\n`;\n"],"names":["SortLink","_ref","align","title","canSort","generateSortLink","onClick","direction","replace","target","_jsx","StyledNonLink","children","arrow","StyledIconArrow","size","_jsxs","StyledLink","to","e","preventDefault","browserHistory","displayName","_styled","props","_align","css","_css","forwardProps","Link","p","IconArrow","name","styles","SelectableList","items","map","item","index","_createElement","SelectableItem","isSelected","selectedIndex","currentIndex","key","setSelectedIndex","radioColor","ListItemContainer","ItemRadioContainer","color","RadioLineItem","role","Radio","checked","onChange","RightAlignedCell","space","Subtitle","theme","gray300","fontSizeMedium","GrowLink","WidgetEmptyStateWarning","StyledEmptyStateWarning","PrimaryMessage","t","SecondaryMessage","ListClose","StyledTooltip","StyledIconClose","setSelectListIndex","Tooltip","IconClose","gray200","EmptyStateWarning","fontSizeExtraLarge","border"],"sourceRoot":""}