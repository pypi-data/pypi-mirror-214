{"version":3,"file":"chunks/app_components_modals_diffModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/interfaces/crashContent/stackTrace/rawContent.tsx","webpack:///./app/components/issueDiff/renderGroupingInfo.tsx","webpack:///./app/components/issueDiff/index.tsx","webpack:///./app/components/modals/diffModal.tsx","webpack:///./app/utils/getStacktraceBody.tsx","webpack:///./app/utils/useApi.tsx","webpack:///./app/utils/withApi.tsx"],"sourcesContent":["import {trimPackage} from 'sentry/components/events/interfaces/frame/utils';\nimport {ExceptionValue, Frame} from 'sentry/types';\nimport {StacktraceType} from 'sentry/types/stacktrace';\nimport {defined, trim} from 'sentry/utils';\n\nfunction getJavaScriptFrame(frame: Frame): string {\n  let result = '';\n  if (defined(frame.function)) {\n    result += '  at ' + frame.function + '(';\n  } else {\n    result += '  at ? (';\n  }\n  if (defined(frame.filename)) {\n    result += frame.filename;\n  } else if (defined(frame.module)) {\n    result += frame.module;\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ':' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ':' + frame.colNo;\n  }\n  result += ')';\n  return result;\n}\n\nfunction getRubyFrame(frame: Frame): string {\n  let result = '  from ';\n  if (defined(frame.filename)) {\n    result += frame.filename;\n  } else if (defined(frame.module)) {\n    result += '(' + frame.module + ')';\n  } else {\n    result += '?';\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ':' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ':' + frame.colNo;\n  }\n  if (defined(frame.function)) {\n    result += ':in `' + frame.function + \"'\";\n  }\n  return result;\n}\n\nexport function getPHPFrame(frame: Frame, idx: number): string {\n  const funcName = frame.function === 'null' ? '{main}' : frame.function;\n  return `#${idx} ${frame.filename || frame.module}(${frame.lineNo}): ${funcName}`;\n}\n\nexport function getPythonFrame(frame: Frame): string {\n  let result = '';\n  if (defined(frame.filename)) {\n    result += '  File \"' + frame.filename + '\"';\n  } else if (defined(frame.module)) {\n    result += '  Module \"' + frame.module + '\"';\n  } else {\n    result += '  ?';\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ', line ' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ', col ' + frame.colNo;\n  }\n  if (defined(frame.function)) {\n    result += ', in ' + frame.function;\n  }\n  if (defined(frame.context)) {\n    frame.context.forEach(item => {\n      if (item[0] === frame.lineNo) {\n        result += '\\n    ' + trim(item[1]);\n      }\n    });\n  }\n  return result;\n}\n\nexport function getJavaFrame(frame: Frame): string {\n  let result = '    at';\n  if (defined(frame.module)) {\n    result += ' ' + frame.module + '.';\n  }\n  if (defined(frame.function)) {\n    result += frame.function;\n  }\n  if (defined(frame.filename)) {\n    result += '(' + frame.filename;\n    if (defined(frame.lineNo) && frame.lineNo >= 0) {\n      result += ':' + frame.lineNo;\n    }\n    result += ')';\n  }\n  return result;\n}\n\nfunction ljust(str: string, len: number) {\n  return str + Array(Math.max(0, len - str.length) + 1).join(' ');\n}\n\nexport function getNativeFrame(frame: Frame): string {\n  let result = '  ';\n  if (defined(frame.package)) {\n    result += ljust(trimPackage(frame.package), 20);\n  }\n  if (defined(frame.instructionAddr)) {\n    result += ljust(frame.instructionAddr, 12);\n  }\n  result += ' ' + (frame.function || frame.symbolAddr);\n  if (defined(frame.filename)) {\n    result += ' (' + frame.filename;\n    if (defined(frame.lineNo) && frame.lineNo >= 0) {\n      result += ':' + frame.lineNo;\n    }\n    result += ')';\n  }\n  return result;\n}\n\nexport function getJavaPreamble(exception: ExceptionValue): string {\n  let result = `${exception.type}: ${exception.value}`;\n  if (exception.module) {\n    result = `${exception.module}.${result}`;\n  }\n  return result;\n}\n\nfunction getPreamble(exception: ExceptionValue, platform: string | undefined): string {\n  switch (platform) {\n    case 'java':\n      return getJavaPreamble(exception);\n    default:\n      return exception.type + ': ' + exception.value;\n  }\n}\n\nfunction getFrame(frame: Frame, frameIdx: number, platform: string | undefined): string {\n  if (frame.platform) {\n    platform = frame.platform;\n  }\n  switch (platform) {\n    case 'javascript':\n      return getJavaScriptFrame(frame);\n    case 'ruby':\n      return getRubyFrame(frame);\n    case 'php':\n      return getPHPFrame(frame, frameIdx);\n    case 'python':\n      return getPythonFrame(frame);\n    case 'java':\n      return getJavaFrame(frame);\n    case 'objc':\n    // fallthrough\n    case 'cocoa':\n    // fallthrough\n    case 'native':\n      return getNativeFrame(frame);\n    default:\n      return getPythonFrame(frame);\n  }\n}\n\nexport default function displayRawContent(\n  data: StacktraceType,\n  platform?: string,\n  exception?: ExceptionValue\n) {\n  const frames: string[] = [];\n\n  (data?.frames ?? []).forEach((frame, frameIdx) => {\n    frames.push(getFrame(frame, frameIdx, platform));\n  });\n\n  if (platform !== 'python') {\n    frames.reverse();\n  }\n\n  if (exception) {\n    frames.unshift(getPreamble(exception, platform));\n  }\n\n  return frames.join('\\n');\n}\n","import {t} from 'sentry/locale';\nimport {EventGroupComponent, EventGroupInfo, EventGroupVariant} from 'sentry/types';\n\nfunction renderGroupingInfo(groupingInfo: EventGroupInfo): string[] {\n  return Object.values(groupingInfo).map(renderGroupVariant).flat();\n}\n\nfunction renderGroupVariant(variant: EventGroupVariant): string[] {\n  const title = [t('Type: %s', variant.type)];\n\n  if (variant.hash) {\n    title.push(t('Hash: %s', variant.hash));\n  }\n\n  if (variant.description) {\n    title.push(t('Description: %s', variant.description));\n  }\n\n  const rv = [title.join('\\n')];\n\n  if ('component' in variant && variant.component) {\n    rv.push(renderComponent(variant.component).join('\\n'));\n  }\n\n  return rv;\n}\n\nfunction renderComponent(component: EventGroupComponent): string[] {\n  if (!component.contributes) {\n    return [];\n  }\n\n  const {name, id, hint} = component;\n  const name_or_id = name || id;\n  const title = name_or_id && hint ? `${name_or_id} (${hint})` : name_or_id;\n  const rv = title ? [title] : [];\n\n  if (component.values) {\n    for (const value of component.values) {\n      if (typeof value === 'string') {\n        rv.push(`  ${value}`);\n        continue;\n      }\n\n      for (const line of renderComponent(value)) {\n        rv.push(`  ${line}`);\n      }\n    }\n  }\n\n  return rv;\n}\n\nexport default renderGroupingInfo;\n","import {Component} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {SegmentedControl} from 'sentry/components/segmentedControl';\nimport SplitDiff from 'sentry/components/splitDiff';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport getStacktraceBody from 'sentry/utils/getStacktraceBody';\nimport withApi from 'sentry/utils/withApi';\n\nimport renderGroupingInfo from './renderGroupingInfo';\n\nconst defaultProps = {\n  baseEventId: 'latest',\n  targetEventId: 'latest',\n};\n\ntype DefaultProps = typeof defaultProps;\n\ntype Props = {\n  api: Client;\n  baseIssueId: string;\n  orgId: string;\n  project: Project;\n  targetIssueId: string;\n  baseEventId?: string;\n  className?: string;\n  targetEventId?: string;\n};\n\ntype State = {\n  baseEvent: Array<string>;\n  groupingDiff: boolean;\n  loading: boolean;\n  targetEvent: Array<string>;\n  SplitDiffAsync?: typeof SplitDiff;\n};\n\nclass IssueDiff extends Component<Props, State> {\n  static defaultProps: DefaultProps = defaultProps;\n\n  state: State = {\n    loading: true,\n    groupingDiff: false,\n    baseEvent: [],\n    targetEvent: [],\n\n    // `SplitDiffAsync` is an async-loaded component\n    // This will eventually contain a reference to the exported component from `./splitDiff`\n    SplitDiffAsync: undefined,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const {baseIssueId, targetIssueId, baseEventId, targetEventId} = this.props;\n\n    // Fetch component and event data\n    Promise.all([\n      import('../splitDiff'),\n      this.fetchEventData(baseIssueId, baseEventId ?? 'latest'),\n      this.fetchEventData(targetIssueId, targetEventId ?? 'latest'),\n    ])\n      .then(([{default: SplitDiffAsync}, baseEvent, targetEvent]) => {\n        this.setState({\n          SplitDiffAsync,\n          baseEvent,\n          targetEvent,\n          loading: false,\n        });\n      })\n      .catch(() => {\n        addErrorMessage(t('Error loading events'));\n      });\n  }\n\n  toggleDiffMode = (groupingDiff: boolean) => {\n    this.setState({groupingDiff, loading: true}, this.fetchData);\n  };\n\n  fetchEventData = async (issueId: string, eventId: string) => {\n    const {orgId, project, api} = this.props;\n    const {groupingDiff} = this.state;\n\n    let paramEventId = eventId;\n\n    if (eventId === 'latest') {\n      const event = await api.requestPromise(`/issues/${issueId}/events/latest/`);\n      paramEventId = event.eventID;\n    }\n\n    if (groupingDiff) {\n      const groupingInfo = await api.requestPromise(\n        `/projects/${orgId}/${project.slug}/events/${paramEventId}/grouping-info/`\n      );\n      return renderGroupingInfo(groupingInfo);\n    }\n\n    const event = await api.requestPromise(\n      `/projects/${orgId}/${project.slug}/events/${paramEventId}/`\n    );\n    return getStacktraceBody(event);\n  };\n\n  render() {\n    const {className, project} = this.props;\n    const {\n      SplitDiffAsync: DiffComponent,\n      loading,\n      groupingDiff,\n      baseEvent,\n      targetEvent,\n    } = this.state;\n\n    const showDiffToggle = project.features.includes('similarity-view-v2');\n\n    return (\n      <StyledIssueDiff className={className} loading={loading}>\n        {loading && <LoadingIndicator />}\n        {!loading && showDiffToggle && (\n          <HeaderWrapper>\n            <SegmentedControl\n              aria-label={t('Grouping')}\n              size=\"sm\"\n              value={groupingDiff ? 'grouping' : 'event'}\n              onChange={key => this.toggleDiffMode(key === 'grouping')}\n            >\n              <SegmentedControl.Item key=\"event\">\n                {t('Diff stack trace and message')}\n              </SegmentedControl.Item>\n              <SegmentedControl.Item key=\"grouping\">\n                {t('Diff grouping information')}\n              </SegmentedControl.Item>\n            </SegmentedControl>\n          </HeaderWrapper>\n        )}\n        {!loading &&\n          DiffComponent &&\n          baseEvent.map((value, i) => (\n            <DiffComponent\n              key={i}\n              base={value}\n              target={targetEvent[i] ?? ''}\n              type=\"words\"\n            />\n          ))}\n      </StyledIssueDiff>\n    );\n  }\n}\n\nexport default withApi(IssueDiff);\n\n// required for tests which do not provide API as context\nexport {IssueDiff};\n\nconst StyledIssueDiff = styled('div', {\n  shouldForwardProp: p => typeof p === 'string' && isPropValid(p) && p !== 'loading',\n})<Pick<State, 'loading'>>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  overflow: auto;\n  padding: ${space(1)};\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  ${p =>\n    p.loading &&\n    `\n        background-color: ${p.theme.background};\n        justify-content: center;\n        align-items: center;\n      `};\n`;\n\nconst HeaderWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n","import {css} from '@emotion/react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport IssueDiff from 'sentry/components/issueDiff';\n\ntype Props = ModalRenderProps & React.ComponentProps<typeof IssueDiff>;\n\nfunction DiffModal({className, Body, CloseButton, ...props}: Props) {\n  return (\n    <Body>\n      <CloseButton />\n      <IssueDiff className={className} {...props} />\n    </Body>\n  );\n}\n\nconst modalCss = css`\n  position: absolute;\n  left: 20px;\n  right: 20px;\n  top: 20px;\n  bottom: 20px;\n  display: flex;\n  padding: 0;\n  width: auto;\n\n  [role='document'] {\n    height: 100%;\n    display: flex;\n    flex: 1;\n  }\n\n  section {\n    display: flex;\n    width: 100%;\n  }\n`;\n\nexport {modalCss};\n\nexport default DiffModal;\n","import rawStacktraceContent from 'sentry/components/events/interfaces/crashContent/stackTrace/rawContent';\nimport {Event} from 'sentry/types/event';\n\nexport default function getStacktraceBody(event: Event) {\n  if (!event || !event.entries) {\n    return [];\n  }\n\n  // TODO(billyvg): This only accounts for the first exception, will need navigation to be able to\n  // diff multiple exceptions\n  //\n  // See: https://github.com/getsentry/sentry/issues/6055\n  const exc = event.entries.find(({type}) => type === 'exception');\n\n  if (!exc) {\n    // Look for a message if not an exception\n    const msg = event.entries.find(({type}) => type === 'message');\n    if (!msg) {\n      return [];\n    }\n    return msg?.data?.formatted && [msg.data.formatted];\n  }\n\n  if (!exc.data) {\n    return [];\n  }\n\n  // TODO(ts): This should be verified when EntryData has the correct type\n  return exc.data.values\n    .filter(value => !!value.stacktrace)\n    .map(value => rawStacktraceContent(value.stacktrace, event.platform, value))\n    .reduce((acc, value) => acc.concat(value), []);\n}\n","import {useCallback, useEffect, useRef} from 'react';\n\nimport {Client} from 'sentry/api';\n\ntype Options = {\n  /**\n   * An existing API client may be provided.\n   *\n   * This is a continent way to re-use clients and still inherit the\n   * persistInFlight configuration.\n   */\n  api?: Client;\n  /**\n   * Enabling this option will disable clearing in-flight requests when the\n   * component is unmounted.\n   *\n   * This may be useful in situations where your component needs to finish up\n   * somewhere the client was passed into some type of action creator and the\n   * component is unmounted.\n   */\n  persistInFlight?: boolean;\n};\n\n/**\n * Returns an API client that will have it's requests canceled when the owning\n * React component is unmounted (may be disabled via options).\n */\nfunction useApi({persistInFlight, api: providedApi}: Options = {}) {\n  const localApi = useRef<Client>();\n\n  // Lazily construct the client if we weren't provided with one\n  if (localApi.current === undefined && providedApi === undefined) {\n    localApi.current = new Client();\n  }\n\n  // Use the provided client if available\n  const api = providedApi ?? localApi.current!;\n\n  // Clear API calls on unmount (if persistInFlight is disabled\n  const clearOnUnmount = useCallback(() => {\n    if (!persistInFlight) {\n      api.clear();\n    }\n  }, [api, persistInFlight]);\n\n  useEffect(() => clearOnUnmount, [clearOnUnmount]);\n\n  return api;\n}\n\nexport default useApi;\n","import {Client} from 'sentry/api';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport useApi from 'sentry/utils/useApi';\n\ntype InjectedApiProps = {\n  api: Client;\n};\n\ntype WrappedProps<P> = Omit<P, keyof InjectedApiProps> & Partial<InjectedApiProps>;\n\n/**\n * XXX: Prefer useApi if you are wrapping a Function Component!\n *\n * React Higher-Order Component (HoC) that provides \"api\" client when mounted,\n * and clears API requests when component is unmounted.\n *\n * If an `api` prop is provided when the component is invoked it will be passed\n * through.\n */\nconst withApi = <P extends InjectedApiProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Parameters<typeof useApi>[0] = {}\n) => {\n  function WithApi({api: propsApi, ...props}: WrappedProps<P>) {\n    const api = useApi({api: propsApi, ...options});\n\n    return <WrappedComponent {...(props as P)} api={api} />;\n  }\n\n  WithApi.displayName = `withApi(${getDisplayName(WrappedComponent)})`;\n\n  return WithApi;\n};\n\nexport default withApi;\n"],"names":["ljust","str","len","Array","Math","max","length","join","getFrame","frame","frameIdx","platform","result","defined","function","filename","module","lineNo","colNo","getJavaScriptFrame","getRubyFrame","idx","funcName","getPHPFrame","context","forEach","item","trim","getPythonFrame","getJavaFrame","package","trimPackage","instructionAddr","symbolAddr","getNativeFrame","displayRawContent","data","exception","frames","push","reverse","unshift","type","value","getJavaPreamble","getPreamble","renderGroupVariant","variant","title","t","hash","description","rv","component","renderComponent","contributes","name","id","hint","name_or_id","values","line","IssueDiff","Component","constructor","arguments","_defineProperty","loading","groupingDiff","baseEvent","targetEvent","SplitDiffAsync","undefined","this","setState","fetchData","async","issueId","eventId","orgId","project","api","props","state","paramEventId","requestPromise","eventID","groupingInfo","Object","map","flat","renderGroupingInfo","slug","event","getStacktraceBody","componentDidMount","baseIssueId","targetIssueId","baseEventId","targetEventId","Promise","all","fetchEventData","then","_ref","default","catch","addErrorMessage","render","className","DiffComponent","showDiffToggle","features","includes","_jsxs","StyledIssueDiff","children","_jsx","LoadingIndicator","HeaderWrapper","SegmentedControl","size","onChange","key","toggleDiffMode","i","base","target","displayName","withApi","_styled","shouldForwardProp","p","isPropValid","theme","backgroundSecondary","space","background","DiffModal","Body","CloseButton","modalCss","styles","entries","exc","find","msg","_ref2","formatted","filter","stacktrace","rawStacktraceContent","reduce","acc","concat","persistInFlight","providedApi","localApi","useRef","current","Client","clearOnUnmount","useCallback","clear","useEffect","WrappedComponent","options","WithApi","propsApi","useApi","getDisplayName"],"sourceRoot":""}