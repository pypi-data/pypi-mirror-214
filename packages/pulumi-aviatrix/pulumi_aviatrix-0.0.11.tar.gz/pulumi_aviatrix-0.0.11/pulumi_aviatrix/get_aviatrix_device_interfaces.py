# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetAviatrixDeviceInterfacesResult',
    'AwaitableGetAviatrixDeviceInterfacesResult',
    'get_aviatrix_device_interfaces',
    'get_aviatrix_device_interfaces_output',
]

@pulumi.output_type
class GetAviatrixDeviceInterfacesResult:
    """
    A collection of values returned by getAviatrixDeviceInterfaces.
    """
    def __init__(__self__, device_name=None, id=None, wan_interfaces=None):
        if device_name and not isinstance(device_name, str):
            raise TypeError("Expected argument 'device_name' to be a str")
        pulumi.set(__self__, "device_name", device_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if wan_interfaces and not isinstance(wan_interfaces, list):
            raise TypeError("Expected argument 'wan_interfaces' to be a list")
        pulumi.set(__self__, "wan_interfaces", wan_interfaces)

    @property
    @pulumi.getter(name="deviceName")
    def device_name(self) -> str:
        return pulumi.get(self, "device_name")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="wanInterfaces")
    def wan_interfaces(self) -> Sequence['outputs.GetAviatrixDeviceInterfacesWanInterfaceResult']:
        """
        List of WAN interfaces.
        """
        return pulumi.get(self, "wan_interfaces")


class AwaitableGetAviatrixDeviceInterfacesResult(GetAviatrixDeviceInterfacesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAviatrixDeviceInterfacesResult(
            device_name=self.device_name,
            id=self.id,
            wan_interfaces=self.wan_interfaces)


def get_aviatrix_device_interfaces(device_name: Optional[str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAviatrixDeviceInterfacesResult:
    """
    Use this data source to get the list of device WAN interfaces for use in other resources.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_aviatrix as aviatrix

    test = aviatrix.get_aviatrix_device_interfaces(device_name="test-device")
    ```


    :param str device_name: Device name.
    """
    __args__ = dict()
    __args__['deviceName'] = device_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aviatrix:index/getAviatrixDeviceInterfaces:getAviatrixDeviceInterfaces', __args__, opts=opts, typ=GetAviatrixDeviceInterfacesResult).value

    return AwaitableGetAviatrixDeviceInterfacesResult(
        device_name=__ret__.device_name,
        id=__ret__.id,
        wan_interfaces=__ret__.wan_interfaces)


@_utilities.lift_output_func(get_aviatrix_device_interfaces)
def get_aviatrix_device_interfaces_output(device_name: Optional[pulumi.Input[str]] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAviatrixDeviceInterfacesResult]:
    """
    Use this data source to get the list of device WAN interfaces for use in other resources.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_aviatrix as aviatrix

    test = aviatrix.get_aviatrix_device_interfaces(device_name="test-device")
    ```


    :param str device_name: Device name.
    """
    ...
