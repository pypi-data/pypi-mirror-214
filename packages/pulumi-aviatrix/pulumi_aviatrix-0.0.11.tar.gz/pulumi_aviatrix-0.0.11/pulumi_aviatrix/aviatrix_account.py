# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['AviatrixAccountArgs', 'AviatrixAccount']

@pulumi.input_type
class AviatrixAccountArgs:
    def __init__(__self__, *,
                 account_name: pulumi.Input[str],
                 cloud_type: pulumi.Input[int],
                 alicloud_access_key: Optional[pulumi.Input[str]] = None,
                 alicloud_account_id: Optional[pulumi.Input[str]] = None,
                 alicloud_secret_key: Optional[pulumi.Input[str]] = None,
                 arm_application_id: Optional[pulumi.Input[str]] = None,
                 arm_application_key: Optional[pulumi.Input[str]] = None,
                 arm_directory_id: Optional[pulumi.Input[str]] = None,
                 arm_subscription_id: Optional[pulumi.Input[str]] = None,
                 audit_account: Optional[pulumi.Input[bool]] = None,
                 aws_access_key: Optional[pulumi.Input[str]] = None,
                 aws_account_number: Optional[pulumi.Input[str]] = None,
                 aws_gateway_role_app: Optional[pulumi.Input[str]] = None,
                 aws_gateway_role_ec2: Optional[pulumi.Input[str]] = None,
                 aws_iam: Optional[pulumi.Input[bool]] = None,
                 aws_role_app: Optional[pulumi.Input[str]] = None,
                 aws_role_ec2: Optional[pulumi.Input[str]] = None,
                 aws_secret_key: Optional[pulumi.Input[str]] = None,
                 awschina_access_key: Optional[pulumi.Input[str]] = None,
                 awschina_account_number: Optional[pulumi.Input[str]] = None,
                 awschina_iam: Optional[pulumi.Input[bool]] = None,
                 awschina_role_app: Optional[pulumi.Input[str]] = None,
                 awschina_role_ec2: Optional[pulumi.Input[str]] = None,
                 awschina_secret_key: Optional[pulumi.Input[str]] = None,
                 awsgov_access_key: Optional[pulumi.Input[str]] = None,
                 awsgov_account_number: Optional[pulumi.Input[str]] = None,
                 awsgov_iam: Optional[pulumi.Input[bool]] = None,
                 awsgov_role_app: Optional[pulumi.Input[str]] = None,
                 awsgov_role_ec2: Optional[pulumi.Input[str]] = None,
                 awsgov_secret_key: Optional[pulumi.Input[str]] = None,
                 awss_account_number: Optional[pulumi.Input[str]] = None,
                 awss_ca_chain_cert: Optional[pulumi.Input[str]] = None,
                 awss_cap_account_name: Optional[pulumi.Input[str]] = None,
                 awss_cap_agency: Optional[pulumi.Input[str]] = None,
                 awss_cap_cert: Optional[pulumi.Input[str]] = None,
                 awss_cap_cert_key: Optional[pulumi.Input[str]] = None,
                 awss_cap_role_name: Optional[pulumi.Input[str]] = None,
                 awss_cap_url: Optional[pulumi.Input[str]] = None,
                 awsts_account_number: Optional[pulumi.Input[str]] = None,
                 awsts_ca_chain_cert: Optional[pulumi.Input[str]] = None,
                 awsts_cap_agency: Optional[pulumi.Input[str]] = None,
                 awsts_cap_cert: Optional[pulumi.Input[str]] = None,
                 awsts_cap_cert_key: Optional[pulumi.Input[str]] = None,
                 awsts_cap_mission: Optional[pulumi.Input[str]] = None,
                 awsts_cap_role_name: Optional[pulumi.Input[str]] = None,
                 awsts_cap_url: Optional[pulumi.Input[str]] = None,
                 azurechina_application_id: Optional[pulumi.Input[str]] = None,
                 azurechina_application_key: Optional[pulumi.Input[str]] = None,
                 azurechina_directory_id: Optional[pulumi.Input[str]] = None,
                 azurechina_subscription_id: Optional[pulumi.Input[str]] = None,
                 azuregov_application_id: Optional[pulumi.Input[str]] = None,
                 azuregov_application_key: Optional[pulumi.Input[str]] = None,
                 azuregov_directory_id: Optional[pulumi.Input[str]] = None,
                 azuregov_subscription_id: Optional[pulumi.Input[str]] = None,
                 gcloud_project_credentials_filepath: Optional[pulumi.Input[str]] = None,
                 gcloud_project_id: Optional[pulumi.Input[str]] = None,
                 oci_api_private_key_filepath: Optional[pulumi.Input[str]] = None,
                 oci_compartment_id: Optional[pulumi.Input[str]] = None,
                 oci_tenancy_id: Optional[pulumi.Input[str]] = None,
                 oci_user_id: Optional[pulumi.Input[str]] = None,
                 rbac_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a AviatrixAccount resource.
        :param pulumi.Input[str] account_name: Account name. This can be used for logging in to CloudN console or UserConnect controller.
        :param pulumi.Input[int] cloud_type: Type of cloud service provider. Only AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina and Alibaba Cloud are supported currently. Enter 1 for AWS, 4 for GCP, 8 for Azure, 16 for OCI, 32 for AzureGov, 256 for AWSGov, 1024 for AWSChina or 2048 for AzureChina, 8192 for Alibaba Cloud.
        :param pulumi.Input[str] alicloud_access_key: Alibaba Cloud Access Key. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] alicloud_account_id: Alibaba Cloud Account number to associate with Aviatrix account. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] alicloud_secret_key: Alibaba Cloud Secret Key. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] arm_application_id: Azure ARM Application ID. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_application_key: Azure ARM Application key. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_directory_id: Azure ARM Directory ID. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_subscription_id: Azure ARM Subscription ID. Required when creating an account for Azure.
        :param pulumi.Input[bool] audit_account: Enable account audit.
        :param pulumi.Input[str] aws_access_key: AWS Access Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        :param pulumi.Input[str] aws_account_number: AWS Account number to associate with Aviatrix account. Required when creating an account for AWS.
        :param pulumi.Input[str] aws_gateway_role_app: A separate AWS App role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_ec2` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        :param pulumi.Input[str] aws_gateway_role_ec2: A separate AWS EC2 role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_app` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        :param pulumi.Input[bool] aws_iam: AWS IAM-role based flag, this option is for UserConnect.
        :param pulumi.Input[str] aws_role_app: AWS App role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        :param pulumi.Input[str] aws_role_ec2: AWS EC2 role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        :param pulumi.Input[str] aws_secret_key: AWS Secret Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        :param pulumi.Input[str] awschina_access_key: AWSChina Access Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_account_number: AWSChina Account number to associate with Aviatrix account. Required when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[bool] awschina_iam: AWSChina IAM-role based flag. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_role_app: AWSChina App role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_role_ec2: AWSChina EC2 role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_secret_key: AWSChina Secret Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_access_key: AWS Access Key. Required when creating an account for AWSGov.
        :param pulumi.Input[str] awsgov_account_number: AWSGov Account number to associate with Aviatrix account. Required when creating an account for AWSGov.
        :param pulumi.Input[bool] awsgov_iam: AWSGov IAM-role based flag. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_role_app: AWSGov App role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_role_ec2: AWSGov EC2 role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_secret_key: AWS Secret Key. Required when creating an account for AWSGov.
        :param pulumi.Input[str] awss_account_number: AWS Secret Region Account Number. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_ca_chain_cert: AWS Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_account_name: AWS Secret Region Account Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_agency: AWS Secret Region CAP Agency. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert: AWS Secret Region CAP Certificate local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert_key: AWS Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_role_name: AWS Secret Region Role Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_url: AWS Secret Region CAP Url. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_account_number: AWS Top Secret Region Account Number. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_ca_chain_cert: AWS Top Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_agency: AWS Top Secret Region CAP Agency. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert: AWS Top Secret Region CAP Certificate local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert_key: AWS Top Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_mission: AWS Top Secret Region Mission. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_role_name: AWS Top Secret Region Role Name. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_url: AWS Top Secret Region CAP Url. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] azurechina_application_id: AzureChina ARM Application ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_application_key: AzureChina ARM Application key. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_directory_id: AzureChina ARM Directory ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_subscription_id: AzureChina ARM Subscription ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azuregov_application_id: AzureGov ARM Application ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_application_key: AzureGov ARM Application key. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_directory_id: AzureGov ARM Directory ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_subscription_id: AzureGov ARM Subscription ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] gcloud_project_credentials_filepath: GCloud Project Credentials [local filepath].json. Required when creating an account for GCP.
        :param pulumi.Input[str] gcloud_project_id: GCloud Project ID.
        :param pulumi.Input[str] oci_api_private_key_filepath: Oracle OCI API Private Key local file path. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_compartment_id: Oracle OCI Compartment ID. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_tenancy_id: Oracle OCI Tenancy ID. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_user_id: Oracle OCI User ID. Required when creating an account for OCI.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] rbac_groups: A list of existing RBAC group names. This attribute should only be used when creating an account. Updating this attribute will have no effect. Available as of provider version R2.23.0+.
        """
        pulumi.set(__self__, "account_name", account_name)
        pulumi.set(__self__, "cloud_type", cloud_type)
        if alicloud_access_key is not None:
            pulumi.set(__self__, "alicloud_access_key", alicloud_access_key)
        if alicloud_account_id is not None:
            pulumi.set(__self__, "alicloud_account_id", alicloud_account_id)
        if alicloud_secret_key is not None:
            pulumi.set(__self__, "alicloud_secret_key", alicloud_secret_key)
        if arm_application_id is not None:
            pulumi.set(__self__, "arm_application_id", arm_application_id)
        if arm_application_key is not None:
            pulumi.set(__self__, "arm_application_key", arm_application_key)
        if arm_directory_id is not None:
            pulumi.set(__self__, "arm_directory_id", arm_directory_id)
        if arm_subscription_id is not None:
            pulumi.set(__self__, "arm_subscription_id", arm_subscription_id)
        if audit_account is not None:
            pulumi.set(__self__, "audit_account", audit_account)
        if aws_access_key is not None:
            pulumi.set(__self__, "aws_access_key", aws_access_key)
        if aws_account_number is not None:
            pulumi.set(__self__, "aws_account_number", aws_account_number)
        if aws_gateway_role_app is not None:
            pulumi.set(__self__, "aws_gateway_role_app", aws_gateway_role_app)
        if aws_gateway_role_ec2 is not None:
            pulumi.set(__self__, "aws_gateway_role_ec2", aws_gateway_role_ec2)
        if aws_iam is not None:
            pulumi.set(__self__, "aws_iam", aws_iam)
        if aws_role_app is not None:
            pulumi.set(__self__, "aws_role_app", aws_role_app)
        if aws_role_ec2 is not None:
            pulumi.set(__self__, "aws_role_ec2", aws_role_ec2)
        if aws_secret_key is not None:
            pulumi.set(__self__, "aws_secret_key", aws_secret_key)
        if awschina_access_key is not None:
            pulumi.set(__self__, "awschina_access_key", awschina_access_key)
        if awschina_account_number is not None:
            pulumi.set(__self__, "awschina_account_number", awschina_account_number)
        if awschina_iam is not None:
            pulumi.set(__self__, "awschina_iam", awschina_iam)
        if awschina_role_app is not None:
            pulumi.set(__self__, "awschina_role_app", awschina_role_app)
        if awschina_role_ec2 is not None:
            pulumi.set(__self__, "awschina_role_ec2", awschina_role_ec2)
        if awschina_secret_key is not None:
            pulumi.set(__self__, "awschina_secret_key", awschina_secret_key)
        if awsgov_access_key is not None:
            pulumi.set(__self__, "awsgov_access_key", awsgov_access_key)
        if awsgov_account_number is not None:
            pulumi.set(__self__, "awsgov_account_number", awsgov_account_number)
        if awsgov_iam is not None:
            pulumi.set(__self__, "awsgov_iam", awsgov_iam)
        if awsgov_role_app is not None:
            pulumi.set(__self__, "awsgov_role_app", awsgov_role_app)
        if awsgov_role_ec2 is not None:
            pulumi.set(__self__, "awsgov_role_ec2", awsgov_role_ec2)
        if awsgov_secret_key is not None:
            pulumi.set(__self__, "awsgov_secret_key", awsgov_secret_key)
        if awss_account_number is not None:
            pulumi.set(__self__, "awss_account_number", awss_account_number)
        if awss_ca_chain_cert is not None:
            pulumi.set(__self__, "awss_ca_chain_cert", awss_ca_chain_cert)
        if awss_cap_account_name is not None:
            pulumi.set(__self__, "awss_cap_account_name", awss_cap_account_name)
        if awss_cap_agency is not None:
            pulumi.set(__self__, "awss_cap_agency", awss_cap_agency)
        if awss_cap_cert is not None:
            pulumi.set(__self__, "awss_cap_cert", awss_cap_cert)
        if awss_cap_cert_key is not None:
            pulumi.set(__self__, "awss_cap_cert_key", awss_cap_cert_key)
        if awss_cap_role_name is not None:
            pulumi.set(__self__, "awss_cap_role_name", awss_cap_role_name)
        if awss_cap_url is not None:
            pulumi.set(__self__, "awss_cap_url", awss_cap_url)
        if awsts_account_number is not None:
            pulumi.set(__self__, "awsts_account_number", awsts_account_number)
        if awsts_ca_chain_cert is not None:
            pulumi.set(__self__, "awsts_ca_chain_cert", awsts_ca_chain_cert)
        if awsts_cap_agency is not None:
            pulumi.set(__self__, "awsts_cap_agency", awsts_cap_agency)
        if awsts_cap_cert is not None:
            pulumi.set(__self__, "awsts_cap_cert", awsts_cap_cert)
        if awsts_cap_cert_key is not None:
            pulumi.set(__self__, "awsts_cap_cert_key", awsts_cap_cert_key)
        if awsts_cap_mission is not None:
            pulumi.set(__self__, "awsts_cap_mission", awsts_cap_mission)
        if awsts_cap_role_name is not None:
            pulumi.set(__self__, "awsts_cap_role_name", awsts_cap_role_name)
        if awsts_cap_url is not None:
            pulumi.set(__self__, "awsts_cap_url", awsts_cap_url)
        if azurechina_application_id is not None:
            pulumi.set(__self__, "azurechina_application_id", azurechina_application_id)
        if azurechina_application_key is not None:
            pulumi.set(__self__, "azurechina_application_key", azurechina_application_key)
        if azurechina_directory_id is not None:
            pulumi.set(__self__, "azurechina_directory_id", azurechina_directory_id)
        if azurechina_subscription_id is not None:
            pulumi.set(__self__, "azurechina_subscription_id", azurechina_subscription_id)
        if azuregov_application_id is not None:
            pulumi.set(__self__, "azuregov_application_id", azuregov_application_id)
        if azuregov_application_key is not None:
            pulumi.set(__self__, "azuregov_application_key", azuregov_application_key)
        if azuregov_directory_id is not None:
            pulumi.set(__self__, "azuregov_directory_id", azuregov_directory_id)
        if azuregov_subscription_id is not None:
            pulumi.set(__self__, "azuregov_subscription_id", azuregov_subscription_id)
        if gcloud_project_credentials_filepath is not None:
            pulumi.set(__self__, "gcloud_project_credentials_filepath", gcloud_project_credentials_filepath)
        if gcloud_project_id is not None:
            pulumi.set(__self__, "gcloud_project_id", gcloud_project_id)
        if oci_api_private_key_filepath is not None:
            pulumi.set(__self__, "oci_api_private_key_filepath", oci_api_private_key_filepath)
        if oci_compartment_id is not None:
            pulumi.set(__self__, "oci_compartment_id", oci_compartment_id)
        if oci_tenancy_id is not None:
            pulumi.set(__self__, "oci_tenancy_id", oci_tenancy_id)
        if oci_user_id is not None:
            pulumi.set(__self__, "oci_user_id", oci_user_id)
        if rbac_groups is not None:
            pulumi.set(__self__, "rbac_groups", rbac_groups)

    @property
    @pulumi.getter(name="accountName")
    def account_name(self) -> pulumi.Input[str]:
        """
        Account name. This can be used for logging in to CloudN console or UserConnect controller.
        """
        return pulumi.get(self, "account_name")

    @account_name.setter
    def account_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "account_name", value)

    @property
    @pulumi.getter(name="cloudType")
    def cloud_type(self) -> pulumi.Input[int]:
        """
        Type of cloud service provider. Only AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina and Alibaba Cloud are supported currently. Enter 1 for AWS, 4 for GCP, 8 for Azure, 16 for OCI, 32 for AzureGov, 256 for AWSGov, 1024 for AWSChina or 2048 for AzureChina, 8192 for Alibaba Cloud.
        """
        return pulumi.get(self, "cloud_type")

    @cloud_type.setter
    def cloud_type(self, value: pulumi.Input[int]):
        pulumi.set(self, "cloud_type", value)

    @property
    @pulumi.getter(name="alicloudAccessKey")
    def alicloud_access_key(self) -> Optional[pulumi.Input[str]]:
        """
        Alibaba Cloud Access Key. Required when creating an account for Alibaba Cloud.
        """
        return pulumi.get(self, "alicloud_access_key")

    @alicloud_access_key.setter
    def alicloud_access_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_access_key", value)

    @property
    @pulumi.getter(name="alicloudAccountId")
    def alicloud_account_id(self) -> Optional[pulumi.Input[str]]:
        """
        Alibaba Cloud Account number to associate with Aviatrix account. Required when creating an account for Alibaba Cloud.
        """
        return pulumi.get(self, "alicloud_account_id")

    @alicloud_account_id.setter
    def alicloud_account_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_account_id", value)

    @property
    @pulumi.getter(name="alicloudSecretKey")
    def alicloud_secret_key(self) -> Optional[pulumi.Input[str]]:
        """
        Alibaba Cloud Secret Key. Required when creating an account for Alibaba Cloud.
        """
        return pulumi.get(self, "alicloud_secret_key")

    @alicloud_secret_key.setter
    def alicloud_secret_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_secret_key", value)

    @property
    @pulumi.getter(name="armApplicationId")
    def arm_application_id(self) -> Optional[pulumi.Input[str]]:
        """
        Azure ARM Application ID. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_application_id")

    @arm_application_id.setter
    def arm_application_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arm_application_id", value)

    @property
    @pulumi.getter(name="armApplicationKey")
    def arm_application_key(self) -> Optional[pulumi.Input[str]]:
        """
        Azure ARM Application key. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_application_key")

    @arm_application_key.setter
    def arm_application_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arm_application_key", value)

    @property
    @pulumi.getter(name="armDirectoryId")
    def arm_directory_id(self) -> Optional[pulumi.Input[str]]:
        """
        Azure ARM Directory ID. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_directory_id")

    @arm_directory_id.setter
    def arm_directory_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arm_directory_id", value)

    @property
    @pulumi.getter(name="armSubscriptionId")
    def arm_subscription_id(self) -> Optional[pulumi.Input[str]]:
        """
        Azure ARM Subscription ID. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_subscription_id")

    @arm_subscription_id.setter
    def arm_subscription_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arm_subscription_id", value)

    @property
    @pulumi.getter(name="auditAccount")
    def audit_account(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable account audit.
        """
        return pulumi.get(self, "audit_account")

    @audit_account.setter
    def audit_account(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "audit_account", value)

    @property
    @pulumi.getter(name="awsAccessKey")
    def aws_access_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Access Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_access_key")

    @aws_access_key.setter
    def aws_access_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_access_key", value)

    @property
    @pulumi.getter(name="awsAccountNumber")
    def aws_account_number(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Account number to associate with Aviatrix account. Required when creating an account for AWS.
        """
        return pulumi.get(self, "aws_account_number")

    @aws_account_number.setter
    def aws_account_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_account_number", value)

    @property
    @pulumi.getter(name="awsGatewayRoleApp")
    def aws_gateway_role_app(self) -> Optional[pulumi.Input[str]]:
        """
        A separate AWS App role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_ec2` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "aws_gateway_role_app")

    @aws_gateway_role_app.setter
    def aws_gateway_role_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_gateway_role_app", value)

    @property
    @pulumi.getter(name="awsGatewayRoleEc2")
    def aws_gateway_role_ec2(self) -> Optional[pulumi.Input[str]]:
        """
        A separate AWS EC2 role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_app` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "aws_gateway_role_ec2")

    @aws_gateway_role_ec2.setter
    def aws_gateway_role_ec2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_gateway_role_ec2", value)

    @property
    @pulumi.getter(name="awsIam")
    def aws_iam(self) -> Optional[pulumi.Input[bool]]:
        """
        AWS IAM-role based flag, this option is for UserConnect.
        """
        return pulumi.get(self, "aws_iam")

    @aws_iam.setter
    def aws_iam(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "aws_iam", value)

    @property
    @pulumi.getter(name="awsRoleApp")
    def aws_role_app(self) -> Optional[pulumi.Input[str]]:
        """
        AWS App role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_role_app")

    @aws_role_app.setter
    def aws_role_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_role_app", value)

    @property
    @pulumi.getter(name="awsRoleEc2")
    def aws_role_ec2(self) -> Optional[pulumi.Input[str]]:
        """
        AWS EC2 role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_role_ec2")

    @aws_role_ec2.setter
    def aws_role_ec2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_role_ec2", value)

    @property
    @pulumi.getter(name="awsSecretKey")
    def aws_secret_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_secret_key")

    @aws_secret_key.setter
    def aws_secret_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_secret_key", value)

    @property
    @pulumi.getter(name="awschinaAccessKey")
    def awschina_access_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWSChina Access Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_access_key")

    @awschina_access_key.setter
    def awschina_access_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awschina_access_key", value)

    @property
    @pulumi.getter(name="awschinaAccountNumber")
    def awschina_account_number(self) -> Optional[pulumi.Input[str]]:
        """
        AWSChina Account number to associate with Aviatrix account. Required when creating an account for AWSChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_account_number")

    @awschina_account_number.setter
    def awschina_account_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awschina_account_number", value)

    @property
    @pulumi.getter(name="awschinaIam")
    def awschina_iam(self) -> Optional[pulumi.Input[bool]]:
        """
        AWSChina IAM-role based flag. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_iam")

    @awschina_iam.setter
    def awschina_iam(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "awschina_iam", value)

    @property
    @pulumi.getter(name="awschinaRoleApp")
    def awschina_role_app(self) -> Optional[pulumi.Input[str]]:
        """
        AWSChina App role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_role_app")

    @awschina_role_app.setter
    def awschina_role_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awschina_role_app", value)

    @property
    @pulumi.getter(name="awschinaRoleEc2")
    def awschina_role_ec2(self) -> Optional[pulumi.Input[str]]:
        """
        AWSChina EC2 role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_role_ec2")

    @awschina_role_ec2.setter
    def awschina_role_ec2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awschina_role_ec2", value)

    @property
    @pulumi.getter(name="awschinaSecretKey")
    def awschina_secret_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWSChina Secret Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_secret_key")

    @awschina_secret_key.setter
    def awschina_secret_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awschina_secret_key", value)

    @property
    @pulumi.getter(name="awsgovAccessKey")
    def awsgov_access_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Access Key. Required when creating an account for AWSGov.
        """
        return pulumi.get(self, "awsgov_access_key")

    @awsgov_access_key.setter
    def awsgov_access_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsgov_access_key", value)

    @property
    @pulumi.getter(name="awsgovAccountNumber")
    def awsgov_account_number(self) -> Optional[pulumi.Input[str]]:
        """
        AWSGov Account number to associate with Aviatrix account. Required when creating an account for AWSGov.
        """
        return pulumi.get(self, "awsgov_account_number")

    @awsgov_account_number.setter
    def awsgov_account_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsgov_account_number", value)

    @property
    @pulumi.getter(name="awsgovIam")
    def awsgov_iam(self) -> Optional[pulumi.Input[bool]]:
        """
        AWSGov IAM-role based flag. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awsgov_iam")

    @awsgov_iam.setter
    def awsgov_iam(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "awsgov_iam", value)

    @property
    @pulumi.getter(name="awsgovRoleApp")
    def awsgov_role_app(self) -> Optional[pulumi.Input[str]]:
        """
        AWSGov App role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awsgov_role_app")

    @awsgov_role_app.setter
    def awsgov_role_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsgov_role_app", value)

    @property
    @pulumi.getter(name="awsgovRoleEc2")
    def awsgov_role_ec2(self) -> Optional[pulumi.Input[str]]:
        """
        AWSGov EC2 role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awsgov_role_ec2")

    @awsgov_role_ec2.setter
    def awsgov_role_ec2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsgov_role_ec2", value)

    @property
    @pulumi.getter(name="awsgovSecretKey")
    def awsgov_secret_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Key. Required when creating an account for AWSGov.
        """
        return pulumi.get(self, "awsgov_secret_key")

    @awsgov_secret_key.setter
    def awsgov_secret_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsgov_secret_key", value)

    @property
    @pulumi.getter(name="awssAccountNumber")
    def awss_account_number(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region Account Number. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_account_number")

    @awss_account_number.setter
    def awss_account_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_account_number", value)

    @property
    @pulumi.getter(name="awssCaChainCert")
    def awss_ca_chain_cert(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_ca_chain_cert")

    @awss_ca_chain_cert.setter
    def awss_ca_chain_cert(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_ca_chain_cert", value)

    @property
    @pulumi.getter(name="awssCapAccountName")
    def awss_cap_account_name(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region Account Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_account_name")

    @awss_cap_account_name.setter
    def awss_cap_account_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_account_name", value)

    @property
    @pulumi.getter(name="awssCapAgency")
    def awss_cap_agency(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region CAP Agency. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_agency")

    @awss_cap_agency.setter
    def awss_cap_agency(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_agency", value)

    @property
    @pulumi.getter(name="awssCapCert")
    def awss_cap_cert(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region CAP Certificate local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_cert")

    @awss_cap_cert.setter
    def awss_cap_cert(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_cert", value)

    @property
    @pulumi.getter(name="awssCapCertKey")
    def awss_cap_cert_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_cert_key")

    @awss_cap_cert_key.setter
    def awss_cap_cert_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_cert_key", value)

    @property
    @pulumi.getter(name="awssCapRoleName")
    def awss_cap_role_name(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region Role Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_role_name")

    @awss_cap_role_name.setter
    def awss_cap_role_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_role_name", value)

    @property
    @pulumi.getter(name="awssCapUrl")
    def awss_cap_url(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region CAP Url. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_url")

    @awss_cap_url.setter
    def awss_cap_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_url", value)

    @property
    @pulumi.getter(name="awstsAccountNumber")
    def awsts_account_number(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region Account Number. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_account_number")

    @awsts_account_number.setter
    def awsts_account_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_account_number", value)

    @property
    @pulumi.getter(name="awstsCaChainCert")
    def awsts_ca_chain_cert(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_ca_chain_cert")

    @awsts_ca_chain_cert.setter
    def awsts_ca_chain_cert(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_ca_chain_cert", value)

    @property
    @pulumi.getter(name="awstsCapAgency")
    def awsts_cap_agency(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region CAP Agency. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_agency")

    @awsts_cap_agency.setter
    def awsts_cap_agency(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_agency", value)

    @property
    @pulumi.getter(name="awstsCapCert")
    def awsts_cap_cert(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region CAP Certificate local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_cert")

    @awsts_cap_cert.setter
    def awsts_cap_cert(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_cert", value)

    @property
    @pulumi.getter(name="awstsCapCertKey")
    def awsts_cap_cert_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_cert_key")

    @awsts_cap_cert_key.setter
    def awsts_cap_cert_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_cert_key", value)

    @property
    @pulumi.getter(name="awstsCapMission")
    def awsts_cap_mission(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region Mission. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_mission")

    @awsts_cap_mission.setter
    def awsts_cap_mission(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_mission", value)

    @property
    @pulumi.getter(name="awstsCapRoleName")
    def awsts_cap_role_name(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region Role Name. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_role_name")

    @awsts_cap_role_name.setter
    def awsts_cap_role_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_role_name", value)

    @property
    @pulumi.getter(name="awstsCapUrl")
    def awsts_cap_url(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region CAP Url. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_url")

    @awsts_cap_url.setter
    def awsts_cap_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_url", value)

    @property
    @pulumi.getter(name="azurechinaApplicationId")
    def azurechina_application_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureChina ARM Application ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_application_id")

    @azurechina_application_id.setter
    def azurechina_application_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurechina_application_id", value)

    @property
    @pulumi.getter(name="azurechinaApplicationKey")
    def azurechina_application_key(self) -> Optional[pulumi.Input[str]]:
        """
        AzureChina ARM Application key. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_application_key")

    @azurechina_application_key.setter
    def azurechina_application_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurechina_application_key", value)

    @property
    @pulumi.getter(name="azurechinaDirectoryId")
    def azurechina_directory_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureChina ARM Directory ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_directory_id")

    @azurechina_directory_id.setter
    def azurechina_directory_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurechina_directory_id", value)

    @property
    @pulumi.getter(name="azurechinaSubscriptionId")
    def azurechina_subscription_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureChina ARM Subscription ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_subscription_id")

    @azurechina_subscription_id.setter
    def azurechina_subscription_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurechina_subscription_id", value)

    @property
    @pulumi.getter(name="azuregovApplicationId")
    def azuregov_application_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureGov ARM Application ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_application_id")

    @azuregov_application_id.setter
    def azuregov_application_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azuregov_application_id", value)

    @property
    @pulumi.getter(name="azuregovApplicationKey")
    def azuregov_application_key(self) -> Optional[pulumi.Input[str]]:
        """
        AzureGov ARM Application key. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_application_key")

    @azuregov_application_key.setter
    def azuregov_application_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azuregov_application_key", value)

    @property
    @pulumi.getter(name="azuregovDirectoryId")
    def azuregov_directory_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureGov ARM Directory ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_directory_id")

    @azuregov_directory_id.setter
    def azuregov_directory_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azuregov_directory_id", value)

    @property
    @pulumi.getter(name="azuregovSubscriptionId")
    def azuregov_subscription_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureGov ARM Subscription ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_subscription_id")

    @azuregov_subscription_id.setter
    def azuregov_subscription_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azuregov_subscription_id", value)

    @property
    @pulumi.getter(name="gcloudProjectCredentialsFilepath")
    def gcloud_project_credentials_filepath(self) -> Optional[pulumi.Input[str]]:
        """
        GCloud Project Credentials [local filepath].json. Required when creating an account for GCP.
        """
        return pulumi.get(self, "gcloud_project_credentials_filepath")

    @gcloud_project_credentials_filepath.setter
    def gcloud_project_credentials_filepath(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcloud_project_credentials_filepath", value)

    @property
    @pulumi.getter(name="gcloudProjectId")
    def gcloud_project_id(self) -> Optional[pulumi.Input[str]]:
        """
        GCloud Project ID.
        """
        return pulumi.get(self, "gcloud_project_id")

    @gcloud_project_id.setter
    def gcloud_project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcloud_project_id", value)

    @property
    @pulumi.getter(name="ociApiPrivateKeyFilepath")
    def oci_api_private_key_filepath(self) -> Optional[pulumi.Input[str]]:
        """
        Oracle OCI API Private Key local file path. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_api_private_key_filepath")

    @oci_api_private_key_filepath.setter
    def oci_api_private_key_filepath(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "oci_api_private_key_filepath", value)

    @property
    @pulumi.getter(name="ociCompartmentId")
    def oci_compartment_id(self) -> Optional[pulumi.Input[str]]:
        """
        Oracle OCI Compartment ID. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_compartment_id")

    @oci_compartment_id.setter
    def oci_compartment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "oci_compartment_id", value)

    @property
    @pulumi.getter(name="ociTenancyId")
    def oci_tenancy_id(self) -> Optional[pulumi.Input[str]]:
        """
        Oracle OCI Tenancy ID. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_tenancy_id")

    @oci_tenancy_id.setter
    def oci_tenancy_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "oci_tenancy_id", value)

    @property
    @pulumi.getter(name="ociUserId")
    def oci_user_id(self) -> Optional[pulumi.Input[str]]:
        """
        Oracle OCI User ID. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_user_id")

    @oci_user_id.setter
    def oci_user_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "oci_user_id", value)

    @property
    @pulumi.getter(name="rbacGroups")
    def rbac_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of existing RBAC group names. This attribute should only be used when creating an account. Updating this attribute will have no effect. Available as of provider version R2.23.0+.
        """
        return pulumi.get(self, "rbac_groups")

    @rbac_groups.setter
    def rbac_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "rbac_groups", value)


@pulumi.input_type
class _AviatrixAccountState:
    def __init__(__self__, *,
                 account_name: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key: Optional[pulumi.Input[str]] = None,
                 alicloud_account_id: Optional[pulumi.Input[str]] = None,
                 alicloud_secret_key: Optional[pulumi.Input[str]] = None,
                 arm_application_id: Optional[pulumi.Input[str]] = None,
                 arm_application_key: Optional[pulumi.Input[str]] = None,
                 arm_directory_id: Optional[pulumi.Input[str]] = None,
                 arm_subscription_id: Optional[pulumi.Input[str]] = None,
                 audit_account: Optional[pulumi.Input[bool]] = None,
                 aws_access_key: Optional[pulumi.Input[str]] = None,
                 aws_account_number: Optional[pulumi.Input[str]] = None,
                 aws_ca_cert_path: Optional[pulumi.Input[str]] = None,
                 aws_gateway_role_app: Optional[pulumi.Input[str]] = None,
                 aws_gateway_role_ec2: Optional[pulumi.Input[str]] = None,
                 aws_iam: Optional[pulumi.Input[bool]] = None,
                 aws_role_app: Optional[pulumi.Input[str]] = None,
                 aws_role_ec2: Optional[pulumi.Input[str]] = None,
                 aws_secret_key: Optional[pulumi.Input[str]] = None,
                 awschina_access_key: Optional[pulumi.Input[str]] = None,
                 awschina_account_number: Optional[pulumi.Input[str]] = None,
                 awschina_iam: Optional[pulumi.Input[bool]] = None,
                 awschina_role_app: Optional[pulumi.Input[str]] = None,
                 awschina_role_ec2: Optional[pulumi.Input[str]] = None,
                 awschina_secret_key: Optional[pulumi.Input[str]] = None,
                 awsgov_access_key: Optional[pulumi.Input[str]] = None,
                 awsgov_account_number: Optional[pulumi.Input[str]] = None,
                 awsgov_iam: Optional[pulumi.Input[bool]] = None,
                 awsgov_role_app: Optional[pulumi.Input[str]] = None,
                 awsgov_role_ec2: Optional[pulumi.Input[str]] = None,
                 awsgov_secret_key: Optional[pulumi.Input[str]] = None,
                 awss_account_number: Optional[pulumi.Input[str]] = None,
                 awss_ca_chain_cert: Optional[pulumi.Input[str]] = None,
                 awss_cap_account_name: Optional[pulumi.Input[str]] = None,
                 awss_cap_agency: Optional[pulumi.Input[str]] = None,
                 awss_cap_cert: Optional[pulumi.Input[str]] = None,
                 awss_cap_cert_key: Optional[pulumi.Input[str]] = None,
                 awss_cap_cert_key_path: Optional[pulumi.Input[str]] = None,
                 awss_cap_cert_path: Optional[pulumi.Input[str]] = None,
                 awss_cap_role_name: Optional[pulumi.Input[str]] = None,
                 awss_cap_url: Optional[pulumi.Input[str]] = None,
                 awsts_account_number: Optional[pulumi.Input[str]] = None,
                 awsts_ca_chain_cert: Optional[pulumi.Input[str]] = None,
                 awsts_cap_agency: Optional[pulumi.Input[str]] = None,
                 awsts_cap_cert: Optional[pulumi.Input[str]] = None,
                 awsts_cap_cert_key: Optional[pulumi.Input[str]] = None,
                 awsts_cap_cert_key_path: Optional[pulumi.Input[str]] = None,
                 awsts_cap_cert_path: Optional[pulumi.Input[str]] = None,
                 awsts_cap_mission: Optional[pulumi.Input[str]] = None,
                 awsts_cap_role_name: Optional[pulumi.Input[str]] = None,
                 awsts_cap_url: Optional[pulumi.Input[str]] = None,
                 azurechina_application_id: Optional[pulumi.Input[str]] = None,
                 azurechina_application_key: Optional[pulumi.Input[str]] = None,
                 azurechina_directory_id: Optional[pulumi.Input[str]] = None,
                 azurechina_subscription_id: Optional[pulumi.Input[str]] = None,
                 azuregov_application_id: Optional[pulumi.Input[str]] = None,
                 azuregov_application_key: Optional[pulumi.Input[str]] = None,
                 azuregov_directory_id: Optional[pulumi.Input[str]] = None,
                 azuregov_subscription_id: Optional[pulumi.Input[str]] = None,
                 cloud_type: Optional[pulumi.Input[int]] = None,
                 gcloud_project_credentials_filepath: Optional[pulumi.Input[str]] = None,
                 gcloud_project_id: Optional[pulumi.Input[str]] = None,
                 oci_api_private_key_filepath: Optional[pulumi.Input[str]] = None,
                 oci_compartment_id: Optional[pulumi.Input[str]] = None,
                 oci_tenancy_id: Optional[pulumi.Input[str]] = None,
                 oci_user_id: Optional[pulumi.Input[str]] = None,
                 rbac_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering AviatrixAccount resources.
        :param pulumi.Input[str] account_name: Account name. This can be used for logging in to CloudN console or UserConnect controller.
        :param pulumi.Input[str] alicloud_access_key: Alibaba Cloud Access Key. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] alicloud_account_id: Alibaba Cloud Account number to associate with Aviatrix account. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] alicloud_secret_key: Alibaba Cloud Secret Key. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] arm_application_id: Azure ARM Application ID. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_application_key: Azure ARM Application key. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_directory_id: Azure ARM Directory ID. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_subscription_id: Azure ARM Subscription ID. Required when creating an account for Azure.
        :param pulumi.Input[bool] audit_account: Enable account audit.
        :param pulumi.Input[str] aws_access_key: AWS Access Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        :param pulumi.Input[str] aws_account_number: AWS Account number to associate with Aviatrix account. Required when creating an account for AWS.
        :param pulumi.Input[str] aws_ca_cert_path: (Optional) AWS Top Secret Region or Secret Region Custom Certificate Authority file name on the controller. Available as of provider R2.19.5+.
        :param pulumi.Input[str] aws_gateway_role_app: A separate AWS App role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_ec2` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        :param pulumi.Input[str] aws_gateway_role_ec2: A separate AWS EC2 role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_app` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        :param pulumi.Input[bool] aws_iam: AWS IAM-role based flag, this option is for UserConnect.
        :param pulumi.Input[str] aws_role_app: AWS App role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        :param pulumi.Input[str] aws_role_ec2: AWS EC2 role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        :param pulumi.Input[str] aws_secret_key: AWS Secret Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        :param pulumi.Input[str] awschina_access_key: AWSChina Access Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_account_number: AWSChina Account number to associate with Aviatrix account. Required when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[bool] awschina_iam: AWSChina IAM-role based flag. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_role_app: AWSChina App role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_role_ec2: AWSChina EC2 role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_secret_key: AWSChina Secret Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_access_key: AWS Access Key. Required when creating an account for AWSGov.
        :param pulumi.Input[str] awsgov_account_number: AWSGov Account number to associate with Aviatrix account. Required when creating an account for AWSGov.
        :param pulumi.Input[bool] awsgov_iam: AWSGov IAM-role based flag. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_role_app: AWSGov App role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_role_ec2: AWSGov EC2 role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_secret_key: AWS Secret Key. Required when creating an account for AWSGov.
        :param pulumi.Input[str] awss_account_number: AWS Secret Region Account Number. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_ca_chain_cert: AWS Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_account_name: AWS Secret Region Account Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_agency: AWS Secret Region CAP Agency. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert: AWS Secret Region CAP Certificate local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert_key: AWS Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert_key_path: (Optional) AWS Secret Region CAP Certificate Key file name on the controller. Available as of provider R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert_path: (Optional) AWS Secret Region CAP Certificate file name on the controller. Available as of provider R2.19.5+.
        :param pulumi.Input[str] awss_cap_role_name: AWS Secret Region Role Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_url: AWS Secret Region CAP Url. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_account_number: AWS Top Secret Region Account Number. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_ca_chain_cert: AWS Top Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_agency: AWS Top Secret Region CAP Agency. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert: AWS Top Secret Region CAP Certificate local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert_key: AWS Top Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert_key_path: (Optional) AWS Top Secret Region CAP Certificate Key file name on the controller. Available as of provider R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert_path: (Optional) AWS Top Secret Region CAP Certificate file name on the controller. Available as of provider R2.19.5+.
        :param pulumi.Input[str] awsts_cap_mission: AWS Top Secret Region Mission. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_role_name: AWS Top Secret Region Role Name. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_url: AWS Top Secret Region CAP Url. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] azurechina_application_id: AzureChina ARM Application ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_application_key: AzureChina ARM Application key. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_directory_id: AzureChina ARM Directory ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_subscription_id: AzureChina ARM Subscription ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azuregov_application_id: AzureGov ARM Application ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_application_key: AzureGov ARM Application key. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_directory_id: AzureGov ARM Directory ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_subscription_id: AzureGov ARM Subscription ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[int] cloud_type: Type of cloud service provider. Only AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina and Alibaba Cloud are supported currently. Enter 1 for AWS, 4 for GCP, 8 for Azure, 16 for OCI, 32 for AzureGov, 256 for AWSGov, 1024 for AWSChina or 2048 for AzureChina, 8192 for Alibaba Cloud.
        :param pulumi.Input[str] gcloud_project_credentials_filepath: GCloud Project Credentials [local filepath].json. Required when creating an account for GCP.
        :param pulumi.Input[str] gcloud_project_id: GCloud Project ID.
        :param pulumi.Input[str] oci_api_private_key_filepath: Oracle OCI API Private Key local file path. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_compartment_id: Oracle OCI Compartment ID. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_tenancy_id: Oracle OCI Tenancy ID. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_user_id: Oracle OCI User ID. Required when creating an account for OCI.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] rbac_groups: A list of existing RBAC group names. This attribute should only be used when creating an account. Updating this attribute will have no effect. Available as of provider version R2.23.0+.
        """
        if account_name is not None:
            pulumi.set(__self__, "account_name", account_name)
        if alicloud_access_key is not None:
            pulumi.set(__self__, "alicloud_access_key", alicloud_access_key)
        if alicloud_account_id is not None:
            pulumi.set(__self__, "alicloud_account_id", alicloud_account_id)
        if alicloud_secret_key is not None:
            pulumi.set(__self__, "alicloud_secret_key", alicloud_secret_key)
        if arm_application_id is not None:
            pulumi.set(__self__, "arm_application_id", arm_application_id)
        if arm_application_key is not None:
            pulumi.set(__self__, "arm_application_key", arm_application_key)
        if arm_directory_id is not None:
            pulumi.set(__self__, "arm_directory_id", arm_directory_id)
        if arm_subscription_id is not None:
            pulumi.set(__self__, "arm_subscription_id", arm_subscription_id)
        if audit_account is not None:
            pulumi.set(__self__, "audit_account", audit_account)
        if aws_access_key is not None:
            pulumi.set(__self__, "aws_access_key", aws_access_key)
        if aws_account_number is not None:
            pulumi.set(__self__, "aws_account_number", aws_account_number)
        if aws_ca_cert_path is not None:
            pulumi.set(__self__, "aws_ca_cert_path", aws_ca_cert_path)
        if aws_gateway_role_app is not None:
            pulumi.set(__self__, "aws_gateway_role_app", aws_gateway_role_app)
        if aws_gateway_role_ec2 is not None:
            pulumi.set(__self__, "aws_gateway_role_ec2", aws_gateway_role_ec2)
        if aws_iam is not None:
            pulumi.set(__self__, "aws_iam", aws_iam)
        if aws_role_app is not None:
            pulumi.set(__self__, "aws_role_app", aws_role_app)
        if aws_role_ec2 is not None:
            pulumi.set(__self__, "aws_role_ec2", aws_role_ec2)
        if aws_secret_key is not None:
            pulumi.set(__self__, "aws_secret_key", aws_secret_key)
        if awschina_access_key is not None:
            pulumi.set(__self__, "awschina_access_key", awschina_access_key)
        if awschina_account_number is not None:
            pulumi.set(__self__, "awschina_account_number", awschina_account_number)
        if awschina_iam is not None:
            pulumi.set(__self__, "awschina_iam", awschina_iam)
        if awschina_role_app is not None:
            pulumi.set(__self__, "awschina_role_app", awschina_role_app)
        if awschina_role_ec2 is not None:
            pulumi.set(__self__, "awschina_role_ec2", awschina_role_ec2)
        if awschina_secret_key is not None:
            pulumi.set(__self__, "awschina_secret_key", awschina_secret_key)
        if awsgov_access_key is not None:
            pulumi.set(__self__, "awsgov_access_key", awsgov_access_key)
        if awsgov_account_number is not None:
            pulumi.set(__self__, "awsgov_account_number", awsgov_account_number)
        if awsgov_iam is not None:
            pulumi.set(__self__, "awsgov_iam", awsgov_iam)
        if awsgov_role_app is not None:
            pulumi.set(__self__, "awsgov_role_app", awsgov_role_app)
        if awsgov_role_ec2 is not None:
            pulumi.set(__self__, "awsgov_role_ec2", awsgov_role_ec2)
        if awsgov_secret_key is not None:
            pulumi.set(__self__, "awsgov_secret_key", awsgov_secret_key)
        if awss_account_number is not None:
            pulumi.set(__self__, "awss_account_number", awss_account_number)
        if awss_ca_chain_cert is not None:
            pulumi.set(__self__, "awss_ca_chain_cert", awss_ca_chain_cert)
        if awss_cap_account_name is not None:
            pulumi.set(__self__, "awss_cap_account_name", awss_cap_account_name)
        if awss_cap_agency is not None:
            pulumi.set(__self__, "awss_cap_agency", awss_cap_agency)
        if awss_cap_cert is not None:
            pulumi.set(__self__, "awss_cap_cert", awss_cap_cert)
        if awss_cap_cert_key is not None:
            pulumi.set(__self__, "awss_cap_cert_key", awss_cap_cert_key)
        if awss_cap_cert_key_path is not None:
            pulumi.set(__self__, "awss_cap_cert_key_path", awss_cap_cert_key_path)
        if awss_cap_cert_path is not None:
            pulumi.set(__self__, "awss_cap_cert_path", awss_cap_cert_path)
        if awss_cap_role_name is not None:
            pulumi.set(__self__, "awss_cap_role_name", awss_cap_role_name)
        if awss_cap_url is not None:
            pulumi.set(__self__, "awss_cap_url", awss_cap_url)
        if awsts_account_number is not None:
            pulumi.set(__self__, "awsts_account_number", awsts_account_number)
        if awsts_ca_chain_cert is not None:
            pulumi.set(__self__, "awsts_ca_chain_cert", awsts_ca_chain_cert)
        if awsts_cap_agency is not None:
            pulumi.set(__self__, "awsts_cap_agency", awsts_cap_agency)
        if awsts_cap_cert is not None:
            pulumi.set(__self__, "awsts_cap_cert", awsts_cap_cert)
        if awsts_cap_cert_key is not None:
            pulumi.set(__self__, "awsts_cap_cert_key", awsts_cap_cert_key)
        if awsts_cap_cert_key_path is not None:
            pulumi.set(__self__, "awsts_cap_cert_key_path", awsts_cap_cert_key_path)
        if awsts_cap_cert_path is not None:
            pulumi.set(__self__, "awsts_cap_cert_path", awsts_cap_cert_path)
        if awsts_cap_mission is not None:
            pulumi.set(__self__, "awsts_cap_mission", awsts_cap_mission)
        if awsts_cap_role_name is not None:
            pulumi.set(__self__, "awsts_cap_role_name", awsts_cap_role_name)
        if awsts_cap_url is not None:
            pulumi.set(__self__, "awsts_cap_url", awsts_cap_url)
        if azurechina_application_id is not None:
            pulumi.set(__self__, "azurechina_application_id", azurechina_application_id)
        if azurechina_application_key is not None:
            pulumi.set(__self__, "azurechina_application_key", azurechina_application_key)
        if azurechina_directory_id is not None:
            pulumi.set(__self__, "azurechina_directory_id", azurechina_directory_id)
        if azurechina_subscription_id is not None:
            pulumi.set(__self__, "azurechina_subscription_id", azurechina_subscription_id)
        if azuregov_application_id is not None:
            pulumi.set(__self__, "azuregov_application_id", azuregov_application_id)
        if azuregov_application_key is not None:
            pulumi.set(__self__, "azuregov_application_key", azuregov_application_key)
        if azuregov_directory_id is not None:
            pulumi.set(__self__, "azuregov_directory_id", azuregov_directory_id)
        if azuregov_subscription_id is not None:
            pulumi.set(__self__, "azuregov_subscription_id", azuregov_subscription_id)
        if cloud_type is not None:
            pulumi.set(__self__, "cloud_type", cloud_type)
        if gcloud_project_credentials_filepath is not None:
            pulumi.set(__self__, "gcloud_project_credentials_filepath", gcloud_project_credentials_filepath)
        if gcloud_project_id is not None:
            pulumi.set(__self__, "gcloud_project_id", gcloud_project_id)
        if oci_api_private_key_filepath is not None:
            pulumi.set(__self__, "oci_api_private_key_filepath", oci_api_private_key_filepath)
        if oci_compartment_id is not None:
            pulumi.set(__self__, "oci_compartment_id", oci_compartment_id)
        if oci_tenancy_id is not None:
            pulumi.set(__self__, "oci_tenancy_id", oci_tenancy_id)
        if oci_user_id is not None:
            pulumi.set(__self__, "oci_user_id", oci_user_id)
        if rbac_groups is not None:
            pulumi.set(__self__, "rbac_groups", rbac_groups)

    @property
    @pulumi.getter(name="accountName")
    def account_name(self) -> Optional[pulumi.Input[str]]:
        """
        Account name. This can be used for logging in to CloudN console or UserConnect controller.
        """
        return pulumi.get(self, "account_name")

    @account_name.setter
    def account_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "account_name", value)

    @property
    @pulumi.getter(name="alicloudAccessKey")
    def alicloud_access_key(self) -> Optional[pulumi.Input[str]]:
        """
        Alibaba Cloud Access Key. Required when creating an account for Alibaba Cloud.
        """
        return pulumi.get(self, "alicloud_access_key")

    @alicloud_access_key.setter
    def alicloud_access_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_access_key", value)

    @property
    @pulumi.getter(name="alicloudAccountId")
    def alicloud_account_id(self) -> Optional[pulumi.Input[str]]:
        """
        Alibaba Cloud Account number to associate with Aviatrix account. Required when creating an account for Alibaba Cloud.
        """
        return pulumi.get(self, "alicloud_account_id")

    @alicloud_account_id.setter
    def alicloud_account_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_account_id", value)

    @property
    @pulumi.getter(name="alicloudSecretKey")
    def alicloud_secret_key(self) -> Optional[pulumi.Input[str]]:
        """
        Alibaba Cloud Secret Key. Required when creating an account for Alibaba Cloud.
        """
        return pulumi.get(self, "alicloud_secret_key")

    @alicloud_secret_key.setter
    def alicloud_secret_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alicloud_secret_key", value)

    @property
    @pulumi.getter(name="armApplicationId")
    def arm_application_id(self) -> Optional[pulumi.Input[str]]:
        """
        Azure ARM Application ID. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_application_id")

    @arm_application_id.setter
    def arm_application_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arm_application_id", value)

    @property
    @pulumi.getter(name="armApplicationKey")
    def arm_application_key(self) -> Optional[pulumi.Input[str]]:
        """
        Azure ARM Application key. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_application_key")

    @arm_application_key.setter
    def arm_application_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arm_application_key", value)

    @property
    @pulumi.getter(name="armDirectoryId")
    def arm_directory_id(self) -> Optional[pulumi.Input[str]]:
        """
        Azure ARM Directory ID. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_directory_id")

    @arm_directory_id.setter
    def arm_directory_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arm_directory_id", value)

    @property
    @pulumi.getter(name="armSubscriptionId")
    def arm_subscription_id(self) -> Optional[pulumi.Input[str]]:
        """
        Azure ARM Subscription ID. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_subscription_id")

    @arm_subscription_id.setter
    def arm_subscription_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "arm_subscription_id", value)

    @property
    @pulumi.getter(name="auditAccount")
    def audit_account(self) -> Optional[pulumi.Input[bool]]:
        """
        Enable account audit.
        """
        return pulumi.get(self, "audit_account")

    @audit_account.setter
    def audit_account(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "audit_account", value)

    @property
    @pulumi.getter(name="awsAccessKey")
    def aws_access_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Access Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_access_key")

    @aws_access_key.setter
    def aws_access_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_access_key", value)

    @property
    @pulumi.getter(name="awsAccountNumber")
    def aws_account_number(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Account number to associate with Aviatrix account. Required when creating an account for AWS.
        """
        return pulumi.get(self, "aws_account_number")

    @aws_account_number.setter
    def aws_account_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_account_number", value)

    @property
    @pulumi.getter(name="awsCaCertPath")
    def aws_ca_cert_path(self) -> Optional[pulumi.Input[str]]:
        """
        (Optional) AWS Top Secret Region or Secret Region Custom Certificate Authority file name on the controller. Available as of provider R2.19.5+.
        """
        return pulumi.get(self, "aws_ca_cert_path")

    @aws_ca_cert_path.setter
    def aws_ca_cert_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_ca_cert_path", value)

    @property
    @pulumi.getter(name="awsGatewayRoleApp")
    def aws_gateway_role_app(self) -> Optional[pulumi.Input[str]]:
        """
        A separate AWS App role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_ec2` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "aws_gateway_role_app")

    @aws_gateway_role_app.setter
    def aws_gateway_role_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_gateway_role_app", value)

    @property
    @pulumi.getter(name="awsGatewayRoleEc2")
    def aws_gateway_role_ec2(self) -> Optional[pulumi.Input[str]]:
        """
        A separate AWS EC2 role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_app` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "aws_gateway_role_ec2")

    @aws_gateway_role_ec2.setter
    def aws_gateway_role_ec2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_gateway_role_ec2", value)

    @property
    @pulumi.getter(name="awsIam")
    def aws_iam(self) -> Optional[pulumi.Input[bool]]:
        """
        AWS IAM-role based flag, this option is for UserConnect.
        """
        return pulumi.get(self, "aws_iam")

    @aws_iam.setter
    def aws_iam(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "aws_iam", value)

    @property
    @pulumi.getter(name="awsRoleApp")
    def aws_role_app(self) -> Optional[pulumi.Input[str]]:
        """
        AWS App role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_role_app")

    @aws_role_app.setter
    def aws_role_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_role_app", value)

    @property
    @pulumi.getter(name="awsRoleEc2")
    def aws_role_ec2(self) -> Optional[pulumi.Input[str]]:
        """
        AWS EC2 role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_role_ec2")

    @aws_role_ec2.setter
    def aws_role_ec2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_role_ec2", value)

    @property
    @pulumi.getter(name="awsSecretKey")
    def aws_secret_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_secret_key")

    @aws_secret_key.setter
    def aws_secret_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "aws_secret_key", value)

    @property
    @pulumi.getter(name="awschinaAccessKey")
    def awschina_access_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWSChina Access Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_access_key")

    @awschina_access_key.setter
    def awschina_access_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awschina_access_key", value)

    @property
    @pulumi.getter(name="awschinaAccountNumber")
    def awschina_account_number(self) -> Optional[pulumi.Input[str]]:
        """
        AWSChina Account number to associate with Aviatrix account. Required when creating an account for AWSChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_account_number")

    @awschina_account_number.setter
    def awschina_account_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awschina_account_number", value)

    @property
    @pulumi.getter(name="awschinaIam")
    def awschina_iam(self) -> Optional[pulumi.Input[bool]]:
        """
        AWSChina IAM-role based flag. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_iam")

    @awschina_iam.setter
    def awschina_iam(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "awschina_iam", value)

    @property
    @pulumi.getter(name="awschinaRoleApp")
    def awschina_role_app(self) -> Optional[pulumi.Input[str]]:
        """
        AWSChina App role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_role_app")

    @awschina_role_app.setter
    def awschina_role_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awschina_role_app", value)

    @property
    @pulumi.getter(name="awschinaRoleEc2")
    def awschina_role_ec2(self) -> Optional[pulumi.Input[str]]:
        """
        AWSChina EC2 role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_role_ec2")

    @awschina_role_ec2.setter
    def awschina_role_ec2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awschina_role_ec2", value)

    @property
    @pulumi.getter(name="awschinaSecretKey")
    def awschina_secret_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWSChina Secret Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_secret_key")

    @awschina_secret_key.setter
    def awschina_secret_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awschina_secret_key", value)

    @property
    @pulumi.getter(name="awsgovAccessKey")
    def awsgov_access_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Access Key. Required when creating an account for AWSGov.
        """
        return pulumi.get(self, "awsgov_access_key")

    @awsgov_access_key.setter
    def awsgov_access_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsgov_access_key", value)

    @property
    @pulumi.getter(name="awsgovAccountNumber")
    def awsgov_account_number(self) -> Optional[pulumi.Input[str]]:
        """
        AWSGov Account number to associate with Aviatrix account. Required when creating an account for AWSGov.
        """
        return pulumi.get(self, "awsgov_account_number")

    @awsgov_account_number.setter
    def awsgov_account_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsgov_account_number", value)

    @property
    @pulumi.getter(name="awsgovIam")
    def awsgov_iam(self) -> Optional[pulumi.Input[bool]]:
        """
        AWSGov IAM-role based flag. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awsgov_iam")

    @awsgov_iam.setter
    def awsgov_iam(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "awsgov_iam", value)

    @property
    @pulumi.getter(name="awsgovRoleApp")
    def awsgov_role_app(self) -> Optional[pulumi.Input[str]]:
        """
        AWSGov App role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awsgov_role_app")

    @awsgov_role_app.setter
    def awsgov_role_app(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsgov_role_app", value)

    @property
    @pulumi.getter(name="awsgovRoleEc2")
    def awsgov_role_ec2(self) -> Optional[pulumi.Input[str]]:
        """
        AWSGov EC2 role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awsgov_role_ec2")

    @awsgov_role_ec2.setter
    def awsgov_role_ec2(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsgov_role_ec2", value)

    @property
    @pulumi.getter(name="awsgovSecretKey")
    def awsgov_secret_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Key. Required when creating an account for AWSGov.
        """
        return pulumi.get(self, "awsgov_secret_key")

    @awsgov_secret_key.setter
    def awsgov_secret_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsgov_secret_key", value)

    @property
    @pulumi.getter(name="awssAccountNumber")
    def awss_account_number(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region Account Number. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_account_number")

    @awss_account_number.setter
    def awss_account_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_account_number", value)

    @property
    @pulumi.getter(name="awssCaChainCert")
    def awss_ca_chain_cert(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_ca_chain_cert")

    @awss_ca_chain_cert.setter
    def awss_ca_chain_cert(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_ca_chain_cert", value)

    @property
    @pulumi.getter(name="awssCapAccountName")
    def awss_cap_account_name(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region Account Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_account_name")

    @awss_cap_account_name.setter
    def awss_cap_account_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_account_name", value)

    @property
    @pulumi.getter(name="awssCapAgency")
    def awss_cap_agency(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region CAP Agency. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_agency")

    @awss_cap_agency.setter
    def awss_cap_agency(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_agency", value)

    @property
    @pulumi.getter(name="awssCapCert")
    def awss_cap_cert(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region CAP Certificate local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_cert")

    @awss_cap_cert.setter
    def awss_cap_cert(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_cert", value)

    @property
    @pulumi.getter(name="awssCapCertKey")
    def awss_cap_cert_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_cert_key")

    @awss_cap_cert_key.setter
    def awss_cap_cert_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_cert_key", value)

    @property
    @pulumi.getter(name="awssCapCertKeyPath")
    def awss_cap_cert_key_path(self) -> Optional[pulumi.Input[str]]:
        """
        (Optional) AWS Secret Region CAP Certificate Key file name on the controller. Available as of provider R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_cert_key_path")

    @awss_cap_cert_key_path.setter
    def awss_cap_cert_key_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_cert_key_path", value)

    @property
    @pulumi.getter(name="awssCapCertPath")
    def awss_cap_cert_path(self) -> Optional[pulumi.Input[str]]:
        """
        (Optional) AWS Secret Region CAP Certificate file name on the controller. Available as of provider R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_cert_path")

    @awss_cap_cert_path.setter
    def awss_cap_cert_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_cert_path", value)

    @property
    @pulumi.getter(name="awssCapRoleName")
    def awss_cap_role_name(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region Role Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_role_name")

    @awss_cap_role_name.setter
    def awss_cap_role_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_role_name", value)

    @property
    @pulumi.getter(name="awssCapUrl")
    def awss_cap_url(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Secret Region CAP Url. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_url")

    @awss_cap_url.setter
    def awss_cap_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awss_cap_url", value)

    @property
    @pulumi.getter(name="awstsAccountNumber")
    def awsts_account_number(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region Account Number. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_account_number")

    @awsts_account_number.setter
    def awsts_account_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_account_number", value)

    @property
    @pulumi.getter(name="awstsCaChainCert")
    def awsts_ca_chain_cert(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_ca_chain_cert")

    @awsts_ca_chain_cert.setter
    def awsts_ca_chain_cert(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_ca_chain_cert", value)

    @property
    @pulumi.getter(name="awstsCapAgency")
    def awsts_cap_agency(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region CAP Agency. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_agency")

    @awsts_cap_agency.setter
    def awsts_cap_agency(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_agency", value)

    @property
    @pulumi.getter(name="awstsCapCert")
    def awsts_cap_cert(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region CAP Certificate local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_cert")

    @awsts_cap_cert.setter
    def awsts_cap_cert(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_cert", value)

    @property
    @pulumi.getter(name="awstsCapCertKey")
    def awsts_cap_cert_key(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_cert_key")

    @awsts_cap_cert_key.setter
    def awsts_cap_cert_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_cert_key", value)

    @property
    @pulumi.getter(name="awstsCapCertKeyPath")
    def awsts_cap_cert_key_path(self) -> Optional[pulumi.Input[str]]:
        """
        (Optional) AWS Top Secret Region CAP Certificate Key file name on the controller. Available as of provider R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_cert_key_path")

    @awsts_cap_cert_key_path.setter
    def awsts_cap_cert_key_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_cert_key_path", value)

    @property
    @pulumi.getter(name="awstsCapCertPath")
    def awsts_cap_cert_path(self) -> Optional[pulumi.Input[str]]:
        """
        (Optional) AWS Top Secret Region CAP Certificate file name on the controller. Available as of provider R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_cert_path")

    @awsts_cap_cert_path.setter
    def awsts_cap_cert_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_cert_path", value)

    @property
    @pulumi.getter(name="awstsCapMission")
    def awsts_cap_mission(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region Mission. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_mission")

    @awsts_cap_mission.setter
    def awsts_cap_mission(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_mission", value)

    @property
    @pulumi.getter(name="awstsCapRoleName")
    def awsts_cap_role_name(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region Role Name. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_role_name")

    @awsts_cap_role_name.setter
    def awsts_cap_role_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_role_name", value)

    @property
    @pulumi.getter(name="awstsCapUrl")
    def awsts_cap_url(self) -> Optional[pulumi.Input[str]]:
        """
        AWS Top Secret Region CAP Url. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_url")

    @awsts_cap_url.setter
    def awsts_cap_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "awsts_cap_url", value)

    @property
    @pulumi.getter(name="azurechinaApplicationId")
    def azurechina_application_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureChina ARM Application ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_application_id")

    @azurechina_application_id.setter
    def azurechina_application_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurechina_application_id", value)

    @property
    @pulumi.getter(name="azurechinaApplicationKey")
    def azurechina_application_key(self) -> Optional[pulumi.Input[str]]:
        """
        AzureChina ARM Application key. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_application_key")

    @azurechina_application_key.setter
    def azurechina_application_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurechina_application_key", value)

    @property
    @pulumi.getter(name="azurechinaDirectoryId")
    def azurechina_directory_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureChina ARM Directory ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_directory_id")

    @azurechina_directory_id.setter
    def azurechina_directory_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurechina_directory_id", value)

    @property
    @pulumi.getter(name="azurechinaSubscriptionId")
    def azurechina_subscription_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureChina ARM Subscription ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_subscription_id")

    @azurechina_subscription_id.setter
    def azurechina_subscription_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurechina_subscription_id", value)

    @property
    @pulumi.getter(name="azuregovApplicationId")
    def azuregov_application_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureGov ARM Application ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_application_id")

    @azuregov_application_id.setter
    def azuregov_application_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azuregov_application_id", value)

    @property
    @pulumi.getter(name="azuregovApplicationKey")
    def azuregov_application_key(self) -> Optional[pulumi.Input[str]]:
        """
        AzureGov ARM Application key. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_application_key")

    @azuregov_application_key.setter
    def azuregov_application_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azuregov_application_key", value)

    @property
    @pulumi.getter(name="azuregovDirectoryId")
    def azuregov_directory_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureGov ARM Directory ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_directory_id")

    @azuregov_directory_id.setter
    def azuregov_directory_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azuregov_directory_id", value)

    @property
    @pulumi.getter(name="azuregovSubscriptionId")
    def azuregov_subscription_id(self) -> Optional[pulumi.Input[str]]:
        """
        AzureGov ARM Subscription ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_subscription_id")

    @azuregov_subscription_id.setter
    def azuregov_subscription_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azuregov_subscription_id", value)

    @property
    @pulumi.getter(name="cloudType")
    def cloud_type(self) -> Optional[pulumi.Input[int]]:
        """
        Type of cloud service provider. Only AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina and Alibaba Cloud are supported currently. Enter 1 for AWS, 4 for GCP, 8 for Azure, 16 for OCI, 32 for AzureGov, 256 for AWSGov, 1024 for AWSChina or 2048 for AzureChina, 8192 for Alibaba Cloud.
        """
        return pulumi.get(self, "cloud_type")

    @cloud_type.setter
    def cloud_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "cloud_type", value)

    @property
    @pulumi.getter(name="gcloudProjectCredentialsFilepath")
    def gcloud_project_credentials_filepath(self) -> Optional[pulumi.Input[str]]:
        """
        GCloud Project Credentials [local filepath].json. Required when creating an account for GCP.
        """
        return pulumi.get(self, "gcloud_project_credentials_filepath")

    @gcloud_project_credentials_filepath.setter
    def gcloud_project_credentials_filepath(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcloud_project_credentials_filepath", value)

    @property
    @pulumi.getter(name="gcloudProjectId")
    def gcloud_project_id(self) -> Optional[pulumi.Input[str]]:
        """
        GCloud Project ID.
        """
        return pulumi.get(self, "gcloud_project_id")

    @gcloud_project_id.setter
    def gcloud_project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gcloud_project_id", value)

    @property
    @pulumi.getter(name="ociApiPrivateKeyFilepath")
    def oci_api_private_key_filepath(self) -> Optional[pulumi.Input[str]]:
        """
        Oracle OCI API Private Key local file path. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_api_private_key_filepath")

    @oci_api_private_key_filepath.setter
    def oci_api_private_key_filepath(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "oci_api_private_key_filepath", value)

    @property
    @pulumi.getter(name="ociCompartmentId")
    def oci_compartment_id(self) -> Optional[pulumi.Input[str]]:
        """
        Oracle OCI Compartment ID. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_compartment_id")

    @oci_compartment_id.setter
    def oci_compartment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "oci_compartment_id", value)

    @property
    @pulumi.getter(name="ociTenancyId")
    def oci_tenancy_id(self) -> Optional[pulumi.Input[str]]:
        """
        Oracle OCI Tenancy ID. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_tenancy_id")

    @oci_tenancy_id.setter
    def oci_tenancy_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "oci_tenancy_id", value)

    @property
    @pulumi.getter(name="ociUserId")
    def oci_user_id(self) -> Optional[pulumi.Input[str]]:
        """
        Oracle OCI User ID. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_user_id")

    @oci_user_id.setter
    def oci_user_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "oci_user_id", value)

    @property
    @pulumi.getter(name="rbacGroups")
    def rbac_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of existing RBAC group names. This attribute should only be used when creating an account. Updating this attribute will have no effect. Available as of provider version R2.23.0+.
        """
        return pulumi.get(self, "rbac_groups")

    @rbac_groups.setter
    def rbac_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "rbac_groups", value)


class AviatrixAccount(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_name: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key: Optional[pulumi.Input[str]] = None,
                 alicloud_account_id: Optional[pulumi.Input[str]] = None,
                 alicloud_secret_key: Optional[pulumi.Input[str]] = None,
                 arm_application_id: Optional[pulumi.Input[str]] = None,
                 arm_application_key: Optional[pulumi.Input[str]] = None,
                 arm_directory_id: Optional[pulumi.Input[str]] = None,
                 arm_subscription_id: Optional[pulumi.Input[str]] = None,
                 audit_account: Optional[pulumi.Input[bool]] = None,
                 aws_access_key: Optional[pulumi.Input[str]] = None,
                 aws_account_number: Optional[pulumi.Input[str]] = None,
                 aws_gateway_role_app: Optional[pulumi.Input[str]] = None,
                 aws_gateway_role_ec2: Optional[pulumi.Input[str]] = None,
                 aws_iam: Optional[pulumi.Input[bool]] = None,
                 aws_role_app: Optional[pulumi.Input[str]] = None,
                 aws_role_ec2: Optional[pulumi.Input[str]] = None,
                 aws_secret_key: Optional[pulumi.Input[str]] = None,
                 awschina_access_key: Optional[pulumi.Input[str]] = None,
                 awschina_account_number: Optional[pulumi.Input[str]] = None,
                 awschina_iam: Optional[pulumi.Input[bool]] = None,
                 awschina_role_app: Optional[pulumi.Input[str]] = None,
                 awschina_role_ec2: Optional[pulumi.Input[str]] = None,
                 awschina_secret_key: Optional[pulumi.Input[str]] = None,
                 awsgov_access_key: Optional[pulumi.Input[str]] = None,
                 awsgov_account_number: Optional[pulumi.Input[str]] = None,
                 awsgov_iam: Optional[pulumi.Input[bool]] = None,
                 awsgov_role_app: Optional[pulumi.Input[str]] = None,
                 awsgov_role_ec2: Optional[pulumi.Input[str]] = None,
                 awsgov_secret_key: Optional[pulumi.Input[str]] = None,
                 awss_account_number: Optional[pulumi.Input[str]] = None,
                 awss_ca_chain_cert: Optional[pulumi.Input[str]] = None,
                 awss_cap_account_name: Optional[pulumi.Input[str]] = None,
                 awss_cap_agency: Optional[pulumi.Input[str]] = None,
                 awss_cap_cert: Optional[pulumi.Input[str]] = None,
                 awss_cap_cert_key: Optional[pulumi.Input[str]] = None,
                 awss_cap_role_name: Optional[pulumi.Input[str]] = None,
                 awss_cap_url: Optional[pulumi.Input[str]] = None,
                 awsts_account_number: Optional[pulumi.Input[str]] = None,
                 awsts_ca_chain_cert: Optional[pulumi.Input[str]] = None,
                 awsts_cap_agency: Optional[pulumi.Input[str]] = None,
                 awsts_cap_cert: Optional[pulumi.Input[str]] = None,
                 awsts_cap_cert_key: Optional[pulumi.Input[str]] = None,
                 awsts_cap_mission: Optional[pulumi.Input[str]] = None,
                 awsts_cap_role_name: Optional[pulumi.Input[str]] = None,
                 awsts_cap_url: Optional[pulumi.Input[str]] = None,
                 azurechina_application_id: Optional[pulumi.Input[str]] = None,
                 azurechina_application_key: Optional[pulumi.Input[str]] = None,
                 azurechina_directory_id: Optional[pulumi.Input[str]] = None,
                 azurechina_subscription_id: Optional[pulumi.Input[str]] = None,
                 azuregov_application_id: Optional[pulumi.Input[str]] = None,
                 azuregov_application_key: Optional[pulumi.Input[str]] = None,
                 azuregov_directory_id: Optional[pulumi.Input[str]] = None,
                 azuregov_subscription_id: Optional[pulumi.Input[str]] = None,
                 cloud_type: Optional[pulumi.Input[int]] = None,
                 gcloud_project_credentials_filepath: Optional[pulumi.Input[str]] = None,
                 gcloud_project_id: Optional[pulumi.Input[str]] = None,
                 oci_api_private_key_filepath: Optional[pulumi.Input[str]] = None,
                 oci_compartment_id: Optional[pulumi.Input[str]] = None,
                 oci_tenancy_id: Optional[pulumi.Input[str]] = None,
                 oci_user_id: Optional[pulumi.Input[str]] = None,
                 rbac_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        The **aviatrix_account** resource allows the creation and management of Aviatrix cloud accounts.

        > **NOTE:** With the release of Controller 5.4 (compatible with Aviatrix provider R2.13), Role-Based Access Control (RBAC) is now integrated into the Accounts workflow. Any **aviatrix_account** created in 5.3 by default will have admin privileges (attached to the 'admin' RBAC permission group). In 5.4, any new accounts created will not be attached to any RBAC group unless otherwise specified through the **aviatrix_rbac_group_access_account_attachment** resource.

        ## Import

        **account** can be imported using the `account_name` (when doing import, need to leave sensitive attributes blank), e.g.

        ```sh
         $ pulumi import aviatrix:index/aviatrixAccount:AviatrixAccount test account_name
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] account_name: Account name. This can be used for logging in to CloudN console or UserConnect controller.
        :param pulumi.Input[str] alicloud_access_key: Alibaba Cloud Access Key. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] alicloud_account_id: Alibaba Cloud Account number to associate with Aviatrix account. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] alicloud_secret_key: Alibaba Cloud Secret Key. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] arm_application_id: Azure ARM Application ID. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_application_key: Azure ARM Application key. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_directory_id: Azure ARM Directory ID. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_subscription_id: Azure ARM Subscription ID. Required when creating an account for Azure.
        :param pulumi.Input[bool] audit_account: Enable account audit.
        :param pulumi.Input[str] aws_access_key: AWS Access Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        :param pulumi.Input[str] aws_account_number: AWS Account number to associate with Aviatrix account. Required when creating an account for AWS.
        :param pulumi.Input[str] aws_gateway_role_app: A separate AWS App role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_ec2` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        :param pulumi.Input[str] aws_gateway_role_ec2: A separate AWS EC2 role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_app` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        :param pulumi.Input[bool] aws_iam: AWS IAM-role based flag, this option is for UserConnect.
        :param pulumi.Input[str] aws_role_app: AWS App role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        :param pulumi.Input[str] aws_role_ec2: AWS EC2 role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        :param pulumi.Input[str] aws_secret_key: AWS Secret Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        :param pulumi.Input[str] awschina_access_key: AWSChina Access Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_account_number: AWSChina Account number to associate with Aviatrix account. Required when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[bool] awschina_iam: AWSChina IAM-role based flag. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_role_app: AWSChina App role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_role_ec2: AWSChina EC2 role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_secret_key: AWSChina Secret Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_access_key: AWS Access Key. Required when creating an account for AWSGov.
        :param pulumi.Input[str] awsgov_account_number: AWSGov Account number to associate with Aviatrix account. Required when creating an account for AWSGov.
        :param pulumi.Input[bool] awsgov_iam: AWSGov IAM-role based flag. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_role_app: AWSGov App role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_role_ec2: AWSGov EC2 role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_secret_key: AWS Secret Key. Required when creating an account for AWSGov.
        :param pulumi.Input[str] awss_account_number: AWS Secret Region Account Number. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_ca_chain_cert: AWS Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_account_name: AWS Secret Region Account Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_agency: AWS Secret Region CAP Agency. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert: AWS Secret Region CAP Certificate local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert_key: AWS Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_role_name: AWS Secret Region Role Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_url: AWS Secret Region CAP Url. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_account_number: AWS Top Secret Region Account Number. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_ca_chain_cert: AWS Top Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_agency: AWS Top Secret Region CAP Agency. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert: AWS Top Secret Region CAP Certificate local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert_key: AWS Top Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_mission: AWS Top Secret Region Mission. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_role_name: AWS Top Secret Region Role Name. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_url: AWS Top Secret Region CAP Url. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] azurechina_application_id: AzureChina ARM Application ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_application_key: AzureChina ARM Application key. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_directory_id: AzureChina ARM Directory ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_subscription_id: AzureChina ARM Subscription ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azuregov_application_id: AzureGov ARM Application ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_application_key: AzureGov ARM Application key. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_directory_id: AzureGov ARM Directory ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_subscription_id: AzureGov ARM Subscription ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[int] cloud_type: Type of cloud service provider. Only AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina and Alibaba Cloud are supported currently. Enter 1 for AWS, 4 for GCP, 8 for Azure, 16 for OCI, 32 for AzureGov, 256 for AWSGov, 1024 for AWSChina or 2048 for AzureChina, 8192 for Alibaba Cloud.
        :param pulumi.Input[str] gcloud_project_credentials_filepath: GCloud Project Credentials [local filepath].json. Required when creating an account for GCP.
        :param pulumi.Input[str] gcloud_project_id: GCloud Project ID.
        :param pulumi.Input[str] oci_api_private_key_filepath: Oracle OCI API Private Key local file path. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_compartment_id: Oracle OCI Compartment ID. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_tenancy_id: Oracle OCI Tenancy ID. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_user_id: Oracle OCI User ID. Required when creating an account for OCI.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] rbac_groups: A list of existing RBAC group names. This attribute should only be used when creating an account. Updating this attribute will have no effect. Available as of provider version R2.23.0+.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AviatrixAccountArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        The **aviatrix_account** resource allows the creation and management of Aviatrix cloud accounts.

        > **NOTE:** With the release of Controller 5.4 (compatible with Aviatrix provider R2.13), Role-Based Access Control (RBAC) is now integrated into the Accounts workflow. Any **aviatrix_account** created in 5.3 by default will have admin privileges (attached to the 'admin' RBAC permission group). In 5.4, any new accounts created will not be attached to any RBAC group unless otherwise specified through the **aviatrix_rbac_group_access_account_attachment** resource.

        ## Import

        **account** can be imported using the `account_name` (when doing import, need to leave sensitive attributes blank), e.g.

        ```sh
         $ pulumi import aviatrix:index/aviatrixAccount:AviatrixAccount test account_name
        ```

        :param str resource_name: The name of the resource.
        :param AviatrixAccountArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AviatrixAccountArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_name: Optional[pulumi.Input[str]] = None,
                 alicloud_access_key: Optional[pulumi.Input[str]] = None,
                 alicloud_account_id: Optional[pulumi.Input[str]] = None,
                 alicloud_secret_key: Optional[pulumi.Input[str]] = None,
                 arm_application_id: Optional[pulumi.Input[str]] = None,
                 arm_application_key: Optional[pulumi.Input[str]] = None,
                 arm_directory_id: Optional[pulumi.Input[str]] = None,
                 arm_subscription_id: Optional[pulumi.Input[str]] = None,
                 audit_account: Optional[pulumi.Input[bool]] = None,
                 aws_access_key: Optional[pulumi.Input[str]] = None,
                 aws_account_number: Optional[pulumi.Input[str]] = None,
                 aws_gateway_role_app: Optional[pulumi.Input[str]] = None,
                 aws_gateway_role_ec2: Optional[pulumi.Input[str]] = None,
                 aws_iam: Optional[pulumi.Input[bool]] = None,
                 aws_role_app: Optional[pulumi.Input[str]] = None,
                 aws_role_ec2: Optional[pulumi.Input[str]] = None,
                 aws_secret_key: Optional[pulumi.Input[str]] = None,
                 awschina_access_key: Optional[pulumi.Input[str]] = None,
                 awschina_account_number: Optional[pulumi.Input[str]] = None,
                 awschina_iam: Optional[pulumi.Input[bool]] = None,
                 awschina_role_app: Optional[pulumi.Input[str]] = None,
                 awschina_role_ec2: Optional[pulumi.Input[str]] = None,
                 awschina_secret_key: Optional[pulumi.Input[str]] = None,
                 awsgov_access_key: Optional[pulumi.Input[str]] = None,
                 awsgov_account_number: Optional[pulumi.Input[str]] = None,
                 awsgov_iam: Optional[pulumi.Input[bool]] = None,
                 awsgov_role_app: Optional[pulumi.Input[str]] = None,
                 awsgov_role_ec2: Optional[pulumi.Input[str]] = None,
                 awsgov_secret_key: Optional[pulumi.Input[str]] = None,
                 awss_account_number: Optional[pulumi.Input[str]] = None,
                 awss_ca_chain_cert: Optional[pulumi.Input[str]] = None,
                 awss_cap_account_name: Optional[pulumi.Input[str]] = None,
                 awss_cap_agency: Optional[pulumi.Input[str]] = None,
                 awss_cap_cert: Optional[pulumi.Input[str]] = None,
                 awss_cap_cert_key: Optional[pulumi.Input[str]] = None,
                 awss_cap_role_name: Optional[pulumi.Input[str]] = None,
                 awss_cap_url: Optional[pulumi.Input[str]] = None,
                 awsts_account_number: Optional[pulumi.Input[str]] = None,
                 awsts_ca_chain_cert: Optional[pulumi.Input[str]] = None,
                 awsts_cap_agency: Optional[pulumi.Input[str]] = None,
                 awsts_cap_cert: Optional[pulumi.Input[str]] = None,
                 awsts_cap_cert_key: Optional[pulumi.Input[str]] = None,
                 awsts_cap_mission: Optional[pulumi.Input[str]] = None,
                 awsts_cap_role_name: Optional[pulumi.Input[str]] = None,
                 awsts_cap_url: Optional[pulumi.Input[str]] = None,
                 azurechina_application_id: Optional[pulumi.Input[str]] = None,
                 azurechina_application_key: Optional[pulumi.Input[str]] = None,
                 azurechina_directory_id: Optional[pulumi.Input[str]] = None,
                 azurechina_subscription_id: Optional[pulumi.Input[str]] = None,
                 azuregov_application_id: Optional[pulumi.Input[str]] = None,
                 azuregov_application_key: Optional[pulumi.Input[str]] = None,
                 azuregov_directory_id: Optional[pulumi.Input[str]] = None,
                 azuregov_subscription_id: Optional[pulumi.Input[str]] = None,
                 cloud_type: Optional[pulumi.Input[int]] = None,
                 gcloud_project_credentials_filepath: Optional[pulumi.Input[str]] = None,
                 gcloud_project_id: Optional[pulumi.Input[str]] = None,
                 oci_api_private_key_filepath: Optional[pulumi.Input[str]] = None,
                 oci_compartment_id: Optional[pulumi.Input[str]] = None,
                 oci_tenancy_id: Optional[pulumi.Input[str]] = None,
                 oci_user_id: Optional[pulumi.Input[str]] = None,
                 rbac_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AviatrixAccountArgs.__new__(AviatrixAccountArgs)

            if account_name is None and not opts.urn:
                raise TypeError("Missing required property 'account_name'")
            __props__.__dict__["account_name"] = account_name
            __props__.__dict__["alicloud_access_key"] = None if alicloud_access_key is None else pulumi.Output.secret(alicloud_access_key)
            __props__.__dict__["alicloud_account_id"] = alicloud_account_id
            __props__.__dict__["alicloud_secret_key"] = None if alicloud_secret_key is None else pulumi.Output.secret(alicloud_secret_key)
            __props__.__dict__["arm_application_id"] = None if arm_application_id is None else pulumi.Output.secret(arm_application_id)
            __props__.__dict__["arm_application_key"] = None if arm_application_key is None else pulumi.Output.secret(arm_application_key)
            __props__.__dict__["arm_directory_id"] = None if arm_directory_id is None else pulumi.Output.secret(arm_directory_id)
            __props__.__dict__["arm_subscription_id"] = arm_subscription_id
            __props__.__dict__["audit_account"] = audit_account
            __props__.__dict__["aws_access_key"] = None if aws_access_key is None else pulumi.Output.secret(aws_access_key)
            __props__.__dict__["aws_account_number"] = aws_account_number
            __props__.__dict__["aws_gateway_role_app"] = aws_gateway_role_app
            __props__.__dict__["aws_gateway_role_ec2"] = aws_gateway_role_ec2
            __props__.__dict__["aws_iam"] = aws_iam
            __props__.__dict__["aws_role_app"] = aws_role_app
            __props__.__dict__["aws_role_ec2"] = aws_role_ec2
            __props__.__dict__["aws_secret_key"] = None if aws_secret_key is None else pulumi.Output.secret(aws_secret_key)
            __props__.__dict__["awschina_access_key"] = None if awschina_access_key is None else pulumi.Output.secret(awschina_access_key)
            __props__.__dict__["awschina_account_number"] = awschina_account_number
            __props__.__dict__["awschina_iam"] = awschina_iam
            __props__.__dict__["awschina_role_app"] = awschina_role_app
            __props__.__dict__["awschina_role_ec2"] = awschina_role_ec2
            __props__.__dict__["awschina_secret_key"] = None if awschina_secret_key is None else pulumi.Output.secret(awschina_secret_key)
            __props__.__dict__["awsgov_access_key"] = None if awsgov_access_key is None else pulumi.Output.secret(awsgov_access_key)
            __props__.__dict__["awsgov_account_number"] = awsgov_account_number
            __props__.__dict__["awsgov_iam"] = awsgov_iam
            __props__.__dict__["awsgov_role_app"] = awsgov_role_app
            __props__.__dict__["awsgov_role_ec2"] = awsgov_role_ec2
            __props__.__dict__["awsgov_secret_key"] = None if awsgov_secret_key is None else pulumi.Output.secret(awsgov_secret_key)
            __props__.__dict__["awss_account_number"] = awss_account_number
            __props__.__dict__["awss_ca_chain_cert"] = None if awss_ca_chain_cert is None else pulumi.Output.secret(awss_ca_chain_cert)
            __props__.__dict__["awss_cap_account_name"] = awss_cap_account_name
            __props__.__dict__["awss_cap_agency"] = awss_cap_agency
            __props__.__dict__["awss_cap_cert"] = None if awss_cap_cert is None else pulumi.Output.secret(awss_cap_cert)
            __props__.__dict__["awss_cap_cert_key"] = None if awss_cap_cert_key is None else pulumi.Output.secret(awss_cap_cert_key)
            __props__.__dict__["awss_cap_role_name"] = awss_cap_role_name
            __props__.__dict__["awss_cap_url"] = awss_cap_url
            __props__.__dict__["awsts_account_number"] = awsts_account_number
            __props__.__dict__["awsts_ca_chain_cert"] = None if awsts_ca_chain_cert is None else pulumi.Output.secret(awsts_ca_chain_cert)
            __props__.__dict__["awsts_cap_agency"] = awsts_cap_agency
            __props__.__dict__["awsts_cap_cert"] = None if awsts_cap_cert is None else pulumi.Output.secret(awsts_cap_cert)
            __props__.__dict__["awsts_cap_cert_key"] = None if awsts_cap_cert_key is None else pulumi.Output.secret(awsts_cap_cert_key)
            __props__.__dict__["awsts_cap_mission"] = awsts_cap_mission
            __props__.__dict__["awsts_cap_role_name"] = awsts_cap_role_name
            __props__.__dict__["awsts_cap_url"] = awsts_cap_url
            __props__.__dict__["azurechina_application_id"] = None if azurechina_application_id is None else pulumi.Output.secret(azurechina_application_id)
            __props__.__dict__["azurechina_application_key"] = None if azurechina_application_key is None else pulumi.Output.secret(azurechina_application_key)
            __props__.__dict__["azurechina_directory_id"] = None if azurechina_directory_id is None else pulumi.Output.secret(azurechina_directory_id)
            __props__.__dict__["azurechina_subscription_id"] = azurechina_subscription_id
            __props__.__dict__["azuregov_application_id"] = None if azuregov_application_id is None else pulumi.Output.secret(azuregov_application_id)
            __props__.__dict__["azuregov_application_key"] = None if azuregov_application_key is None else pulumi.Output.secret(azuregov_application_key)
            __props__.__dict__["azuregov_directory_id"] = None if azuregov_directory_id is None else pulumi.Output.secret(azuregov_directory_id)
            __props__.__dict__["azuregov_subscription_id"] = azuregov_subscription_id
            if cloud_type is None and not opts.urn:
                raise TypeError("Missing required property 'cloud_type'")
            __props__.__dict__["cloud_type"] = cloud_type
            __props__.__dict__["gcloud_project_credentials_filepath"] = gcloud_project_credentials_filepath
            __props__.__dict__["gcloud_project_id"] = gcloud_project_id
            __props__.__dict__["oci_api_private_key_filepath"] = None if oci_api_private_key_filepath is None else pulumi.Output.secret(oci_api_private_key_filepath)
            __props__.__dict__["oci_compartment_id"] = None if oci_compartment_id is None else pulumi.Output.secret(oci_compartment_id)
            __props__.__dict__["oci_tenancy_id"] = None if oci_tenancy_id is None else pulumi.Output.secret(oci_tenancy_id)
            __props__.__dict__["oci_user_id"] = None if oci_user_id is None else pulumi.Output.secret(oci_user_id)
            __props__.__dict__["rbac_groups"] = rbac_groups
            __props__.__dict__["aws_ca_cert_path"] = None
            __props__.__dict__["awss_cap_cert_key_path"] = None
            __props__.__dict__["awss_cap_cert_path"] = None
            __props__.__dict__["awsts_cap_cert_key_path"] = None
            __props__.__dict__["awsts_cap_cert_path"] = None
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["alicloudAccessKey", "alicloudSecretKey", "armApplicationId", "armApplicationKey", "armDirectoryId", "awsAccessKey", "awsSecretKey", "awschinaAccessKey", "awschinaSecretKey", "awsgovAccessKey", "awsgovSecretKey", "awssCaChainCert", "awssCapCert", "awssCapCertKey", "awstsCaChainCert", "awstsCapCert", "awstsCapCertKey", "azurechinaApplicationId", "azurechinaApplicationKey", "azurechinaDirectoryId", "azuregovApplicationId", "azuregovApplicationKey", "azuregovDirectoryId", "ociApiPrivateKeyFilepath", "ociCompartmentId", "ociTenancyId", "ociUserId"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(AviatrixAccount, __self__).__init__(
            'aviatrix:index/aviatrixAccount:AviatrixAccount',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_name: Optional[pulumi.Input[str]] = None,
            alicloud_access_key: Optional[pulumi.Input[str]] = None,
            alicloud_account_id: Optional[pulumi.Input[str]] = None,
            alicloud_secret_key: Optional[pulumi.Input[str]] = None,
            arm_application_id: Optional[pulumi.Input[str]] = None,
            arm_application_key: Optional[pulumi.Input[str]] = None,
            arm_directory_id: Optional[pulumi.Input[str]] = None,
            arm_subscription_id: Optional[pulumi.Input[str]] = None,
            audit_account: Optional[pulumi.Input[bool]] = None,
            aws_access_key: Optional[pulumi.Input[str]] = None,
            aws_account_number: Optional[pulumi.Input[str]] = None,
            aws_ca_cert_path: Optional[pulumi.Input[str]] = None,
            aws_gateway_role_app: Optional[pulumi.Input[str]] = None,
            aws_gateway_role_ec2: Optional[pulumi.Input[str]] = None,
            aws_iam: Optional[pulumi.Input[bool]] = None,
            aws_role_app: Optional[pulumi.Input[str]] = None,
            aws_role_ec2: Optional[pulumi.Input[str]] = None,
            aws_secret_key: Optional[pulumi.Input[str]] = None,
            awschina_access_key: Optional[pulumi.Input[str]] = None,
            awschina_account_number: Optional[pulumi.Input[str]] = None,
            awschina_iam: Optional[pulumi.Input[bool]] = None,
            awschina_role_app: Optional[pulumi.Input[str]] = None,
            awschina_role_ec2: Optional[pulumi.Input[str]] = None,
            awschina_secret_key: Optional[pulumi.Input[str]] = None,
            awsgov_access_key: Optional[pulumi.Input[str]] = None,
            awsgov_account_number: Optional[pulumi.Input[str]] = None,
            awsgov_iam: Optional[pulumi.Input[bool]] = None,
            awsgov_role_app: Optional[pulumi.Input[str]] = None,
            awsgov_role_ec2: Optional[pulumi.Input[str]] = None,
            awsgov_secret_key: Optional[pulumi.Input[str]] = None,
            awss_account_number: Optional[pulumi.Input[str]] = None,
            awss_ca_chain_cert: Optional[pulumi.Input[str]] = None,
            awss_cap_account_name: Optional[pulumi.Input[str]] = None,
            awss_cap_agency: Optional[pulumi.Input[str]] = None,
            awss_cap_cert: Optional[pulumi.Input[str]] = None,
            awss_cap_cert_key: Optional[pulumi.Input[str]] = None,
            awss_cap_cert_key_path: Optional[pulumi.Input[str]] = None,
            awss_cap_cert_path: Optional[pulumi.Input[str]] = None,
            awss_cap_role_name: Optional[pulumi.Input[str]] = None,
            awss_cap_url: Optional[pulumi.Input[str]] = None,
            awsts_account_number: Optional[pulumi.Input[str]] = None,
            awsts_ca_chain_cert: Optional[pulumi.Input[str]] = None,
            awsts_cap_agency: Optional[pulumi.Input[str]] = None,
            awsts_cap_cert: Optional[pulumi.Input[str]] = None,
            awsts_cap_cert_key: Optional[pulumi.Input[str]] = None,
            awsts_cap_cert_key_path: Optional[pulumi.Input[str]] = None,
            awsts_cap_cert_path: Optional[pulumi.Input[str]] = None,
            awsts_cap_mission: Optional[pulumi.Input[str]] = None,
            awsts_cap_role_name: Optional[pulumi.Input[str]] = None,
            awsts_cap_url: Optional[pulumi.Input[str]] = None,
            azurechina_application_id: Optional[pulumi.Input[str]] = None,
            azurechina_application_key: Optional[pulumi.Input[str]] = None,
            azurechina_directory_id: Optional[pulumi.Input[str]] = None,
            azurechina_subscription_id: Optional[pulumi.Input[str]] = None,
            azuregov_application_id: Optional[pulumi.Input[str]] = None,
            azuregov_application_key: Optional[pulumi.Input[str]] = None,
            azuregov_directory_id: Optional[pulumi.Input[str]] = None,
            azuregov_subscription_id: Optional[pulumi.Input[str]] = None,
            cloud_type: Optional[pulumi.Input[int]] = None,
            gcloud_project_credentials_filepath: Optional[pulumi.Input[str]] = None,
            gcloud_project_id: Optional[pulumi.Input[str]] = None,
            oci_api_private_key_filepath: Optional[pulumi.Input[str]] = None,
            oci_compartment_id: Optional[pulumi.Input[str]] = None,
            oci_tenancy_id: Optional[pulumi.Input[str]] = None,
            oci_user_id: Optional[pulumi.Input[str]] = None,
            rbac_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None) -> 'AviatrixAccount':
        """
        Get an existing AviatrixAccount resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] account_name: Account name. This can be used for logging in to CloudN console or UserConnect controller.
        :param pulumi.Input[str] alicloud_access_key: Alibaba Cloud Access Key. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] alicloud_account_id: Alibaba Cloud Account number to associate with Aviatrix account. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] alicloud_secret_key: Alibaba Cloud Secret Key. Required when creating an account for Alibaba Cloud.
        :param pulumi.Input[str] arm_application_id: Azure ARM Application ID. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_application_key: Azure ARM Application key. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_directory_id: Azure ARM Directory ID. Required when creating an account for Azure.
        :param pulumi.Input[str] arm_subscription_id: Azure ARM Subscription ID. Required when creating an account for Azure.
        :param pulumi.Input[bool] audit_account: Enable account audit.
        :param pulumi.Input[str] aws_access_key: AWS Access Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        :param pulumi.Input[str] aws_account_number: AWS Account number to associate with Aviatrix account. Required when creating an account for AWS.
        :param pulumi.Input[str] aws_ca_cert_path: (Optional) AWS Top Secret Region or Secret Region Custom Certificate Authority file name on the controller. Available as of provider R2.19.5+.
        :param pulumi.Input[str] aws_gateway_role_app: A separate AWS App role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_ec2` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        :param pulumi.Input[str] aws_gateway_role_ec2: A separate AWS EC2 role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_app` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        :param pulumi.Input[bool] aws_iam: AWS IAM-role based flag, this option is for UserConnect.
        :param pulumi.Input[str] aws_role_app: AWS App role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        :param pulumi.Input[str] aws_role_ec2: AWS EC2 role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        :param pulumi.Input[str] aws_secret_key: AWS Secret Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        :param pulumi.Input[str] awschina_access_key: AWSChina Access Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_account_number: AWSChina Account number to associate with Aviatrix account. Required when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[bool] awschina_iam: AWSChina IAM-role based flag. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_role_app: AWSChina App role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_role_ec2: AWSChina EC2 role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awschina_secret_key: AWSChina Secret Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_access_key: AWS Access Key. Required when creating an account for AWSGov.
        :param pulumi.Input[str] awsgov_account_number: AWSGov Account number to associate with Aviatrix account. Required when creating an account for AWSGov.
        :param pulumi.Input[bool] awsgov_iam: AWSGov IAM-role based flag. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_role_app: AWSGov App role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_role_ec2: AWSGov EC2 role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        :param pulumi.Input[str] awsgov_secret_key: AWS Secret Key. Required when creating an account for AWSGov.
        :param pulumi.Input[str] awss_account_number: AWS Secret Region Account Number. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_ca_chain_cert: AWS Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_account_name: AWS Secret Region Account Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_agency: AWS Secret Region CAP Agency. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert: AWS Secret Region CAP Certificate local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert_key: AWS Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert_key_path: (Optional) AWS Secret Region CAP Certificate Key file name on the controller. Available as of provider R2.19.5+.
        :param pulumi.Input[str] awss_cap_cert_path: (Optional) AWS Secret Region CAP Certificate file name on the controller. Available as of provider R2.19.5+.
        :param pulumi.Input[str] awss_cap_role_name: AWS Secret Region Role Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awss_cap_url: AWS Secret Region CAP Url. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_account_number: AWS Top Secret Region Account Number. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_ca_chain_cert: AWS Top Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_agency: AWS Top Secret Region CAP Agency. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert: AWS Top Secret Region CAP Certificate local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert_key: AWS Top Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert_key_path: (Optional) AWS Top Secret Region CAP Certificate Key file name on the controller. Available as of provider R2.19.5+.
        :param pulumi.Input[str] awsts_cap_cert_path: (Optional) AWS Top Secret Region CAP Certificate file name on the controller. Available as of provider R2.19.5+.
        :param pulumi.Input[str] awsts_cap_mission: AWS Top Secret Region Mission. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_role_name: AWS Top Secret Region Role Name. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] awsts_cap_url: AWS Top Secret Region CAP Url. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        :param pulumi.Input[str] azurechina_application_id: AzureChina ARM Application ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_application_key: AzureChina ARM Application key. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_directory_id: AzureChina ARM Directory ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azurechina_subscription_id: AzureChina ARM Subscription ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        :param pulumi.Input[str] azuregov_application_id: AzureGov ARM Application ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_application_key: AzureGov ARM Application key. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_directory_id: AzureGov ARM Directory ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[str] azuregov_subscription_id: AzureGov ARM Subscription ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        :param pulumi.Input[int] cloud_type: Type of cloud service provider. Only AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina and Alibaba Cloud are supported currently. Enter 1 for AWS, 4 for GCP, 8 for Azure, 16 for OCI, 32 for AzureGov, 256 for AWSGov, 1024 for AWSChina or 2048 for AzureChina, 8192 for Alibaba Cloud.
        :param pulumi.Input[str] gcloud_project_credentials_filepath: GCloud Project Credentials [local filepath].json. Required when creating an account for GCP.
        :param pulumi.Input[str] gcloud_project_id: GCloud Project ID.
        :param pulumi.Input[str] oci_api_private_key_filepath: Oracle OCI API Private Key local file path. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_compartment_id: Oracle OCI Compartment ID. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_tenancy_id: Oracle OCI Tenancy ID. Required when creating an account for OCI.
        :param pulumi.Input[str] oci_user_id: Oracle OCI User ID. Required when creating an account for OCI.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] rbac_groups: A list of existing RBAC group names. This attribute should only be used when creating an account. Updating this attribute will have no effect. Available as of provider version R2.23.0+.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AviatrixAccountState.__new__(_AviatrixAccountState)

        __props__.__dict__["account_name"] = account_name
        __props__.__dict__["alicloud_access_key"] = alicloud_access_key
        __props__.__dict__["alicloud_account_id"] = alicloud_account_id
        __props__.__dict__["alicloud_secret_key"] = alicloud_secret_key
        __props__.__dict__["arm_application_id"] = arm_application_id
        __props__.__dict__["arm_application_key"] = arm_application_key
        __props__.__dict__["arm_directory_id"] = arm_directory_id
        __props__.__dict__["arm_subscription_id"] = arm_subscription_id
        __props__.__dict__["audit_account"] = audit_account
        __props__.__dict__["aws_access_key"] = aws_access_key
        __props__.__dict__["aws_account_number"] = aws_account_number
        __props__.__dict__["aws_ca_cert_path"] = aws_ca_cert_path
        __props__.__dict__["aws_gateway_role_app"] = aws_gateway_role_app
        __props__.__dict__["aws_gateway_role_ec2"] = aws_gateway_role_ec2
        __props__.__dict__["aws_iam"] = aws_iam
        __props__.__dict__["aws_role_app"] = aws_role_app
        __props__.__dict__["aws_role_ec2"] = aws_role_ec2
        __props__.__dict__["aws_secret_key"] = aws_secret_key
        __props__.__dict__["awschina_access_key"] = awschina_access_key
        __props__.__dict__["awschina_account_number"] = awschina_account_number
        __props__.__dict__["awschina_iam"] = awschina_iam
        __props__.__dict__["awschina_role_app"] = awschina_role_app
        __props__.__dict__["awschina_role_ec2"] = awschina_role_ec2
        __props__.__dict__["awschina_secret_key"] = awschina_secret_key
        __props__.__dict__["awsgov_access_key"] = awsgov_access_key
        __props__.__dict__["awsgov_account_number"] = awsgov_account_number
        __props__.__dict__["awsgov_iam"] = awsgov_iam
        __props__.__dict__["awsgov_role_app"] = awsgov_role_app
        __props__.__dict__["awsgov_role_ec2"] = awsgov_role_ec2
        __props__.__dict__["awsgov_secret_key"] = awsgov_secret_key
        __props__.__dict__["awss_account_number"] = awss_account_number
        __props__.__dict__["awss_ca_chain_cert"] = awss_ca_chain_cert
        __props__.__dict__["awss_cap_account_name"] = awss_cap_account_name
        __props__.__dict__["awss_cap_agency"] = awss_cap_agency
        __props__.__dict__["awss_cap_cert"] = awss_cap_cert
        __props__.__dict__["awss_cap_cert_key"] = awss_cap_cert_key
        __props__.__dict__["awss_cap_cert_key_path"] = awss_cap_cert_key_path
        __props__.__dict__["awss_cap_cert_path"] = awss_cap_cert_path
        __props__.__dict__["awss_cap_role_name"] = awss_cap_role_name
        __props__.__dict__["awss_cap_url"] = awss_cap_url
        __props__.__dict__["awsts_account_number"] = awsts_account_number
        __props__.__dict__["awsts_ca_chain_cert"] = awsts_ca_chain_cert
        __props__.__dict__["awsts_cap_agency"] = awsts_cap_agency
        __props__.__dict__["awsts_cap_cert"] = awsts_cap_cert
        __props__.__dict__["awsts_cap_cert_key"] = awsts_cap_cert_key
        __props__.__dict__["awsts_cap_cert_key_path"] = awsts_cap_cert_key_path
        __props__.__dict__["awsts_cap_cert_path"] = awsts_cap_cert_path
        __props__.__dict__["awsts_cap_mission"] = awsts_cap_mission
        __props__.__dict__["awsts_cap_role_name"] = awsts_cap_role_name
        __props__.__dict__["awsts_cap_url"] = awsts_cap_url
        __props__.__dict__["azurechina_application_id"] = azurechina_application_id
        __props__.__dict__["azurechina_application_key"] = azurechina_application_key
        __props__.__dict__["azurechina_directory_id"] = azurechina_directory_id
        __props__.__dict__["azurechina_subscription_id"] = azurechina_subscription_id
        __props__.__dict__["azuregov_application_id"] = azuregov_application_id
        __props__.__dict__["azuregov_application_key"] = azuregov_application_key
        __props__.__dict__["azuregov_directory_id"] = azuregov_directory_id
        __props__.__dict__["azuregov_subscription_id"] = azuregov_subscription_id
        __props__.__dict__["cloud_type"] = cloud_type
        __props__.__dict__["gcloud_project_credentials_filepath"] = gcloud_project_credentials_filepath
        __props__.__dict__["gcloud_project_id"] = gcloud_project_id
        __props__.__dict__["oci_api_private_key_filepath"] = oci_api_private_key_filepath
        __props__.__dict__["oci_compartment_id"] = oci_compartment_id
        __props__.__dict__["oci_tenancy_id"] = oci_tenancy_id
        __props__.__dict__["oci_user_id"] = oci_user_id
        __props__.__dict__["rbac_groups"] = rbac_groups
        return AviatrixAccount(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="accountName")
    def account_name(self) -> pulumi.Output[str]:
        """
        Account name. This can be used for logging in to CloudN console or UserConnect controller.
        """
        return pulumi.get(self, "account_name")

    @property
    @pulumi.getter(name="alicloudAccessKey")
    def alicloud_access_key(self) -> pulumi.Output[Optional[str]]:
        """
        Alibaba Cloud Access Key. Required when creating an account for Alibaba Cloud.
        """
        return pulumi.get(self, "alicloud_access_key")

    @property
    @pulumi.getter(name="alicloudAccountId")
    def alicloud_account_id(self) -> pulumi.Output[Optional[str]]:
        """
        Alibaba Cloud Account number to associate with Aviatrix account. Required when creating an account for Alibaba Cloud.
        """
        return pulumi.get(self, "alicloud_account_id")

    @property
    @pulumi.getter(name="alicloudSecretKey")
    def alicloud_secret_key(self) -> pulumi.Output[Optional[str]]:
        """
        Alibaba Cloud Secret Key. Required when creating an account for Alibaba Cloud.
        """
        return pulumi.get(self, "alicloud_secret_key")

    @property
    @pulumi.getter(name="armApplicationId")
    def arm_application_id(self) -> pulumi.Output[Optional[str]]:
        """
        Azure ARM Application ID. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_application_id")

    @property
    @pulumi.getter(name="armApplicationKey")
    def arm_application_key(self) -> pulumi.Output[Optional[str]]:
        """
        Azure ARM Application key. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_application_key")

    @property
    @pulumi.getter(name="armDirectoryId")
    def arm_directory_id(self) -> pulumi.Output[Optional[str]]:
        """
        Azure ARM Directory ID. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_directory_id")

    @property
    @pulumi.getter(name="armSubscriptionId")
    def arm_subscription_id(self) -> pulumi.Output[Optional[str]]:
        """
        Azure ARM Subscription ID. Required when creating an account for Azure.
        """
        return pulumi.get(self, "arm_subscription_id")

    @property
    @pulumi.getter(name="auditAccount")
    def audit_account(self) -> pulumi.Output[Optional[bool]]:
        """
        Enable account audit.
        """
        return pulumi.get(self, "audit_account")

    @property
    @pulumi.getter(name="awsAccessKey")
    def aws_access_key(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Access Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_access_key")

    @property
    @pulumi.getter(name="awsAccountNumber")
    def aws_account_number(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Account number to associate with Aviatrix account. Required when creating an account for AWS.
        """
        return pulumi.get(self, "aws_account_number")

    @property
    @pulumi.getter(name="awsCaCertPath")
    def aws_ca_cert_path(self) -> pulumi.Output[str]:
        """
        (Optional) AWS Top Secret Region or Secret Region Custom Certificate Authority file name on the controller. Available as of provider R2.19.5+.
        """
        return pulumi.get(self, "aws_ca_cert_path")

    @property
    @pulumi.getter(name="awsGatewayRoleApp")
    def aws_gateway_role_app(self) -> pulumi.Output[Optional[str]]:
        """
        A separate AWS App role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_ec2` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "aws_gateway_role_app")

    @property
    @pulumi.getter(name="awsGatewayRoleEc2")
    def aws_gateway_role_ec2(self) -> pulumi.Output[Optional[str]]:
        """
        A separate AWS EC2 role ARN to assign to gateways created by the controller. Required when `aws_gateway_role_app` is set. Only allowed when `aws_iam`, `awsgov_iam`, or `awschina_iam` is "true" when creating an account for AWS, AWSGov or AWSChina, respectively. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "aws_gateway_role_ec2")

    @property
    @pulumi.getter(name="awsIam")
    def aws_iam(self) -> pulumi.Output[Optional[bool]]:
        """
        AWS IAM-role based flag, this option is for UserConnect.
        """
        return pulumi.get(self, "aws_iam")

    @property
    @pulumi.getter(name="awsRoleApp")
    def aws_role_app(self) -> pulumi.Output[str]:
        """
        AWS App role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_role_app")

    @property
    @pulumi.getter(name="awsRoleEc2")
    def aws_role_ec2(self) -> pulumi.Output[str]:
        """
        AWS EC2 role ARN, this option is for UserConnect. Required when `aws_iam` is "true" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_role_ec2")

    @property
    @pulumi.getter(name="awsSecretKey")
    def aws_secret_key(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Secret Key. Required when `aws_iam` is "false" and when creating an account for AWS.
        """
        return pulumi.get(self, "aws_secret_key")

    @property
    @pulumi.getter(name="awschinaAccessKey")
    def awschina_access_key(self) -> pulumi.Output[Optional[str]]:
        """
        AWSChina Access Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_access_key")

    @property
    @pulumi.getter(name="awschinaAccountNumber")
    def awschina_account_number(self) -> pulumi.Output[Optional[str]]:
        """
        AWSChina Account number to associate with Aviatrix account. Required when creating an account for AWSChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_account_number")

    @property
    @pulumi.getter(name="awschinaIam")
    def awschina_iam(self) -> pulumi.Output[Optional[bool]]:
        """
        AWSChina IAM-role based flag. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_iam")

    @property
    @pulumi.getter(name="awschinaRoleApp")
    def awschina_role_app(self) -> pulumi.Output[str]:
        """
        AWSChina App role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_role_app")

    @property
    @pulumi.getter(name="awschinaRoleEc2")
    def awschina_role_ec2(self) -> pulumi.Output[str]:
        """
        AWSChina EC2 role ARN. Available when `awschina_iam` is "true" and when creating an account for AWSChina. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_role_ec2")

    @property
    @pulumi.getter(name="awschinaSecretKey")
    def awschina_secret_key(self) -> pulumi.Output[Optional[str]]:
        """
        AWSChina Secret Key. Required when `awschina_iam` is "false" and when creating an account for AWSChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awschina_secret_key")

    @property
    @pulumi.getter(name="awsgovAccessKey")
    def awsgov_access_key(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Access Key. Required when creating an account for AWSGov.
        """
        return pulumi.get(self, "awsgov_access_key")

    @property
    @pulumi.getter(name="awsgovAccountNumber")
    def awsgov_account_number(self) -> pulumi.Output[Optional[str]]:
        """
        AWSGov Account number to associate with Aviatrix account. Required when creating an account for AWSGov.
        """
        return pulumi.get(self, "awsgov_account_number")

    @property
    @pulumi.getter(name="awsgovIam")
    def awsgov_iam(self) -> pulumi.Output[Optional[bool]]:
        """
        AWSGov IAM-role based flag. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awsgov_iam")

    @property
    @pulumi.getter(name="awsgovRoleApp")
    def awsgov_role_app(self) -> pulumi.Output[str]:
        """
        AWSGov App role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awsgov_role_app")

    @property
    @pulumi.getter(name="awsgovRoleEc2")
    def awsgov_role_ec2(self) -> pulumi.Output[str]:
        """
        AWSGov EC2 role ARN. Available when `awsgov_iam` is "true" and when creating an account for AWSGov. If left empty, the ARN will be computed. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "awsgov_role_ec2")

    @property
    @pulumi.getter(name="awsgovSecretKey")
    def awsgov_secret_key(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Secret Key. Required when creating an account for AWSGov.
        """
        return pulumi.get(self, "awsgov_secret_key")

    @property
    @pulumi.getter(name="awssAccountNumber")
    def awss_account_number(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Secret Region Account Number. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_account_number")

    @property
    @pulumi.getter(name="awssCaChainCert")
    def awss_ca_chain_cert(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_ca_chain_cert")

    @property
    @pulumi.getter(name="awssCapAccountName")
    def awss_cap_account_name(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Secret Region Account Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_account_name")

    @property
    @pulumi.getter(name="awssCapAgency")
    def awss_cap_agency(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Secret Region CAP Agency. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_agency")

    @property
    @pulumi.getter(name="awssCapCert")
    def awss_cap_cert(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Secret Region CAP Certificate local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_cert")

    @property
    @pulumi.getter(name="awssCapCertKey")
    def awss_cap_cert_key(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_cert_key")

    @property
    @pulumi.getter(name="awssCapCertKeyPath")
    def awss_cap_cert_key_path(self) -> pulumi.Output[str]:
        """
        (Optional) AWS Secret Region CAP Certificate Key file name on the controller. Available as of provider R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_cert_key_path")

    @property
    @pulumi.getter(name="awssCapCertPath")
    def awss_cap_cert_path(self) -> pulumi.Output[str]:
        """
        (Optional) AWS Secret Region CAP Certificate file name on the controller. Available as of provider R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_cert_path")

    @property
    @pulumi.getter(name="awssCapRoleName")
    def awss_cap_role_name(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Secret Region Role Name. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_role_name")

    @property
    @pulumi.getter(name="awssCapUrl")
    def awss_cap_url(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Secret Region CAP Url. Required when creating an account in AWS Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awss_cap_url")

    @property
    @pulumi.getter(name="awstsAccountNumber")
    def awsts_account_number(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Top Secret Region Account Number. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_account_number")

    @property
    @pulumi.getter(name="awstsCaChainCert")
    def awsts_ca_chain_cert(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Top Secret Region Custom Certificate Authority local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_ca_chain_cert")

    @property
    @pulumi.getter(name="awstsCapAgency")
    def awsts_cap_agency(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Top Secret Region CAP Agency. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_agency")

    @property
    @pulumi.getter(name="awstsCapCert")
    def awsts_cap_cert(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Top Secret Region CAP Certificate local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_cert")

    @property
    @pulumi.getter(name="awstsCapCertKey")
    def awsts_cap_cert_key(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Top Secret Region CAP Certificate Key local file path. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_cert_key")

    @property
    @pulumi.getter(name="awstsCapCertKeyPath")
    def awsts_cap_cert_key_path(self) -> pulumi.Output[str]:
        """
        (Optional) AWS Top Secret Region CAP Certificate Key file name on the controller. Available as of provider R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_cert_key_path")

    @property
    @pulumi.getter(name="awstsCapCertPath")
    def awsts_cap_cert_path(self) -> pulumi.Output[str]:
        """
        (Optional) AWS Top Secret Region CAP Certificate file name on the controller. Available as of provider R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_cert_path")

    @property
    @pulumi.getter(name="awstsCapMission")
    def awsts_cap_mission(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Top Secret Region Mission. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_mission")

    @property
    @pulumi.getter(name="awstsCapRoleName")
    def awsts_cap_role_name(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Top Secret Region Role Name. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_role_name")

    @property
    @pulumi.getter(name="awstsCapUrl")
    def awsts_cap_url(self) -> pulumi.Output[Optional[str]]:
        """
        AWS Top Secret Region CAP Url. Required when creating an account in AWS Top Secret Region. Available as of provider version R2.19.5+.
        """
        return pulumi.get(self, "awsts_cap_url")

    @property
    @pulumi.getter(name="azurechinaApplicationId")
    def azurechina_application_id(self) -> pulumi.Output[Optional[str]]:
        """
        AzureChina ARM Application ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_application_id")

    @property
    @pulumi.getter(name="azurechinaApplicationKey")
    def azurechina_application_key(self) -> pulumi.Output[Optional[str]]:
        """
        AzureChina ARM Application key. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_application_key")

    @property
    @pulumi.getter(name="azurechinaDirectoryId")
    def azurechina_directory_id(self) -> pulumi.Output[Optional[str]]:
        """
        AzureChina ARM Directory ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_directory_id")

    @property
    @pulumi.getter(name="azurechinaSubscriptionId")
    def azurechina_subscription_id(self) -> pulumi.Output[Optional[str]]:
        """
        AzureChina ARM Subscription ID. Required when creating an account for AzureChina. Available as of provider version 2.19+.
        """
        return pulumi.get(self, "azurechina_subscription_id")

    @property
    @pulumi.getter(name="azuregovApplicationId")
    def azuregov_application_id(self) -> pulumi.Output[Optional[str]]:
        """
        AzureGov ARM Application ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_application_id")

    @property
    @pulumi.getter(name="azuregovApplicationKey")
    def azuregov_application_key(self) -> pulumi.Output[Optional[str]]:
        """
        AzureGov ARM Application key. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_application_key")

    @property
    @pulumi.getter(name="azuregovDirectoryId")
    def azuregov_directory_id(self) -> pulumi.Output[Optional[str]]:
        """
        AzureGov ARM Directory ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_directory_id")

    @property
    @pulumi.getter(name="azuregovSubscriptionId")
    def azuregov_subscription_id(self) -> pulumi.Output[Optional[str]]:
        """
        AzureGov ARM Subscription ID. Required when creating an account for AzureGov. Available as of provider version R2.19+.
        """
        return pulumi.get(self, "azuregov_subscription_id")

    @property
    @pulumi.getter(name="cloudType")
    def cloud_type(self) -> pulumi.Output[int]:
        """
        Type of cloud service provider. Only AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina and Alibaba Cloud are supported currently. Enter 1 for AWS, 4 for GCP, 8 for Azure, 16 for OCI, 32 for AzureGov, 256 for AWSGov, 1024 for AWSChina or 2048 for AzureChina, 8192 for Alibaba Cloud.
        """
        return pulumi.get(self, "cloud_type")

    @property
    @pulumi.getter(name="gcloudProjectCredentialsFilepath")
    def gcloud_project_credentials_filepath(self) -> pulumi.Output[Optional[str]]:
        """
        GCloud Project Credentials [local filepath].json. Required when creating an account for GCP.
        """
        return pulumi.get(self, "gcloud_project_credentials_filepath")

    @property
    @pulumi.getter(name="gcloudProjectId")
    def gcloud_project_id(self) -> pulumi.Output[Optional[str]]:
        """
        GCloud Project ID.
        """
        return pulumi.get(self, "gcloud_project_id")

    @property
    @pulumi.getter(name="ociApiPrivateKeyFilepath")
    def oci_api_private_key_filepath(self) -> pulumi.Output[Optional[str]]:
        """
        Oracle OCI API Private Key local file path. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_api_private_key_filepath")

    @property
    @pulumi.getter(name="ociCompartmentId")
    def oci_compartment_id(self) -> pulumi.Output[Optional[str]]:
        """
        Oracle OCI Compartment ID. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_compartment_id")

    @property
    @pulumi.getter(name="ociTenancyId")
    def oci_tenancy_id(self) -> pulumi.Output[Optional[str]]:
        """
        Oracle OCI Tenancy ID. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_tenancy_id")

    @property
    @pulumi.getter(name="ociUserId")
    def oci_user_id(self) -> pulumi.Output[Optional[str]]:
        """
        Oracle OCI User ID. Required when creating an account for OCI.
        """
        return pulumi.get(self, "oci_user_id")

    @property
    @pulumi.getter(name="rbacGroups")
    def rbac_groups(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        A list of existing RBAC group names. This attribute should only be used when creating an account. Updating this attribute will have no effect. Available as of provider version R2.23.0+.
        """
        return pulumi.get(self, "rbac_groups")

