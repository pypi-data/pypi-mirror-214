# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetAviatrixTransitGatewaysResult',
    'AwaitableGetAviatrixTransitGatewaysResult',
    'get_aviatrix_transit_gateways',
]

@pulumi.output_type
class GetAviatrixTransitGatewaysResult:
    """
    A collection of values returned by getAviatrixTransitGateways.
    """
    def __init__(__self__, gateway_lists=None, id=None):
        if gateway_lists and not isinstance(gateway_lists, list):
            raise TypeError("Expected argument 'gateway_lists' to be a list")
        pulumi.set(__self__, "gateway_lists", gateway_lists)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="gatewayLists")
    def gateway_lists(self) -> Sequence['outputs.GetAviatrixTransitGatewaysGatewayListResult']:
        """
        The list of all transit gateways
        """
        return pulumi.get(self, "gateway_lists")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetAviatrixTransitGatewaysResult(GetAviatrixTransitGatewaysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAviatrixTransitGatewaysResult(
            gateway_lists=self.gateway_lists,
            id=self.id)


def get_aviatrix_transit_gateways(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAviatrixTransitGatewaysResult:
    """
    The **aviatrix_transit_gateways** data source provides details about all transit gateways created by the Aviatrix Controller.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('aviatrix:index/getAviatrixTransitGateways:getAviatrixTransitGateways', __args__, opts=opts, typ=GetAviatrixTransitGatewaysResult).value

    return AwaitableGetAviatrixTransitGatewaysResult(
        gateway_lists=__ret__.gateway_lists,
        id=__ret__.id)
