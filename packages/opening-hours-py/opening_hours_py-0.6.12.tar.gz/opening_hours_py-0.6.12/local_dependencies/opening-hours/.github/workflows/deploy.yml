name: Lints, Tests, Deploy

on:
  - push

env:
  CARGO_TERM_COLOR: always

jobs:
  # ---
  # --- Run tests and lints for Rust library
  # ---
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        crate: ["opening-hours-syntax", ".", "compact-calendar"]
        toolchain: ["stable", "beta", "nightly"]

    defaults:
      run:
        working-directory: ${{ matrix.crate }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          default: true
          profile: minimal
          components: rustfmt, clippy

      - name: Display rust version
        run: |
          rustc --version
          cargo clippy -- --version
          cargo fmt -- --version

      - name: Lint
        run: cargo clippy -- -D warnings
        if: matrix.toolchain != 'nightly'

      - name: Format
        run: cargo fmt -- --check
        if: matrix.toolchain != 'nightly'

      - name: Tests
        run: cargo test

  # ---
  # --- Execute tests for python package
  # ---

  test-python:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: python

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dev dependancies
        run: poetry install

      - name: Build Python package
        run: poetry run maturin develop

      - name: Run doctests
        run: poetry run ./run_doctests.py

  # ---
  # --- Compute coverage and upload to codecov.io
  # ---
  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - name: Coverage
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: 0.20.1
          args: "--ignore-panics --ignore-tests"

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  # ---
  # --- Check that all versions are consistency accross packages
  # ---

  check-version:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: scripts

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependancies
        run: poetry install

      - name: Check version consistency
        run: poetry run ./check-version.py

  # ---
  # --- Build an deploy Rust packages
  # ---

  deploy-rust:
    runs-on: ubuntu-latest
    needs: [check-version, test]

    strategy:
      max-parallel: 1
      matrix:
        crate:
          - compact-calendar
          - opening-hours-syntax
          - .

    defaults:
      run:
        working-directory: ${{ matrix.crate }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - name: Login to crates.io
        run: cargo login $TOKEN
        if: github.ref == 'refs/heads/master'
        env:
          TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

      - name: Publish to crates.io
        run: cargo publish
        if: github.ref == 'refs/heads/master'

  # ---
  # --- Build and deploy Python bindings
  # ---

  deploy-python:
    runs-on: ubuntu-latest
    needs: [check-version, test, test-python]

    defaults:
      run:
        working-directory: python

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - uses: actions/setup-python@v4
        with:
          python-version: |
            3.9
            3.10
            3.11

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependancies globaly
        run: poetry config virtualenvs.create false && poetry install

      - name: Publish to pypi.org
        run: maturin publish -i python3.9 -i python3.10 -i python3.11 --username $USER --password $PASS
        if: github.ref == 'refs/heads/master'
        env:
          USER: remi-dupre
          PASS: ${{ secrets.PYPI_PASSWORD }}

  # ---
  # --- Build and deploy Python doc
  # ---

  deploy-python-doc:
    runs-on: ubuntu-latest
    needs: deploy-python

    defaults:
      run:
        working-directory: python

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependancies
        run: poetry install

      - name: Check packaging for pypi.org
        run: poetry run maturin develop

      - name: Build python documentation
        run: poetry run pdoc -o docs -d numpy opening_hours

      - name: Publish to github pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./python/docs
