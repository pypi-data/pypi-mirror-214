Metadata-Version: 2.1
Name: easylsb
Version: 1.0.9
Summary: Simple Python package for steganography
Description-Content-Type: text/markdown

<p><span><span style="font-family:Verdana, Arial, Helvetica, sans-serif;line-height:19px;text-indent:26px;"><span style="font-size:14px;"><span style="font-family:Arial;line-height:26px;"><br></span></span></span></span></p>

### This is a simple Python package for steganography

Now this package can automatically detect the encoding of the hidden text using the '-a' argument.
Code to hide information in the given image:
```python
import lsb
from PIL import Image
import numpy as np
img=Image.open('test.png')
img=np.array(img)
info=b'Some information'
hidden=lsb.lsbenc(img,info)
img_hidden=Image.fromarray(hidden)
img_hidden.save('hidden.png')# Must be a PNG,BMP,etc., not JPEG or WEBP
```

Code to get the hidden information from the given image:
```python
import lsb
from PIL import Image
import numpy as np
img=Image.open('test.png')# Must be a PNG,BMP,etc., not JPEG or WEBP
img=np.array(img)
info=lsb.lsbdec(img)
print(info)
```
#### RSA

RSA is now supported in easylsb 1.0.7.
Code:
```python
import lsb
from PIL import Image
import numpy as np
import rsa
pub,priv=rsa.newkeys(200)
img=Image.open('test.png')
img=np.array(img)
info=b'Some information'
# Hide
hidden=lsb.lsbenc(img,info,rsakey=pub)
img_hidden=Image.fromarray(hidden)
img_hidden.save('hidden.png')# Must be a PNG,BMP,etc., not JPEG or WEBP
# Recover
info=lsb.lsbdec(hidden,rsakey=priv)
print(info)# b'Some information'
```

It's very easy to use the StegSolve tool to get the hidden information, but easylsb package allows you to encrypt the information using DES or RSA.

<font color="red">WARNING: Python 2 is unsupported by easylsb since easylsb 1.0.7, if you're using Python 2 and want to install this package, you should use the command "pip install easylsb==1.0.6"</font>
